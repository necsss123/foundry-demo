{
    "GasBadStakingMining_00000000ce4604a0000000000000000000000014": {
        "contracts": [
            {
                "address": "00000000ce4604a0000000000000000000000014",
                "allMethods": [
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "UPGRADE_INTERFACE_VERSION",
                        "notpayable": true,
                        "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            }
                        ],
                        "sighash": "ad3cb1cc",
                        "sourceBytes": {
                            "begin": 1819,
                            "size": 58
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "_authorizeUpgrade",
                        "notpayable": true,
                        "originalFile": null,
                        "paramNames": [
                            "newImplementation"
                        ],
                        "returns": [],
                        "sighash": "0",
                        "sourceBytes": null,
                        "stateMutability": "nonpayable",
                        "visibility": "internal"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "contractName": "IERC20",
                                    "type": "Contract"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "add",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [
                            "_allocPoint",
                            "_lpToken",
                            "_withUpdate"
                        ],
                        "returns": [],
                        "sighash": "1eaaa045",
                        "sourceBytes": {
                            "begin": 4838,
                            "size": 652
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "compound",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [
                            "_poolId"
                        ],
                        "returns": [],
                        "sighash": "aa5f7e26",
                        "sourceBytes": {
                            "begin": 11259,
                            "size": 1520
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "constructor",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [],
                        "returns": [],
                        "sighash": "0",
                        "sourceBytes": {
                            "begin": 3668,
                            "size": 53
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "deposit",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [
                            "_poolId",
                            "_amount"
                        ],
                        "returns": [],
                        "sighash": "e2bbb158",
                        "sourceBytes": {
                            "begin": 7201,
                            "size": 1349
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "emergencyWithdraw",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [
                            "_poolId"
                        ],
                        "returns": [],
                        "sighash": "5312ea8e",
                        "sourceBytes": {
                            "begin": 10033,
                            "size": 1220
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "fund",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [
                            "_amount"
                        ],
                        "returns": [],
                        "sighash": "ca1d209d",
                        "sourceBytes": {
                            "begin": 4352,
                            "size": 328
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "getDeposited",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [
                            "_poolId",
                            "_user"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "e86facc5",
                        "sourceBytes": {
                            "begin": 15236,
                            "size": 202
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getEndTimestamp",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "74e94deb",
                        "sourceBytes": {
                            "begin": 14202,
                            "size": 95
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getPaidOut",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "b3458b4b",
                        "sourceBytes": {
                            "begin": 15444,
                            "size": 85
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "dynamicArrayBaseType": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    },
                                    "type": "Array"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "getPendingAndDepositedForUsers",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [
                            "users",
                            "poolId"
                        ],
                        "returns": [
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "dynamicArrayBaseType": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    },
                                    "type": "Array"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "dynamicArrayBaseType": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    },
                                    "type": "Array"
                                }
                            }
                        ],
                        "sighash": "fcfc1b14",
                        "sourceBytes": {
                            "begin": 14548,
                            "size": 562
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "getPendingReward",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [
                            "_poolId",
                            "_user"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "c59b1f3c",
                        "sourceBytes": {
                            "begin": 15782,
                            "size": 1761
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "getPoolInfo",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [
                            "poolId"
                        ],
                        "returns": [
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "astId": 55,
                                    "canonicalId": "src/GasBadStakingMining.sol|GasBadStakingMining.Pool",
                                    "containingContract": "GasBadStakingMining",
                                    "structMembers": [
                                        {
                                            "name": "lpToken",
                                            "type": {
                                                "contractName": "IERC20",
                                                "type": "Contract"
                                            }
                                        },
                                        {
                                            "name": "allocPoint",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "lastRewardTimestamp",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "accERC20PerShare",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "totalDeposits",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        }
                                    ],
                                    "structName": "Pool",
                                    "type": "UserDefinedStruct"
                                }
                            }
                        ],
                        "sighash": "2f380b35",
                        "sourceBytes": {
                            "begin": 14430,
                            "size": 112
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getPoolNum",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "212af18d",
                        "sourceBytes": {
                            "begin": 15138,
                            "size": 92
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getRewardPerSec",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "e0d41c02",
                        "sourceBytes": {
                            "begin": 13651,
                            "size": 98
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getRewardToken",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "contractName": "IERC20",
                                    "type": "Contract"
                                }
                            }
                        ],
                        "sighash": "69940d79",
                        "sourceBytes": {
                            "begin": 13755,
                            "size": 86
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getStakingMiningDuration",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "a242057a",
                        "sourceBytes": {
                            "begin": 14303,
                            "size": 121
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getStartTimestamp",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "1f89f25e",
                        "sourceBytes": {
                            "begin": 14097,
                            "size": 99
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getTotalAllocPoint",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "3a58b91a",
                        "sourceBytes": {
                            "begin": 13948,
                            "size": 101
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getTotalPending",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "3bd05400",
                        "sourceBytes": {
                            "begin": 17599,
                            "size": 427
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getTotalRewards",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "e627f2db",
                        "sourceBytes": {
                            "begin": 13847,
                            "size": 95
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "getUserInfoInPool",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [
                            "_poolId",
                            "_user"
                        ],
                        "returns": [
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "astId": 43,
                                    "canonicalId": "src/GasBadStakingMining.sol|GasBadStakingMining.User",
                                    "containingContract": "GasBadStakingMining",
                                    "structMembers": [
                                        {
                                            "name": "amount",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "rewardDebt",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "tokensUnlockTime",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "salesRegistered",
                                            "type": {
                                                "dynamicArrayBaseType": {
                                                    "primitiveName": "address",
                                                    "type": "Primitive"
                                                },
                                                "type": "Array"
                                            }
                                        }
                                    ],
                                    "structName": "User",
                                    "type": "UserDefinedStruct"
                                }
                            }
                        ],
                        "sighash": "f70fd81c",
                        "sourceBytes": {
                            "begin": 15535,
                            "size": 203
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "contractName": "IERC20",
                                    "type": "Contract"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "initialize",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [
                            "_erc20",
                            "_rewardPerSecond",
                            "_startTimestamp",
                            "_salesFactory"
                        ],
                        "returns": [],
                        "sighash": "9e3d87cd",
                        "sourceBytes": {
                            "begin": 3747,
                            "size": 445
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "massUpdatePools",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [],
                        "returns": [],
                        "sighash": "630b5ba1",
                        "sourceBytes": {
                            "begin": 5987,
                            "size": 186
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "owner",
                        "notpayable": true,
                        "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "8da5cb5b",
                        "sourceBytes": {
                            "begin": 2441,
                            "size": 144
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "proxiableUUID",
                        "notpayable": true,
                        "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "bytes32",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "52d1902d",
                        "sourceBytes": {
                            "begin": 3708,
                            "size": 134
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "renounceOwnership",
                        "notpayable": true,
                        "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
                        "paramNames": [],
                        "returns": [],
                        "sighash": "715018a6",
                        "sourceBytes": {
                            "begin": 3155,
                            "size": 101
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "set",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [
                            "_poolId",
                            "_allocPoint",
                            "_withUpdate"
                        ],
                        "returns": [],
                        "sighash": "64482f79",
                        "sourceBytes": {
                            "begin": 5536,
                            "size": 366
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setSalesFactory",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [
                            "_salesFactory"
                        ],
                        "returns": [],
                        "sighash": "3dfcb861",
                        "sourceBytes": {
                            "begin": 12785,
                            "size": 236
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setTokensUnlockTime",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [
                            "_poolId",
                            "_user",
                            "_tokensUnlockTime"
                        ],
                        "returns": [],
                        "sighash": "e6f04acc",
                        "sourceBytes": {
                            "begin": 13027,
                            "size": 536
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "transferOwnership",
                        "notpayable": true,
                        "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
                        "paramNames": [
                            "newOwner"
                        ],
                        "returns": [],
                        "sighash": "f2fde38b",
                        "sourceBytes": {
                            "begin": 3405,
                            "size": 215
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "updatePool",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [
                            "_pid"
                        ],
                        "returns": [],
                        "sighash": "51eb05a6",
                        "sourceBytes": {
                            "begin": 6232,
                            "size": 929
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "PackedBytes"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "upgradeToAndCall",
                        "notpayable": false,
                        "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
                        "paramNames": [
                            "newImplementation",
                            "data"
                        ],
                        "returns": [],
                        "sighash": "4f1ef286",
                        "sourceBytes": {
                            "begin": 4161,
                            "size": 214
                        },
                        "stateMutability": "payable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "version",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "54fd4d50",
                        "sourceBytes": {
                            "begin": 13569,
                            "size": 76
                        },
                        "stateMutability": "pure",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "withdraw",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [
                            "_poolId",
                            "_amount"
                        ],
                        "returns": [],
                        "sighash": "441a3e70",
                        "sourceBytes": {
                            "begin": 8646,
                            "size": 1346
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    }
                ],
                "bytecode": "",
                "compilerName": "solc",
                "compilerParameters": {
                    "optimizerOn": false,
                    "optimizerRuns": null,
                    "type": "SolcParameters",
                    "viaIR": true
                },
                "compilerVersion": "0.8.24",
                "constructorBytecode": "",
                "constructorSrcmap": "719:28697:0:-:0;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;3668:53;;;:::i;:::-;;;:::i;:::-;:::o;719:28697::-;;;;;;;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;986:7318:7:-;1163:13;1171:4;1163:13;:::i;:::-;;;986:7318::o;719:28697:0:-;;;;:::o;:::-;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;;;;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;9186:720:6:-;9236:196;;;;;;;;9530:26;;:::i;:::-;9557:102;;;;9673:15;;:1;:15;;:::i;:::-;9669:76;;9758:14;;:1;:14;;:::i;:::-;:34;;719:28697:0;;;;;9758:34:6;:::i;:::-;;;:::i;:::-;;9754:146;;9186:720;;:::o;9754:146::-;9808:33;719:28697:0;9808:14:6;719:28697:0;;;;;9808:1:6;:14;:33;:::i;:::-;719:28697:0;;;;;9860:29:6;;;;;:::i;:::-;;;;;;:::i;:::-;;;;9754:146;;;9669:76;9711:23;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;10902:366;10993:196;;;;;;;;11198:64;10902:366;:::o",
                "extensionContracts": [],
                "file": "src/GasBadStakingMining.sol",
                "immutables": [
                    {
                        "length": 32,
                        "offset": 17828,
                        "type": {
                            "location": "stack",
                            "typeDesc": {
                                "primitiveName": "address",
                                "type": "Primitive"
                            }
                        },
                        "varname": "__self"
                    },
                    {
                        "length": 32,
                        "offset": 17936,
                        "type": {
                            "location": "stack",
                            "typeDesc": {
                                "primitiveName": "address",
                                "type": "Primitive"
                            }
                        },
                        "varname": "__self"
                    },
                    {
                        "length": 32,
                        "offset": 18982,
                        "type": {
                            "location": "stack",
                            "typeDesc": {
                                "primitiveName": "address",
                                "type": "Primitive"
                            }
                        },
                        "varname": "__self"
                    }
                ],
                "internalFunctions": {
                    "0xf196e50000": {
                        "canonicalId": "src/GasBadStakingMining.sol|GasBadStakingMining",
                        "declaringContract": "GasBadStakingMining",
                        "method": {
                            "contractName": "GasBadStakingMining",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_authorizeUpgrade",
                            "notpayable": true,
                            "originalFile": "src/GasBadStakingMining.sol",
                            "paramNames": [
                                "newImplementation"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 4198,
                                "size": 98
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50001": {
                        "canonicalId": "src/GasBadStakingMining.sol|GasBadStakingMining",
                        "declaringContract": "GasBadStakingMining",
                        "method": {
                            "contractName": "GasBadStakingMining",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC20",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "add",
                            "notpayable": true,
                            "originalFile": "src/GasBadStakingMining.sol",
                            "paramNames": [
                                "_allocPoint",
                                "_lpToken",
                                "_withUpdate"
                            ],
                            "returns": [],
                            "sighash": "1eaaa045",
                            "sourceBytes": {
                                "begin": 4838,
                                "size": 652
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50002": {
                        "canonicalId": "src/GasBadStakingMining.sol|GasBadStakingMining",
                        "declaringContract": "GasBadStakingMining",
                        "method": {
                            "contractName": "GasBadStakingMining",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "getDeposited",
                            "notpayable": true,
                            "originalFile": "src/GasBadStakingMining.sol",
                            "paramNames": [
                                "_poolId",
                                "_user"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "e86facc5",
                            "sourceBytes": {
                                "begin": 15236,
                                "size": 202
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50003": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol|GasBadStakingMining",
                        "declaringContract": "GasBadStakingMining",
                        "method": {
                            "contractName": "GasBadStakingMining",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "upgradeToAndCall",
                            "notpayable": false,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
                            "paramNames": [
                                "newImplementation",
                                "data"
                            ],
                            "returns": [],
                            "sighash": "4f1ef286",
                            "sourceBytes": {
                                "begin": 4161,
                                "size": 214
                            },
                            "stateMutability": "payable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50004": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol|GasBadStakingMining",
                        "declaringContract": "GasBadStakingMining",
                        "method": {
                            "contractName": "GasBadStakingMining",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "transferOwnership",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
                            "paramNames": [
                                "newOwner"
                            ],
                            "returns": [],
                            "sighash": "f2fde38b",
                            "sourceBytes": {
                                "begin": 3405,
                                "size": 215
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50005": {
                        "canonicalId": "src/GasBadStakingMining.sol|GasBadStakingMining",
                        "declaringContract": "GasBadStakingMining",
                        "method": {
                            "contractName": "GasBadStakingMining",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC20",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "initialize",
                            "notpayable": true,
                            "originalFile": "src/GasBadStakingMining.sol",
                            "paramNames": [
                                "_erc20",
                                "_rewardPerSecond",
                                "_startTimestamp",
                                "_salesFactory"
                            ],
                            "returns": [],
                            "sighash": "9e3d87cd",
                            "sourceBytes": {
                                "begin": 3747,
                                "size": 445
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50006": {
                        "canonicalId": "src/GasBadStakingMining.sol|GasBadStakingMining",
                        "declaringContract": "GasBadStakingMining",
                        "method": {
                            "contractName": "GasBadStakingMining",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "emergencyWithdraw",
                            "notpayable": true,
                            "originalFile": "src/GasBadStakingMining.sol",
                            "paramNames": [
                                "_poolId"
                            ],
                            "returns": [],
                            "sighash": "5312ea8e",
                            "sourceBytes": {
                                "begin": 10033,
                                "size": 1220
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50007": {
                        "canonicalId": "src/GasBadStakingMining.sol|GasBadStakingMining",
                        "declaringContract": "GasBadStakingMining",
                        "method": {
                            "contractName": "GasBadStakingMining",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "deposit",
                            "notpayable": true,
                            "originalFile": "src/GasBadStakingMining.sol",
                            "paramNames": [
                                "_poolId",
                                "_amount"
                            ],
                            "returns": [],
                            "sighash": "e2bbb158",
                            "sourceBytes": {
                                "begin": 7201,
                                "size": 1349
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50008": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol|GasBadStakingMining",
                        "declaringContract": "GasBadStakingMining",
                        "method": {
                            "contractName": "GasBadStakingMining",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "owner",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "8da5cb5b",
                            "sourceBytes": {
                                "begin": 2441,
                                "size": 144
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50009": {
                        "canonicalId": "src/GasBadStakingMining.sol|GasBadStakingMining",
                        "declaringContract": "GasBadStakingMining",
                        "method": {
                            "contractName": "GasBadStakingMining",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "getUserInfoInPool",
                            "notpayable": true,
                            "originalFile": "src/GasBadStakingMining.sol",
                            "paramNames": [
                                "_poolId",
                                "_user"
                            ],
                            "returns": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "astId": 43,
                                        "canonicalId": "src/GasBadStakingMining.sol|GasBadStakingMining.User",
                                        "containingContract": "GasBadStakingMining",
                                        "structMembers": [
                                            {
                                                "name": "amount",
                                                "type": {
                                                    "primitiveName": "uint256",
                                                    "type": "Primitive"
                                                }
                                            },
                                            {
                                                "name": "rewardDebt",
                                                "type": {
                                                    "primitiveName": "uint256",
                                                    "type": "Primitive"
                                                }
                                            },
                                            {
                                                "name": "tokensUnlockTime",
                                                "type": {
                                                    "primitiveName": "uint256",
                                                    "type": "Primitive"
                                                }
                                            },
                                            {
                                                "name": "salesRegistered",
                                                "type": {
                                                    "dynamicArrayBaseType": {
                                                        "primitiveName": "address",
                                                        "type": "Primitive"
                                                    },
                                                    "type": "Array"
                                                }
                                            }
                                        ],
                                        "structName": "User",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "f70fd81c",
                            "sourceBytes": {
                                "begin": 15535,
                                "size": 203
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e5000a": {
                        "canonicalId": "src/GasBadStakingMining.sol|GasBadStakingMining",
                        "declaringContract": "GasBadStakingMining",
                        "method": {
                            "contractName": "GasBadStakingMining",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "fund",
                            "notpayable": true,
                            "originalFile": "src/GasBadStakingMining.sol",
                            "paramNames": [
                                "_amount"
                            ],
                            "returns": [],
                            "sighash": "ca1d209d",
                            "sourceBytes": {
                                "begin": 4352,
                                "size": 328
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e5000b": {
                        "canonicalId": "src/GasBadStakingMining.sol|GasBadStakingMining",
                        "declaringContract": "GasBadStakingMining",
                        "method": {
                            "contractName": "GasBadStakingMining",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "massUpdatePools",
                            "notpayable": true,
                            "originalFile": "src/GasBadStakingMining.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "630b5ba1",
                            "sourceBytes": {
                                "begin": 5987,
                                "size": 186
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e5000c": {
                        "canonicalId": "src/GasBadStakingMining.sol|GasBadStakingMining",
                        "declaringContract": "GasBadStakingMining",
                        "method": {
                            "contractName": "GasBadStakingMining",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "updatePool",
                            "notpayable": true,
                            "originalFile": "src/GasBadStakingMining.sol",
                            "paramNames": [
                                "_pid"
                            ],
                            "returns": [],
                            "sighash": "51eb05a6",
                            "sourceBytes": {
                                "begin": 6232,
                                "size": 929
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e5000d": {
                        "canonicalId": "src/GasBadStakingMining.sol|GasBadStakingMining",
                        "declaringContract": "GasBadStakingMining",
                        "method": {
                            "contractName": "GasBadStakingMining",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "compound",
                            "notpayable": true,
                            "originalFile": "src/GasBadStakingMining.sol",
                            "paramNames": [
                                "_poolId"
                            ],
                            "returns": [],
                            "sighash": "aa5f7e26",
                            "sourceBytes": {
                                "begin": 11259,
                                "size": 1520
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e5000e": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol|GasBadStakingMining",
                        "declaringContract": "GasBadStakingMining",
                        "method": {
                            "contractName": "GasBadStakingMining",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "renounceOwnership",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "715018a6",
                            "sourceBytes": {
                                "begin": 3155,
                                "size": 101
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e5000f": {
                        "canonicalId": "src/GasBadStakingMining.sol|GasBadStakingMining",
                        "declaringContract": "GasBadStakingMining",
                        "method": {
                            "contractName": "GasBadStakingMining",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "withdraw",
                            "notpayable": true,
                            "originalFile": "src/GasBadStakingMining.sol",
                            "paramNames": [
                                "_poolId",
                                "_amount"
                            ],
                            "returns": [],
                            "sighash": "441a3e70",
                            "sourceBytes": {
                                "begin": 8646,
                                "size": 1346
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50010": {
                        "canonicalId": "src/GasBadStakingMining.sol|GasBadStakingMining",
                        "declaringContract": "GasBadStakingMining",
                        "method": {
                            "contractName": "GasBadStakingMining",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "set",
                            "notpayable": true,
                            "originalFile": "src/GasBadStakingMining.sol",
                            "paramNames": [
                                "_poolId",
                                "_allocPoint",
                                "_withUpdate"
                            ],
                            "returns": [],
                            "sighash": "64482f79",
                            "sourceBytes": {
                                "begin": 5536,
                                "size": 366
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50011": {
                        "canonicalId": "src/GasBadStakingMining.sol|GasBadStakingMining",
                        "declaringContract": "GasBadStakingMining",
                        "method": {
                            "contractName": "GasBadStakingMining",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "getPendingReward",
                            "notpayable": true,
                            "originalFile": "src/GasBadStakingMining.sol",
                            "paramNames": [
                                "_poolId",
                                "_user"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "c59b1f3c",
                            "sourceBytes": {
                                "begin": 15782,
                                "size": 1761
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50012": {
                        "canonicalId": "src/LibCalReward.sol|CalculatingRewards",
                        "declaringContract": "CalculatingRewards",
                        "method": {
                            "contractName": "CalculatingRewards",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "getPendingRewards",
                            "notpayable": true,
                            "originalFile": "src/LibCalReward.sol",
                            "paramNames": [
                                "_amount",
                                "_accERC20PerShare",
                                "_rewardDebt"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 91,
                                "size": 228
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50013": {
                        "canonicalId": "src/LibCalReward.sol|CalculatingRewards",
                        "declaringContract": "CalculatingRewards",
                        "method": {
                            "contractName": "CalculatingRewards",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "updateRewardDebt",
                            "notpayable": true,
                            "originalFile": "src/LibCalReward.sol",
                            "paramNames": [
                                "_amount",
                                "_accERC20PerShare"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 325,
                                "size": 355
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50014": {
                        "canonicalId": "src/LibCalReward.sol|CalculatingRewards",
                        "declaringContract": "CalculatingRewards",
                        "method": {
                            "contractName": "CalculatingRewards",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "updateAccERC20PerShare",
                            "notpayable": true,
                            "originalFile": "src/LibCalReward.sol",
                            "paramNames": [
                                "oldAccERC20PerShare",
                                "totalAmountOfRewardsDuringTheDuration",
                                "amountOfStakeInThePool"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 686,
                                "size": 355
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50015": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol|SalesFactory",
                        "declaringContract": "SalesFactory",
                        "method": {
                            "contractName": "SalesFactory",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "owner",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "8da5cb5b",
                            "sourceBytes": {
                                "begin": 1638,
                                "size": 85
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50016": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol|SalesFactory",
                        "declaringContract": "SalesFactory",
                        "method": {
                            "contractName": "SalesFactory",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "transferOwnership",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol",
                            "paramNames": [
                                "newOwner"
                            ],
                            "returns": [],
                            "sighash": "f2fde38b",
                            "sourceBytes": {
                                "begin": 2543,
                                "size": 215
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50017": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol|SalesFactory",
                        "declaringContract": "SalesFactory",
                        "method": {
                            "contractName": "SalesFactory",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "renounceOwnership",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "715018a6",
                            "sourceBytes": {
                                "begin": 2293,
                                "size": 101
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50018": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol|OwnableUpgradeable",
                        "declaringContract": "OwnableUpgradeable",
                        "method": {
                            "contractName": "OwnableUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_getOwnableStorage",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 1493,
                                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol|OwnableUpgradeable.OwnableStorage",
                                        "containingContract": "OwnableUpgradeable",
                                        "structMembers": [
                                            {
                                                "name": "_owner",
                                                "type": {
                                                    "primitiveName": "address",
                                                    "type": "Primitive"
                                                }
                                            }
                                        ],
                                        "structName": "OwnableStorage",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1192,
                                "size": 159
                            },
                            "stateMutability": "pure",
                            "visibility": "private"
                        }
                    },
                    "0xf196e50019": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol|OwnableUpgradeable",
                        "declaringContract": "OwnableUpgradeable",
                        "method": {
                            "contractName": "OwnableUpgradeable",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "__Ownable_init",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
                            "paramNames": [
                                "initialOwner"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1847,
                                "size": 127
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5001a": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol|OwnableUpgradeable",
                        "declaringContract": "OwnableUpgradeable",
                        "method": {
                            "contractName": "OwnableUpgradeable",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_transferOwnership",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
                            "paramNames": [
                                "newOwner"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3774,
                                "size": 248
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5001b": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol|OwnableUpgradeable",
                        "declaringContract": "OwnableUpgradeable",
                        "method": {
                            "contractName": "OwnableUpgradeable",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "__Ownable_init_unchained",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
                            "paramNames": [
                                "initialOwner"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1980,
                                "size": 235
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5001c": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol|OwnableUpgradeable",
                        "declaringContract": "OwnableUpgradeable",
                        "method": {
                            "contractName": "OwnableUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_checkOwner",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2658,
                                "size": 162
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5001d": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol|OwnableUpgradeable",
                        "declaringContract": "OwnableUpgradeable",
                        "method": {
                            "contractName": "OwnableUpgradeable",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "transferOwnership",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
                            "paramNames": [
                                "newOwner"
                            ],
                            "returns": [],
                            "sighash": "f2fde38b",
                            "sourceBytes": {
                                "begin": 3405,
                                "size": 215
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e5001e": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol|OwnableUpgradeable",
                        "declaringContract": "OwnableUpgradeable",
                        "method": {
                            "contractName": "OwnableUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "renounceOwnership",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "715018a6",
                            "sourceBytes": {
                                "begin": 3155,
                                "size": 101
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e5001f": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol|Initializable",
                        "declaringContract": "Initializable",
                        "method": {
                            "contractName": "Initializable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_checkInitializing",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 7084,
                                "size": 141
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50020": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol|Initializable",
                        "declaringContract": "Initializable",
                        "method": {
                            "contractName": "Initializable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_disableInitializers",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 7711,
                                "size": 422
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50021": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol|Initializable",
                        "declaringContract": "Initializable",
                        "method": {
                            "contractName": "Initializable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_getInitializableStorage",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 1684,
                                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol|Initializable.InitializableStorage",
                                        "containingContract": "Initializable",
                                        "structMembers": [
                                            {
                                                "name": "_initialized",
                                                "type": {
                                                    "primitiveName": "uint64",
                                                    "type": "Primitive"
                                                }
                                            },
                                            {
                                                "name": "_initializing",
                                                "type": {
                                                    "primitiveName": "bool",
                                                    "type": "Primitive"
                                                }
                                            }
                                        ],
                                        "structName": "InitializableStorage",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 8737,
                                "size": 170
                            },
                            "stateMutability": "pure",
                            "visibility": "private"
                        }
                    },
                    "0xf196e50022": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol|Initializable",
                        "declaringContract": "Initializable",
                        "method": {
                            "contractName": "Initializable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_getInitializedVersion",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint64",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 8243,
                                "size": 128
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50023": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol|Initializable",
                        "declaringContract": "Initializable",
                        "method": {
                            "contractName": "Initializable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_isInitializing",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 8487,
                                "size": 120
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50024": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol|UUPSUpgradeable",
                        "declaringContract": "UUPSUpgradeable",
                        "method": {
                            "contractName": "UUPSUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "__UUPSUpgradeable_init",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2970,
                                "size": 67
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50025": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol|UUPSUpgradeable",
                        "declaringContract": "UUPSUpgradeable",
                        "method": {
                            "contractName": "UUPSUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "__UUPSUpgradeable_init_unchained",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3043,
                                "size": 77
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50026": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol|UUPSUpgradeable",
                        "declaringContract": "UUPSUpgradeable",
                        "method": {
                            "contractName": "UUPSUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_checkProxy",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 4578,
                                "size": 312
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50027": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol|UUPSUpgradeable",
                        "declaringContract": "UUPSUpgradeable",
                        "method": {
                            "contractName": "UUPSUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_checkNotDelegated",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 5007,
                                "size": 213
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50028": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol|UUPSUpgradeable",
                        "declaringContract": "UUPSUpgradeable",
                        "method": {
                            "contractName": "UUPSUpgradeable",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_upgradeToAndCallUUPS",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
                            "paramNames": [
                                "newImplementation",
                                "data"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 6032,
                                "size": 538
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "private"
                        }
                    },
                    "0xf196e50029": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol|UUPSUpgradeable",
                        "declaringContract": "UUPSUpgradeable",
                        "method": {
                            "contractName": "UUPSUpgradeable",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "upgradeToAndCall",
                            "notpayable": false,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
                            "paramNames": [
                                "newImplementation",
                                "data"
                            ],
                            "returns": [],
                            "sighash": "4f1ef286",
                            "sourceBytes": {
                                "begin": 4161,
                                "size": 214
                            },
                            "stateMutability": "payable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e5002a": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol|ContextUpgradeable",
                        "declaringContract": "ContextUpgradeable",
                        "method": {
                            "contractName": "ContextUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "__Context_init",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 748,
                                "size": 59
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5002b": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol|ContextUpgradeable",
                        "declaringContract": "ContextUpgradeable",
                        "method": {
                            "contractName": "ContextUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "__Context_init_unchained",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 813,
                                "size": 69
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5002c": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol|ContextUpgradeable",
                        "declaringContract": "ContextUpgradeable",
                        "method": {
                            "contractName": "ContextUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_contextSuffixLength",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1094,
                                "size": 97
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5002d": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol|ContextUpgradeable",
                        "declaringContract": "ContextUpgradeable",
                        "method": {
                            "contractName": "ContextUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_msgSender",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 887,
                                "size": 96
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5002e": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol|ContextUpgradeable",
                        "declaringContract": "ContextUpgradeable",
                        "method": {
                            "contractName": "ContextUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_msgData",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "calldata",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 989,
                                "size": 99
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5002f": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol|Ownable",
                        "declaringContract": "Ownable",
                        "method": {
                            "contractName": "Ownable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_checkOwner",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1796,
                                "size": 162
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50030": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol|Ownable",
                        "declaringContract": "Ownable",
                        "method": {
                            "contractName": "Ownable",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_transferOwnership",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol",
                            "paramNames": [
                                "newOwner"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2912,
                                "size": 187
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50031": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol|Ownable",
                        "declaringContract": "Ownable",
                        "method": {
                            "contractName": "Ownable",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "transferOwnership",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol",
                            "paramNames": [
                                "newOwner"
                            ],
                            "returns": [],
                            "sighash": "f2fde38b",
                            "sourceBytes": {
                                "begin": 2543,
                                "size": 215
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50032": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol|Ownable",
                        "declaringContract": "Ownable",
                        "method": {
                            "contractName": "Ownable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "renounceOwnership",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "715018a6",
                            "sourceBytes": {
                                "begin": 2293,
                                "size": 101
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50033": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol|ERC1967Utils",
                        "declaringContract": "ERC1967Utils",
                        "method": {
                            "contractName": "ERC1967Utils",
                            "fullArgs": [],
                            "isLibrary": true,
                            "name": "getImplementation",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1441,
                                "size": 138
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50034": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol|ERC1967Utils",
                        "declaringContract": "ERC1967Utils",
                        "method": {
                            "contractName": "ERC1967Utils",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "_setImplementation",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
                            "paramNames": [
                                "newImplementation"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1671,
                                "size": 281
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "private"
                        }
                    },
                    "0xf196e50035": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol|ERC1967Utils",
                        "declaringContract": "ERC1967Utils",
                        "method": {
                            "contractName": "ERC1967Utils",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "_setAdmin",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
                            "paramNames": [
                                "newAdmin"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3490,
                                "size": 217
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "private"
                        }
                    },
                    "0xf196e50036": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol|ERC1967Utils",
                        "declaringContract": "ERC1967Utils",
                        "method": {
                            "contractName": "ERC1967Utils",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "upgradeToAndCall",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
                            "paramNames": [
                                "newImplementation",
                                "data"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2264,
                                "size": 344
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50037": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol|ERC1967Utils",
                        "declaringContract": "ERC1967Utils",
                        "method": {
                            "contractName": "ERC1967Utils",
                            "fullArgs": [],
                            "isLibrary": true,
                            "name": "getAdmin",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3287,
                                "size": 120
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50038": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol|ERC1967Utils",
                        "declaringContract": "ERC1967Utils",
                        "method": {
                            "contractName": "ERC1967Utils",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "changeAdmin",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
                            "paramNames": [
                                "newAdmin"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3827,
                                "size": 142
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50039": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol|ERC1967Utils",
                        "declaringContract": "ERC1967Utils",
                        "method": {
                            "contractName": "ERC1967Utils",
                            "fullArgs": [],
                            "isLibrary": true,
                            "name": "getBeacon",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 4415,
                                "size": 122
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5003a": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol|ERC1967Utils",
                        "declaringContract": "ERC1967Utils",
                        "method": {
                            "contractName": "ERC1967Utils",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "_setBeacon",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
                            "paramNames": [
                                "newBeacon"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 4620,
                                "size": 437
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "private"
                        }
                    },
                    "0xf196e5003b": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol|ERC1967Utils",
                        "declaringContract": "ERC1967Utils",
                        "method": {
                            "contractName": "ERC1967Utils",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "upgradeBeaconToAndCall",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
                            "paramNames": [
                                "newBeacon",
                                "data"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 5582,
                                "size": 342
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5003c": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol|ERC1967Utils",
                        "declaringContract": "ERC1967Utils",
                        "method": {
                            "contractName": "ERC1967Utils",
                            "fullArgs": [],
                            "isLibrary": true,
                            "name": "_checkNonPayable",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 6113,
                                "size": 122
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "private"
                        }
                    },
                    "0xf196e5003d": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC20",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "safeTransfer",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "to",
                                "value"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1219,
                                "size": 160
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5003e": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC20",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "safeTransferFrom",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "from",
                                "to",
                                "value"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1618,
                                "size": 188
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5003f": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC20",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "safeIncreaseAllowance",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "spender",
                                "value"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3146,
                                "size": 225
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50040": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC20",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "trySafeTransfer",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "to",
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1943,
                                "size": 189
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50041": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC20",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "trySafeTransferFrom",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "from",
                                "to",
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2273,
                                "size": 217
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50042": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC20",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "safeDecreaseAllowance",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "spender",
                                "requestedDecrease"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 4039,
                                "size": 468
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50043": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC20",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "forceApprove",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "spender",
                                "value"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 5084,
                                "size": 380
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50044": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC1363",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "transferAndCallRelaxed",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "to",
                                "value",
                                "data"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 5808,
                                "size": 322
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50045": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC1363",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "transferFromAndCallRelaxed",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "from",
                                "to",
                                "value",
                                "data"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 6482,
                                "size": 406
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50046": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC1363",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "approveAndCallRelaxed",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "to",
                                "value",
                                "data"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 7553,
                                "size": 320
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50047": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC20",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "_callOptionalReturn",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "data"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 8370,
                                "size": 720
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "private"
                        }
                    },
                    "0xf196e50048": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC20",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "_callOptionalReturnBool",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "data"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 9592,
                                "size": 480
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "private"
                        }
                    },
                    "0xf196e50049": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol|Address",
                        "declaringContract": "Address",
                        "method": {
                            "contractName": "Address",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "sendValue",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol",
                            "paramNames": [
                                "recipient",
                                "amount"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1290,
                                "size": 365
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5004a": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol|Address",
                        "declaringContract": "Address",
                        "method": {
                            "contractName": "Address",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "functionCall",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol",
                            "paramNames": [
                                "target",
                                "data"
                            ],
                            "returns": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2500,
                                "size": 151
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5004b": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol|Address",
                        "declaringContract": "Address",
                        "method": {
                            "contractName": "Address",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "functionDelegateCall",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol",
                            "paramNames": [
                                "target",
                                "data"
                            ],
                            "returns": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3916,
                                "size": 253
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5004c": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol|Address",
                        "declaringContract": "Address",
                        "method": {
                            "contractName": "Address",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "functionCallWithValue",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol",
                            "paramNames": [
                                "target",
                                "data",
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2975,
                                "size": 407
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5004d": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol|Address",
                        "declaringContract": "Address",
                        "method": {
                            "contractName": "Address",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "functionStaticCall",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol",
                            "paramNames": [
                                "target",
                                "data"
                            ],
                            "returns": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3521,
                                "size": 254
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5004e": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol|Address",
                        "declaringContract": "Address",
                        "method": {
                            "contractName": "Address",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "verifyCallResultFromTarget",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol",
                            "paramNames": [
                                "target",
                                "success",
                                "returndata"
                            ],
                            "returns": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 4437,
                                "size": 582
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5004f": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol|Address",
                        "declaringContract": "Address",
                        "method": {
                            "contractName": "Address",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "verifyCallResult",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol",
                            "paramNames": [
                                "success",
                                "returndata"
                            ],
                            "returns": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 5221,
                                "size": 224
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50050": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol|Address",
                        "declaringContract": "Address",
                        "method": {
                            "contractName": "Address",
                            "fullArgs": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "_revert",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol",
                            "paramNames": [
                                "returndata"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 5559,
                                "size": 487
                            },
                            "stateMutability": "pure",
                            "visibility": "private"
                        }
                    },
                    "0xf196e50051": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Context.sol|Context",
                        "declaringContract": "Context",
                        "method": {
                            "contractName": "Context",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_msgSender",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Context.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 656,
                                "size": 96
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50052": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Context.sol|Context",
                        "declaringContract": "Context",
                        "method": {
                            "contractName": "Context",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_msgData",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Context.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "calldata",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 758,
                                "size": 99
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50053": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Context.sol|Context",
                        "declaringContract": "Context",
                        "method": {
                            "contractName": "Context",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_contextSuffixLength",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Context.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 863,
                                "size": 97
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50054": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot",
                        "declaringContract": "StorageSlot",
                        "method": {
                            "contractName": "StorageSlot",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "getAddressSlot",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
                            "paramNames": [
                                "slot"
                            ],
                            "returns": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 6989,
                                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot.AddressSlot",
                                        "containingContract": "StorageSlot",
                                        "structMembers": [
                                            {
                                                "name": "value",
                                                "type": {
                                                    "primitiveName": "address",
                                                    "type": "Primitive"
                                                }
                                            }
                                        ],
                                        "structName": "AddressSlot",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1899,
                                "size": 163
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50055": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot",
                        "declaringContract": "StorageSlot",
                        "method": {
                            "contractName": "StorageSlot",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "getBooleanSlot",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
                            "paramNames": [
                                "slot"
                            ],
                            "returns": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 6992,
                                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot.BooleanSlot",
                                        "containingContract": "StorageSlot",
                                        "structMembers": [
                                            {
                                                "name": "value",
                                                "type": {
                                                    "primitiveName": "bool",
                                                    "type": "Primitive"
                                                }
                                            }
                                        ],
                                        "structName": "BooleanSlot",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2159,
                                "size": 163
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50056": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot",
                        "declaringContract": "StorageSlot",
                        "method": {
                            "contractName": "StorageSlot",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "getInt256Slot",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
                            "paramNames": [
                                "slot"
                            ],
                            "returns": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 7001,
                                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot.Int256Slot",
                                        "containingContract": "StorageSlot",
                                        "structMembers": [
                                            {
                                                "name": "value",
                                                "type": {
                                                    "primitiveName": "int256",
                                                    "type": "Primitive"
                                                }
                                            }
                                        ],
                                        "structName": "Int256Slot",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2938,
                                "size": 161
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50057": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot",
                        "declaringContract": "StorageSlot",
                        "method": {
                            "contractName": "StorageSlot",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "getBytes32Slot",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
                            "paramNames": [
                                "slot"
                            ],
                            "returns": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 6995,
                                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot.Bytes32Slot",
                                        "containingContract": "StorageSlot",
                                        "structMembers": [
                                            {
                                                "name": "value",
                                                "type": {
                                                    "primitiveName": "bytes32",
                                                    "type": "Primitive"
                                                }
                                            }
                                        ],
                                        "structName": "Bytes32Slot",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2419,
                                "size": 163
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50058": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot",
                        "declaringContract": "StorageSlot",
                        "method": {
                            "contractName": "StorageSlot",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "getUint256Slot",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
                            "paramNames": [
                                "slot"
                            ],
                            "returns": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 6998,
                                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot.Uint256Slot",
                                        "containingContract": "StorageSlot",
                                        "structMembers": [
                                            {
                                                "name": "value",
                                                "type": {
                                                    "primitiveName": "uint256",
                                                    "type": "Primitive"
                                                }
                                            }
                                        ],
                                        "structName": "Uint256Slot",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2679,
                                "size": 163
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50059": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot",
                        "declaringContract": "StorageSlot",
                        "method": {
                            "contractName": "StorageSlot",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "getStringSlot",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
                            "paramNames": [
                                "slot"
                            ],
                            "returns": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 7004,
                                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot.StringSlot",
                                        "containingContract": "StorageSlot",
                                        "structMembers": [
                                            {
                                                "name": "value",
                                                "type": {
                                                    "type": "StringType"
                                                }
                                            }
                                        ],
                                        "structName": "StringSlot",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3195,
                                "size": 161
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5005a": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot",
                        "declaringContract": "StorageSlot",
                        "method": {
                            "contractName": "StorageSlot",
                            "fullArgs": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "type": "StringType"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "getStringSlot",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
                            "paramNames": [
                                "store"
                            ],
                            "returns": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 7004,
                                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot.StringSlot",
                                        "containingContract": "StorageSlot",
                                        "structMembers": [
                                            {
                                                "name": "value",
                                                "type": {
                                                    "type": "StringType"
                                                }
                                            }
                                        ],
                                        "structName": "StringSlot",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3468,
                                "size": 175
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5005b": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot",
                        "declaringContract": "StorageSlot",
                        "method": {
                            "contractName": "StorageSlot",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "getBytesSlot",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
                            "paramNames": [
                                "slot"
                            ],
                            "returns": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 7007,
                                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot.BytesSlot",
                                        "containingContract": "StorageSlot",
                                        "structMembers": [
                                            {
                                                "name": "value",
                                                "type": {
                                                    "type": "PackedBytes"
                                                }
                                            }
                                        ],
                                        "structName": "BytesSlot",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3738,
                                "size": 159
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5005c": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot",
                        "declaringContract": "StorageSlot",
                        "method": {
                            "contractName": "StorageSlot",
                            "fullArgs": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "getBytesSlot",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
                            "paramNames": [
                                "store"
                            ],
                            "returns": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 7007,
                                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot.BytesSlot",
                                        "containingContract": "StorageSlot",
                                        "structMembers": [
                                            {
                                                "name": "value",
                                                "type": {
                                                    "type": "PackedBytes"
                                                }
                                            }
                                        ],
                                        "structName": "BytesSlot",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 4007,
                                "size": 172
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    }
                },
                "is_static_address": false,
                "lang": "Solidity",
                "localAssignments": {
                    "1": {
                        "lhs": "lastRewardTimestamp",
                        "sourceLoc": {
                            "begin": "5032",
                            "len": "121",
                            "source": "0"
                        }
                    },
                    "10": {
                        "lhs": "poolInfo",
                        "sourceLoc": {
                            "begin": "8715",
                            "len": "40",
                            "source": "0"
                        }
                    },
                    "11": {
                        "lhs": "userInfo",
                        "sourceLoc": {
                            "begin": "8765",
                            "len": "52",
                            "source": "0"
                        }
                    },
                    "12": {
                        "lhs": "pendingRewards",
                        "sourceLoc": {
                            "begin": "8963",
                            "len": "172",
                            "source": "0"
                        }
                    },
                    "13": {
                        "lhs": "poolInfo",
                        "sourceLoc": {
                            "begin": "10094",
                            "len": "40",
                            "source": "0"
                        }
                    },
                    "14": {
                        "lhs": "userInfo",
                        "sourceLoc": {
                            "begin": "10144",
                            "len": "52",
                            "source": "0"
                        }
                    },
                    "15": {
                        "lhs": "userAmount",
                        "sourceLoc": {
                            "begin": "10431",
                            "len": "36",
                            "source": "0"
                        }
                    },
                    "16": {
                        "lhs": "poolInfo",
                        "sourceLoc": {
                            "begin": "11311",
                            "len": "40",
                            "source": "0"
                        }
                    },
                    "17": {
                        "lhs": "userInfo",
                        "sourceLoc": {
                            "begin": "11361",
                            "len": "52",
                            "source": "0"
                        }
                    },
                    "18": {
                        "lhs": "pendingAmount",
                        "sourceLoc": {
                            "begin": "11492",
                            "len": "171",
                            "source": "0"
                        }
                    },
                    "19": {
                        "lhs": "userInfo",
                        "sourceLoc": {
                            "begin": "13182",
                            "len": "47",
                            "source": "0"
                        }
                    },
                    "2": {
                        "lhs": "length",
                        "sourceLoc": {
                            "begin": "6031",
                            "len": "31",
                            "source": "0"
                        }
                    },
                    "20": {
                        "lhs": "deposits",
                        "sourceLoc": {
                            "begin": "14716",
                            "len": "55",
                            "source": "0"
                        }
                    },
                    "21": {
                        "lhs": "earnings",
                        "sourceLoc": {
                            "begin": "14781",
                            "len": "55",
                            "source": "0"
                        }
                    },
                    "22": {
                        "lhs": "userInfo",
                        "sourceLoc": {
                            "begin": "15352",
                            "len": "47",
                            "source": "0"
                        }
                    },
                    "23": {
                        "lhs": "userInfo",
                        "sourceLoc": {
                            "begin": "15660",
                            "len": "46",
                            "source": "0"
                        }
                    },
                    "24": {
                        "lhs": "poolInfo",
                        "sourceLoc": {
                            "begin": "15902",
                            "len": "40",
                            "source": "0"
                        }
                    },
                    "25": {
                        "lhs": "userInfo",
                        "sourceLoc": {
                            "begin": "15952",
                            "len": "47",
                            "source": "0"
                        }
                    },
                    "26": {
                        "lhs": "accERC20PerShare",
                        "sourceLoc": {
                            "begin": "16010",
                            "len": "52",
                            "source": "0"
                        }
                    },
                    "27": {
                        "lhs": "lpSupply",
                        "sourceLoc": {
                            "begin": "16073",
                            "len": "41",
                            "source": "0"
                        }
                    },
                    "28": {
                        "lhs": "pendingRewards",
                        "sourceLoc": {
                            "begin": "17341",
                            "len": "163",
                            "source": "0"
                        }
                    },
                    "29": {
                        "lhs": "lastTimestamp",
                        "sourceLoc": {
                            "begin": "17750",
                            "len": "111",
                            "source": "0"
                        }
                    },
                    "3": {
                        "lhs": "poolInfo",
                        "sourceLoc": {
                            "begin": "6283",
                            "len": "37",
                            "source": "0"
                        }
                    },
                    "30": {
                        "lhs": "stakingDuration",
                        "sourceLoc": {
                            "begin": "17872",
                            "len": "56",
                            "source": "0"
                        }
                    },
                    "31": {
                        "lhs": "poolInfo.accERC20PerShare",
                        "sourceLoc": {
                            "begin": "6932",
                            "len": "165",
                            "source": "0"
                        }
                    },
                    "32": {
                        "lhs": "poolInfo.lastRewardTimestamp",
                        "sourceLoc": {
                            "begin": "7108",
                            "len": "46",
                            "source": "0"
                        }
                    },
                    "33": {
                        "lhs": "poolInfo.totalDeposits",
                        "sourceLoc": {
                            "begin": "7891",
                            "len": "57",
                            "source": "0"
                        }
                    },
                    "34": {
                        "lhs": "userInfo.amount",
                        "sourceLoc": {
                            "begin": "7959",
                            "len": "43",
                            "source": "0"
                        }
                    },
                    "35": {
                        "lhs": "userInfo.rewardDebt",
                        "sourceLoc": {
                            "begin": "8013",
                            "len": "135",
                            "source": "0"
                        }
                    },
                    "36": {
                        "lhs": "userInfo.amount",
                        "sourceLoc": {
                            "begin": "9235",
                            "len": "43",
                            "source": "0"
                        }
                    },
                    "37": {
                        "lhs": "userInfo.rewardDebt",
                        "sourceLoc": {
                            "begin": "9289",
                            "len": "135",
                            "source": "0"
                        }
                    },
                    "38": {
                        "lhs": "poolInfo.totalDeposits",
                        "sourceLoc": {
                            "begin": "9531",
                            "len": "57",
                            "source": "0"
                        }
                    },
                    "39": {
                        "lhs": "poolInfo.totalDeposits",
                        "sourceLoc": {
                            "begin": "10283",
                            "len": "65",
                            "source": "0"
                        }
                    },
                    "4": {
                        "lhs": "lastTimestamp",
                        "sourceLoc": {
                            "begin": "6331",
                            "len": "111",
                            "source": "0"
                        }
                    },
                    "40": {
                        "lhs": "userInfo.amount",
                        "sourceLoc": {
                            "begin": "11194",
                            "len": "19",
                            "source": "0"
                        }
                    },
                    "41": {
                        "lhs": "userInfo.rewardDebt",
                        "sourceLoc": {
                            "begin": "11223",
                            "len": "23",
                            "source": "0"
                        }
                    },
                    "42": {
                        "lhs": "userInfo.amount",
                        "sourceLoc": {
                            "begin": "11674",
                            "len": "49",
                            "source": "0"
                        }
                    },
                    "43": {
                        "lhs": "userInfo.rewardDebt",
                        "sourceLoc": {
                            "begin": "11734",
                            "len": "135",
                            "source": "0"
                        }
                    },
                    "44": {
                        "lhs": "poolInfo.totalDeposits",
                        "sourceLoc": {
                            "begin": "11880",
                            "len": "63",
                            "source": "0"
                        }
                    },
                    "45": {
                        "lhs": "userInfo.tokensUnlockTime",
                        "sourceLoc": {
                            "begin": "13404",
                            "len": "45",
                            "source": "0"
                        }
                    },
                    "46": {
                        "lhs": "deposits[i]",
                        "sourceLoc": {
                            "begin": "14949",
                            "len": "44",
                            "source": "0"
                        }
                    },
                    "47": {
                        "lhs": "earnings[i]",
                        "sourceLoc": {
                            "begin": "15007",
                            "len": "48",
                            "source": "0"
                        }
                    },
                    "48": {
                        "lhs": "sale",
                        "sourceLoc": {
                            "begin": "635",
                            "len": "51",
                            "source": "4"
                        }
                    },
                    "49": {
                        "lhs": "sales",
                        "sourceLoc": {
                            "begin": "1515",
                            "len": "61",
                            "source": "4"
                        }
                    },
                    "5": {
                        "lhs": "lpSupply",
                        "sourceLoc": {
                            "begin": "6544",
                            "len": "41",
                            "source": "0"
                        }
                    },
                    "50": {
                        "lhs": "index",
                        "sourceLoc": {
                            "begin": "1586",
                            "len": "14",
                            "source": "4"
                        }
                    },
                    "51": {
                        "lhs": "sales[index]",
                        "sourceLoc": {
                            "begin": "1673",
                            "len": "26",
                            "source": "4"
                        }
                    },
                    "52": {
                        "lhs": "$",
                        "sourceLoc": {
                            "begin": "2506",
                            "len": "47",
                            "source": "5"
                        }
                    },
                    "53": {
                        "lhs": "$",
                        "sourceLoc": {
                            "begin": "3847",
                            "len": "47",
                            "source": "5"
                        }
                    },
                    "54": {
                        "lhs": "oldOwner",
                        "sourceLoc": {
                            "begin": "3904",
                            "len": "27",
                            "source": "5"
                        }
                    },
                    "55": {
                        "lhs": "$._owner",
                        "sourceLoc": {
                            "begin": "3941",
                            "len": "19",
                            "source": "5"
                        }
                    },
                    "56": {
                        "lhs": "$",
                        "sourceLoc": {
                            "begin": "4158",
                            "len": "59",
                            "source": "6"
                        }
                    },
                    "57": {
                        "lhs": "isTopLevelCall",
                        "sourceLoc": {
                            "begin": "4279",
                            "len": "38",
                            "source": "6"
                        }
                    },
                    "58": {
                        "lhs": "initialized",
                        "sourceLoc": {
                            "begin": "4327",
                            "len": "35",
                            "source": "6"
                        }
                    },
                    "59": {
                        "lhs": "initialSetup",
                        "sourceLoc": {
                            "begin": "4706",
                            "len": "54",
                            "source": "6"
                        }
                    },
                    "6": {
                        "lhs": "stakingDuration",
                        "sourceLoc": {
                            "begin": "6714",
                            "len": "70",
                            "source": "0"
                        }
                    },
                    "60": {
                        "lhs": "construction",
                        "sourceLoc": {
                            "begin": "4770",
                            "len": "70",
                            "source": "6"
                        }
                    },
                    "61": {
                        "lhs": "$",
                        "sourceLoc": {
                            "begin": "6357",
                            "len": "59",
                            "source": "6"
                        }
                    },
                    "62": {
                        "lhs": "$",
                        "sourceLoc": {
                            "begin": "7826",
                            "len": "59",
                            "source": "6"
                        }
                    },
                    "63": {
                        "lhs": "$._initialized",
                        "sourceLoc": {
                            "begin": "4951",
                            "len": "18",
                            "source": "6"
                        }
                    },
                    "64": {
                        "lhs": "$._initialized",
                        "sourceLoc": {
                            "begin": "6541",
                            "len": "24",
                            "source": "6"
                        }
                    },
                    "65": {
                        "lhs": "$._initializing",
                        "sourceLoc": {
                            "begin": "6575",
                            "len": "22",
                            "source": "6"
                        }
                    },
                    "66": {
                        "lhs": "$._initializing",
                        "sourceLoc": {
                            "begin": "6618",
                            "len": "23",
                            "source": "6"
                        }
                    },
                    "67": {
                        "lhs": "oldOwner",
                        "sourceLoc": {
                            "begin": "2985",
                            "len": "25",
                            "source": "9"
                        }
                    },
                    "68": {
                        "lhs": "beaconImplementation",
                        "sourceLoc": {
                            "begin": "4850",
                            "len": "66",
                            "source": "15"
                        }
                    },
                    "69": {
                        "lhs": "oldAllowance",
                        "sourceLoc": {
                            "begin": "3242",
                            "len": "62",
                            "source": "18"
                        }
                    },
                    "7": {
                        "lhs": "erc20Reward",
                        "sourceLoc": {
                            "begin": "6794",
                            "len": "127",
                            "source": "0"
                        }
                    },
                    "70": {
                        "lhs": "approvalCall",
                        "sourceLoc": {
                            "begin": "5171",
                            "len": "75",
                            "source": "18"
                        }
                    },
                    "71": {
                        "lhs": "returnSize",
                        "sourceLoc": {
                            "begin": "8450",
                            "len": "18",
                            "source": "18"
                        }
                    },
                    "72": {
                        "lhs": "returnValue",
                        "sourceLoc": {
                            "begin": "8478",
                            "len": "19",
                            "source": "18"
                        }
                    },
                    "73": {
                        "lhs": "success",
                        "sourceLoc": {
                            "begin": "9691",
                            "len": "12",
                            "source": "18"
                        }
                    },
                    "74": {
                        "lhs": "returnSize",
                        "sourceLoc": {
                            "begin": "9713",
                            "len": "18",
                            "source": "18"
                        }
                    },
                    "75": {
                        "lhs": "returnValue",
                        "sourceLoc": {
                            "begin": "9741",
                            "len": "19",
                            "source": "18"
                        }
                    },
                    "76": {
                        "lhs": "success,returndata",
                        "sourceLoc": {
                            "begin": "1506",
                            "len": "75",
                            "source": "19"
                        }
                    },
                    "77": {
                        "lhs": "success,returndata",
                        "sourceLoc": {
                            "begin": "3230",
                            "len": "73",
                            "source": "19"
                        }
                    },
                    "78": {
                        "lhs": "success,returndata",
                        "sourceLoc": {
                            "begin": "3631",
                            "len": "65",
                            "source": "19"
                        }
                    },
                    "79": {
                        "lhs": "success,returndata",
                        "sourceLoc": {
                            "begin": "4023",
                            "len": "67",
                            "source": "19"
                        }
                    },
                    "8": {
                        "lhs": "poolInfo",
                        "sourceLoc": {
                            "begin": "7269",
                            "len": "40",
                            "source": "0"
                        }
                    },
                    "9": {
                        "lhs": "userInfo",
                        "sourceLoc": {
                            "begin": "7319",
                            "len": "52",
                            "source": "0"
                        }
                    }
                },
                "methods": [
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "constructor",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [],
                        "returns": [],
                        "sighash": "0",
                        "sourceBytes": {
                            "begin": 3668,
                            "size": 53
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getTotalPending",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "3bd05400",
                        "sourceBytes": {
                            "begin": 17599,
                            "size": 427
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getRewardPerSec",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "e0d41c02",
                        "sourceBytes": {
                            "begin": 13651,
                            "size": 98
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "PackedBytes"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "upgradeToAndCall",
                        "notpayable": false,
                        "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
                        "paramNames": [
                            "newImplementation",
                            "data"
                        ],
                        "returns": [],
                        "sighash": "4f1ef286",
                        "sourceBytes": {
                            "begin": 4161,
                            "size": 214
                        },
                        "stateMutability": "payable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "transferOwnership",
                        "notpayable": true,
                        "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
                        "paramNames": [
                            "newOwner"
                        ],
                        "returns": [],
                        "sighash": "f2fde38b",
                        "sourceBytes": {
                            "begin": 3405,
                            "size": 215
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getPoolNum",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "212af18d",
                        "sourceBytes": {
                            "begin": 15138,
                            "size": 92
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "emergencyWithdraw",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [
                            "_poolId"
                        ],
                        "returns": [],
                        "sighash": "5312ea8e",
                        "sourceBytes": {
                            "begin": 10033,
                            "size": 1220
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "dynamicArrayBaseType": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    },
                                    "type": "Array"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "getPendingAndDepositedForUsers",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [
                            "users",
                            "poolId"
                        ],
                        "returns": [
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "dynamicArrayBaseType": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    },
                                    "type": "Array"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "dynamicArrayBaseType": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    },
                                    "type": "Array"
                                }
                            }
                        ],
                        "sighash": "fcfc1b14",
                        "sourceBytes": {
                            "begin": 14548,
                            "size": 562
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getTotalAllocPoint",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "3a58b91a",
                        "sourceBytes": {
                            "begin": 13948,
                            "size": 101
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "getUserInfoInPool",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [
                            "_poolId",
                            "_user"
                        ],
                        "returns": [
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "astId": 43,
                                    "canonicalId": "src/GasBadStakingMining.sol|GasBadStakingMining.User",
                                    "containingContract": "GasBadStakingMining",
                                    "structMembers": [
                                        {
                                            "name": "amount",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "rewardDebt",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "tokensUnlockTime",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "salesRegistered",
                                            "type": {
                                                "dynamicArrayBaseType": {
                                                    "primitiveName": "address",
                                                    "type": "Primitive"
                                                },
                                                "type": "Array"
                                            }
                                        }
                                    ],
                                    "structName": "User",
                                    "type": "UserDefinedStruct"
                                }
                            }
                        ],
                        "sighash": "f70fd81c",
                        "sourceBytes": {
                            "begin": 15535,
                            "size": 203
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "fund",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [
                            "_amount"
                        ],
                        "returns": [],
                        "sighash": "ca1d209d",
                        "sourceBytes": {
                            "begin": 4352,
                            "size": 328
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "massUpdatePools",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [],
                        "returns": [],
                        "sighash": "630b5ba1",
                        "sourceBytes": {
                            "begin": 5987,
                            "size": 186
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "updatePool",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [
                            "_pid"
                        ],
                        "returns": [],
                        "sighash": "51eb05a6",
                        "sourceBytes": {
                            "begin": 6232,
                            "size": 929
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "compound",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [
                            "_poolId"
                        ],
                        "returns": [],
                        "sighash": "aa5f7e26",
                        "sourceBytes": {
                            "begin": 11259,
                            "size": 1520
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "renounceOwnership",
                        "notpayable": true,
                        "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
                        "paramNames": [],
                        "returns": [],
                        "sighash": "715018a6",
                        "sourceBytes": {
                            "begin": 3155,
                            "size": 101
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "proxiableUUID",
                        "notpayable": true,
                        "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "bytes32",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "52d1902d",
                        "sourceBytes": {
                            "begin": 3708,
                            "size": 134
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "getPoolInfo",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [
                            "poolId"
                        ],
                        "returns": [
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "astId": 55,
                                    "canonicalId": "src/GasBadStakingMining.sol|GasBadStakingMining.Pool",
                                    "containingContract": "GasBadStakingMining",
                                    "structMembers": [
                                        {
                                            "name": "lpToken",
                                            "type": {
                                                "contractName": "IERC20",
                                                "type": "Contract"
                                            }
                                        },
                                        {
                                            "name": "allocPoint",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "lastRewardTimestamp",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "accERC20PerShare",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "totalDeposits",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        }
                                    ],
                                    "structName": "Pool",
                                    "type": "UserDefinedStruct"
                                }
                            }
                        ],
                        "sighash": "2f380b35",
                        "sourceBytes": {
                            "begin": 14430,
                            "size": 112
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "getPendingReward",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [
                            "_poolId",
                            "_user"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "c59b1f3c",
                        "sourceBytes": {
                            "begin": 15782,
                            "size": 1761
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "contractName": "IERC20",
                                    "type": "Contract"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "add",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [
                            "_allocPoint",
                            "_lpToken",
                            "_withUpdate"
                        ],
                        "returns": [],
                        "sighash": "1eaaa045",
                        "sourceBytes": {
                            "begin": 4838,
                            "size": 652
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "getDeposited",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [
                            "_poolId",
                            "_user"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "e86facc5",
                        "sourceBytes": {
                            "begin": 15236,
                            "size": 202
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getPaidOut",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "b3458b4b",
                        "sourceBytes": {
                            "begin": 15444,
                            "size": 85
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setTokensUnlockTime",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [
                            "_poolId",
                            "_user",
                            "_tokensUnlockTime"
                        ],
                        "returns": [],
                        "sighash": "e6f04acc",
                        "sourceBytes": {
                            "begin": 13027,
                            "size": 536
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "contractName": "IERC20",
                                    "type": "Contract"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "initialize",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [
                            "_erc20",
                            "_rewardPerSecond",
                            "_startTimestamp",
                            "_salesFactory"
                        ],
                        "returns": [],
                        "sighash": "9e3d87cd",
                        "sourceBytes": {
                            "begin": 3747,
                            "size": 445
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "UPGRADE_INTERFACE_VERSION",
                        "notpayable": true,
                        "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            }
                        ],
                        "sighash": "ad3cb1cc",
                        "sourceBytes": {
                            "begin": 1819,
                            "size": 58
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "version",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "54fd4d50",
                        "sourceBytes": {
                            "begin": 13569,
                            "size": 76
                        },
                        "stateMutability": "pure",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "deposit",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [
                            "_poolId",
                            "_amount"
                        ],
                        "returns": [],
                        "sighash": "e2bbb158",
                        "sourceBytes": {
                            "begin": 7201,
                            "size": 1349
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "set",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [
                            "_poolId",
                            "_allocPoint",
                            "_withUpdate"
                        ],
                        "returns": [],
                        "sighash": "64482f79",
                        "sourceBytes": {
                            "begin": 5536,
                            "size": 366
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getTotalRewards",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "e627f2db",
                        "sourceBytes": {
                            "begin": 13847,
                            "size": 95
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "owner",
                        "notpayable": true,
                        "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "8da5cb5b",
                        "sourceBytes": {
                            "begin": 2441,
                            "size": 144
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getStartTimestamp",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "1f89f25e",
                        "sourceBytes": {
                            "begin": 14097,
                            "size": 99
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setSalesFactory",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [
                            "_salesFactory"
                        ],
                        "returns": [],
                        "sighash": "3dfcb861",
                        "sourceBytes": {
                            "begin": 12785,
                            "size": 236
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getEndTimestamp",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "74e94deb",
                        "sourceBytes": {
                            "begin": 14202,
                            "size": 95
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "withdraw",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [
                            "_poolId",
                            "_amount"
                        ],
                        "returns": [],
                        "sighash": "441a3e70",
                        "sourceBytes": {
                            "begin": 8646,
                            "size": 1346
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getRewardToken",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "contractName": "IERC20",
                                    "type": "Contract"
                                }
                            }
                        ],
                        "sighash": "69940d79",
                        "sourceBytes": {
                            "begin": 13755,
                            "size": 86
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getStakingMiningDuration",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "a242057a",
                        "sourceBytes": {
                            "begin": 14303,
                            "size": 121
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    }
                ],
                "name": "GasBadStakingMining",
                "original_file": "src/GasBadStakingMining.sol",
                "solidityTypes": [
                    {
                        "astId": 1713,
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol|OwnableUpgradeable.OwnableStorage",
                        "containingContract": "OwnableUpgradeable",
                        "structMembers": [
                            {
                                "name": "_owner",
                                "type": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "OwnableStorage",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 6652,
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol|ECDSA.RecoverError",
                        "containingContract": "ECDSA",
                        "enumMembers": [
                            {
                                "name": "NoError"
                            },
                            {
                                "name": "InvalidSignature"
                            },
                            {
                                "name": "InvalidSignatureLength"
                            },
                            {
                                "name": "InvalidSignatureS"
                            }
                        ],
                        "enumName": "RecoverError",
                        "type": "UserDefinedEnum"
                    },
                    {
                        "astId": 8789,
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/math/Math.sol|Math.Rounding",
                        "containingContract": "Math",
                        "enumMembers": [
                            {
                                "name": "Floor"
                            },
                            {
                                "name": "Ceil"
                            },
                            {
                                "name": "Trunc"
                            },
                            {
                                "name": "Expand"
                            }
                        ],
                        "enumName": "Rounding",
                        "type": "UserDefinedEnum"
                    },
                    {
                        "astId": 1954,
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol|Initializable.InitializableStorage",
                        "containingContract": "Initializable",
                        "structMembers": [
                            {
                                "name": "_initialized",
                                "type": {
                                    "primitiveName": "uint64",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "_initializing",
                                "type": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "InitializableStorage",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 5358,
                        "canonicalId": "src/StakingMining.sol|StakingMining.User",
                        "containingContract": "StakingMining",
                        "structMembers": [
                            {
                                "name": "amount",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "rewardDebt",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "tokensUnlockTime",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "salesRegistered",
                                "type": {
                                    "dynamicArrayBaseType": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    },
                                    "type": "Array"
                                }
                            }
                        ],
                        "structName": "User",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 5370,
                        "canonicalId": "src/StakingMining.sol|StakingMining.Pool",
                        "containingContract": "StakingMining",
                        "structMembers": [
                            {
                                "name": "lpToken",
                                "type": {
                                    "contractName": "IERC20",
                                    "type": "Contract"
                                }
                            },
                            {
                                "name": "allocPoint",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "lastRewardTimestamp",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "accERC20PerShare",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "totalDeposits",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "Pool",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 43,
                        "canonicalId": "src/GasBadStakingMining.sol|GasBadStakingMining.User",
                        "containingContract": "GasBadStakingMining",
                        "structMembers": [
                            {
                                "name": "amount",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "rewardDebt",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "tokensUnlockTime",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "salesRegistered",
                                "type": {
                                    "dynamicArrayBaseType": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    },
                                    "type": "Array"
                                }
                            }
                        ],
                        "structName": "User",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 55,
                        "canonicalId": "src/GasBadStakingMining.sol|GasBadStakingMining.Pool",
                        "containingContract": "GasBadStakingMining",
                        "structMembers": [
                            {
                                "name": "lpToken",
                                "type": {
                                    "contractName": "IERC20",
                                    "type": "Contract"
                                }
                            },
                            {
                                "name": "allocPoint",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "lastRewardTimestamp",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "accERC20PerShare",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "totalDeposits",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "Pool",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 3142,
                        "canonicalId": "src/sale/IceFrogSale.sol|IceFrogSale.Sale",
                        "containingContract": "IceFrogSale",
                        "structMembers": [
                            {
                                "name": "token",
                                "type": {
                                    "contractName": "IERC20",
                                    "type": "Contract"
                                }
                            },
                            {
                                "name": "isCreated",
                                "type": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "earningsWithdrawn",
                                "type": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "leftoverWithdrawn",
                                "type": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "saleOwner",
                                "type": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "tokenPriceInETH",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "amountOfTokensToSell",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "totalTokensSold",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "totalETHRaised",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "saleStart",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "saleEnd",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "tokensUnlockTime",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "maxParticipation",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "Sale",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 3152,
                        "canonicalId": "src/sale/IceFrogSale.sol|IceFrogSale.Participation",
                        "containingContract": "IceFrogSale",
                        "structMembers": [
                            {
                                "name": "amountBought",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "amountETHPaid",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "timeParticipated",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "isPortionWithdrawn",
                                "type": {
                                    "dynamicArrayBaseType": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    },
                                    "type": "Array"
                                }
                            }
                        ],
                        "structName": "Participation",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 3159,
                        "canonicalId": "src/sale/IceFrogSale.sol|IceFrogSale.Registration",
                        "containingContract": "IceFrogSale",
                        "structMembers": [
                            {
                                "name": "registrationTimeStarts",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "registrationTimeEnds",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "numberOfRegistrants",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "Registration",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 7408,
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot.AddressSlot",
                        "containingContract": "StorageSlot",
                        "structMembers": [
                            {
                                "name": "value",
                                "type": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "AddressSlot",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 7411,
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot.BooleanSlot",
                        "containingContract": "StorageSlot",
                        "structMembers": [
                            {
                                "name": "value",
                                "type": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "BooleanSlot",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 7414,
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot.Bytes32Slot",
                        "containingContract": "StorageSlot",
                        "structMembers": [
                            {
                                "name": "value",
                                "type": {
                                    "primitiveName": "bytes32",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "Bytes32Slot",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 7417,
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot.Uint256Slot",
                        "containingContract": "StorageSlot",
                        "structMembers": [
                            {
                                "name": "value",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "Uint256Slot",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 7420,
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot.Int256Slot",
                        "containingContract": "StorageSlot",
                        "structMembers": [
                            {
                                "name": "value",
                                "type": {
                                    "primitiveName": "int256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "Int256Slot",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 7423,
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot.StringSlot",
                        "containingContract": "StorageSlot",
                        "structMembers": [
                            {
                                "name": "value",
                                "type": {
                                    "type": "StringType"
                                }
                            }
                        ],
                        "structName": "StringSlot",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 7426,
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot.BytesSlot",
                        "containingContract": "StorageSlot",
                        "structMembers": [
                            {
                                "name": "value",
                                "type": {
                                    "type": "PackedBytes"
                                }
                            }
                        ],
                        "structName": "BytesSlot",
                        "type": "UserDefinedStruct"
                    }
                ],
                "sourceBytes": {
                    "begin": 719,
                    "size": 17309
                },
                "srcmap": "719:28697:0:-:0;;;;;;;;;-1:-1:-1;719:28697:0;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;;;;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;:::o;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::o;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;;;;;;;;;:::i;:::-;;;:::o;:::-;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;:::i;:::-;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::o;:::-;;:::i;:::-;;;;;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;;;:::o;:::-;;;;:::i;:::-;;;;;;;:::i;:::-;:::o;:::-;;;:::i;:::-;;:::o;1819:58:7:-;1870:7;;:::i;:::-;1819:58;:::o;:::-;;;:::i;:::-;;:::o;719:28697:0:-;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;:::o;:::-;;;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;:::i;:::-;;;:::o;:::-;;;;:::o;:::-;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;:::i;:::-;;;:::o;:::-;;;;;;;:::o;:::-;;;;:::o;:::-;;;;;;;:::i;:::-;;;:::o;:::-;;;;:::o;:::-;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;7049:540;;7585:1;7049:540;;6350:11;6362:8;6371:11;7127:457;;;;;;;;;;;;;7585:1;:::i;:::-;7049:540::o;3227:62:5:-;;3281:1;3227:62;;;;:::i;:::-;3281:1;:::i;:::-;3227:62::o;719:28697:0:-;;;;:::o;:::-;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::o;:::-;;:::i;:::-;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;;:::o;:::-;;;;;:::i;:::-;;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;:::i;:::-;:::o;:::-;;;;;;;;:::i;:::-;:::o;:::-;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;:::o;:::-;;:::i;6231:818::-;;6807:225;;;6231:818;6781:261;6231:818;6403:59;;6231:818;6501:15;:32;;6519:14;;;:::i;:::-;6501:32;:::i;:::-;;;:::i;:::-;;:91;;;;6807:225;;6548:15;6501:91;6593:120;;;6723:47;6741:29;:15;;;:::i;:::-;6759:11;6741:29;;:::i;:::-;6723:47;;:::i;:::-;6807:225;6781:12;:7;:12;:::i;:::-;6839:8;6877:11;6927:19;6807:225;6982:1;7016;6807:225;7016:1;6807:225;;;:::i;:::-;;;;;:::i;:::-;;;;;:::i;:::-;;;;;:::i;:::-;;:::i;:::-;;;;;:::i;:::-;;:::i;:::-;;;;;:::i;:::-;6781:261;:::i;:::-;6231:818::o;6501:91::-;6807:225;;6578:14;;;:::i;:::-;6501:91;;6403:59;;;:::i;:::-;;;6231:818;;;;;;:::i;:::-;:::o;719:28697::-;;;:::o;22908:99::-;22960:7;;:::i;:::-;22986:14;;;;:::i;:::-;22979:21;:::o;719:28697::-;;;:::o;24461:92::-;24506:7;;:::i;:::-;24532;:14;:7;:14;:::i;:::-;24525:21;:::o;719:28697::-;;;;:::i;:::-;;:::o;:::-;;;:::o;:::-;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;:::o;:::-;;;:::i;:::-;;:::o;:::-;;;;;;;:::o;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;:::o;:::-;;;;:::i;:::-;;:::o;23241:112::-;23331:15;23324:22;23241:112;23301:11;;:::i;:::-;23331:7;;:15;:::i;:::-;;23324:22;:::i;:::-;;:::o;22759:101::-;22812:7;;:::i;:::-;22838:15;;;;:::i;:::-;22831:22;:::o;719:28697::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;:::i;28757:657::-;28807:7;;:::i;:::-;28830:15;;:33;;28849:14;;;:::i;:::-;28830:33;:::i;:::-;;;:::i;:::-;;;28826:72;;28932:15;:30;;28950:12;;;:::i;:::-;28932:30;:::i;:::-;;;:::i;:::-;;:87;;;;29364:43;:33;29170:30;28977:15;28932:87;29020:114;;;29186:14;;;:::i;:::-;29170:30;;:::i;:::-;29201:116;;;29364:15;;;:::i;:::-;:33;:::i;:::-;29400:7;;;:::i;:::-;29364:43;;:::i;:::-;29357:50;:::o;28932:87::-;29364:43;:33;29170:30;29007:12;;;:::i;:::-;28932:87;;28826:72;28879:8;28886:1;28879:8;:::i;:::-;;:::o;3227:62:5:-;3281:1;3227:62;;;:::i;:::-;3281:1;:::i;:::-;3227:62::o;719:28697:0:-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;21326:236::-;21407:13;:27;;21424:10;21432:1;21424:10;:::i;:::-;21407:27;:::i;:::-;;;:::i;:::-;;21403:100;;21528:27;21513:42;21541:13;21528:27;:::i;:::-;21513:42;;:::i;:::-;21326:236::o;21403:100::-;21457:35;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;21326:236;;;;:::i;:::-;:::o;719:28697::-;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;:::o;:::-;;;;:::o;:::-;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;;:::i;:::-;;;;;;;;13856:2514;;13916:364;;;;;;;;;;;;14289:40;14313:16;:7;14321;14313:16;;:::i;:::-;;14289:40;:::i;:::-;14330:102;;;14441:52;14465:28;:16;:7;14473;14465:16;;:::i;:::-;14482:10;14465:28;;:::i;:::-;14441:52;:::i;:::-;14494:102;;;;14610:15;;:8;:15;;:::i;:::-;:25;;14628:7;14610:25;:::i;:::-;;;:::i;:::-;;14606:95;;14722:7;;;:::i;:::-;14766:147;14816:15;;:8;:15;;:::i;:::-;14845:25;;:8;:25;;:::i;:::-;14884:19;;:8;:19;;:::i;:::-;14766:147;;:::i;:::-;14914:115;;;;15039:14;:5;;;:::i;:::-;:14;:::i;:::-;;:42;:14;15054:10;;15066:14;15039:42;;15066:14;15039:42;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;15828:22;15039:42;15092:25;;15502:19;15039:42;15828:22;15039:42;15502:19;15039:42;;;13856:2514;15103:14;15092:25;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;15128:43;15146:25;:15;;:8;:15;;:::i;:::-;15164:7;15146:25;;:::i;:::-;15128:15;:8;:15;:43;:::i;:::-;15198:15;;:8;:15;;:::i;:::-;15214:116;;15340:135;15362:113;15411:15;;:8;:15;;:::i;:::-;15440:25;;:8;:25;;:::i;:::-;15362:113;;:::i;:::-;15340:8;;:19;:135;:::i;:::-;15502:19;;:::i;:::-;15522:116;;15726:7;15675:16;;:8;:16;;:::i;:::-;15713:10;15726:7;;;:::i;:::-;15744:57;15769:32;:22;:8;;:22;;:::i;:::-;15794:7;15769:32;;:::i;:::-;15744:8;;:22;:57;:::i;:::-;15828:22;;:::i;:::-;15851:116;;16034:330;;;;;;;13856:2514::o;15039:42::-;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;:::i;14606:95::-;14658:32;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;4898:446:7;;5340:1;4898:446;4756:17;4774:4;4968:371;;;;;;;;;;;5340:1;:::i;:::-;4898:446::o;2624:62::-;;2678:1;2624:62;;;:::i;:::-;2678:1;:::i;:::-;2624:62::o;4647:251::-;;4886:4;4647:251;4817:17;;;:::i;:::-;4886:4;:::i;:::-;4647:251::o;:::-;;;;;:::i;:::-;:::o;719:28697:0:-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::o;:::-;;:::i;9220:2098::-;9572:13;9548:37;9220:2098;9262:277;;;;;;;;;9572:7;:13;:::i;:::-;;9548:37;:::i;:::-;9586:102;;;9722:15;:30;;9740:12;;;:::i;:::-;9722:30;:::i;:::-;;;:::i;:::-;;:87;;;;9767:15;9722:87;9810:114;;;;9938:13;:45;;9955:28;;:8;:28;;:::i;:::-;9938:45;:::i;:::-;;;:::i;:::-;;;9934:82;;10044:22;;:8;:22;;:::i;:::-;10067:109;;;10190:8;:13;;10202:1;10190:13;:::i;:::-;;;:::i;:::-;;10186:108;;10330:13;10750:165;10778:137;11167:28;10330:13;10522:105;10523:97;10524:33;10330:44;11167:28;10330:13;10346:28;:8;;:28;;:::i;:::-;10330:44;;:::i;:::-;10375:116;;;10542:15;;;:::i;:::-;10524:33;;:::i;:::-;10574:45;10575:25;:19;;:8;:19;;:::i;:::-;:25;10597:3;10575:25;:::i;:::-;;;:::i;:::-;10604:15;;;:::i;:::-;10574:45;;:::i;:::-;10523:97;;:::i;:::-;10522:105;10624:3;10522:105;:::i;:::-;;;:::i;:::-;10628:112;;;;10833:25;;:8;:25;;:::i;:::-;10872:11;10897:8;10778:137;;:::i;:::-;10750:25;:8;:25;:165;:::i;:::-;10942:25;;:8;:25;;:::i;:::-;10968:116;;11094:46;11125:15;11094:8;;:28;:46;:::i;:::-;11167:28;;:::i;:::-;11196:116;;9220:2098::o;10186:108::-;10250:13;10219:28;:44;10250:13;10219:8;:28;:44;:::i;:::-;10277:7::o;9934:82::-;9999:7;;:::o;9722:87::-;9797:12;;;:::i;:::-;9722:87;;719:28697;;;:::o;2892:72:7:-;2956:1;2892:72;;;:::i;:::-;2956:1;:::i;:::-;2892:72;:::o;719:28697:0:-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;763:114:15:-;811:66;;;:::i;:::-;763:114;:::o;4194:134:7:-;4289:32;;;:::i;:::-;4282:39;:::o;4194:134::-;4263:7;;;:::i;:::-;;:::i;:::-;4194:134;:::o;16411:2300:0:-;18569:19;;16411:2300;16463:280;;;;;;;;;16752:40;16776:16;:7;16784;16776:16;;:::i;:::-;;16752:40;:::i;:::-;16793:102;;;;17237:22;;16904:52;16928:28;:16;:7;16936;16928:16;;:::i;:::-;16945:10;16928:28;;:::i;:::-;16904:52;:::i;:::-;16957:102;;;;17119:15;17068:16;;:8;:16;;:::i;:::-;17106:10;17119:15;;:8;:15;;:::i;:::-;;;:::i;:::-;17145:65;17170:40;:22;:8;;:22;;:::i;:::-;17195:15;;:8;:15;;:::i;:::-;17170:40;;:::i;:::-;17145:8;;:22;:65;:::i;:::-;17237:22;;:::i;:::-;17260:116;;17479:15;;:8;:15;;:::i;:::-;17495:111;;;17615:708;;;;;;;18332:19;;18350:1;18332:19;:::i;:::-;:15;:8;:15;:19;:::i;:::-;18378:15;;:8;:15;;:::i;:::-;18394:116;;18519:23;;18541:1;18519:23;:::i;:::-;:8;;:19;:23;:::i;:::-;18569:19;;:::i;:::-;18589:116;;16411:2300::o;719:28697::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;22380:76::-;22422:7;;:::i;:::-;22448:1;22441:8;22448:1;22441:8;:::i;:::-;;:::o;719:28697::-;;;;;;:::i;:::-;;:::o;8672:489::-;8707:196;;;;;;8929:14;:7;:14;:::i;:::-;8944:107;;;9065:18;9082:1;9065:18;:::i;:::-;9102:8;9085:6;:15;;9094:6;9085:15;:::i;:::-;;;:::i;:::-;;;;;9137:6;;9102:8;9137:6;;:::i;:::-;9102:8;:::i;:::-;9065:18;;9085:15;;;8672:489::o;8047:540::-;;8583:1;8047:540;;7755:7;7763:11;7775;8126:456;;;;;;;;;;;;;8583:1;:::i;:::-;8047:540::o;3227:62:5:-;;3281:1;3227:62;;;;:::i;:::-;3281:1;:::i;:::-;3227:62::o;7635:412:0:-;;7999:16;:27;7635:412;7999:41;7635:412;7807:59;;7635:412;7876:113;7906:83;:57;:15;;;:::i;:::-;7936:27;:7;:16;:7;7944;7936:16;;:::i;:::-;;:27;;:::i;:::-;7906:57;;:::i;:::-;7978:11;7906:83;;:::i;:::-;7876:113;;:::i;:::-;7999:7;;:16;:::i;:::-;;:27;:41;:::i;:::-;7635:412::o;7807:59::-;;;:::i;:::-;;;7635:412;;;;;;:::i;:::-;:::o;719:28697::-;;;:::o;22566:86::-;22615:6;;:::i;:::-;22640:5;;;;:::i;:::-;22633:12;:::o;4689:228:5:-;4716:196;;;;;;4913:1;;:::i;:::-;4689:228::o;3227:62::-;;;:::i;:::-;3281:1;;:::i;:::-;3227:62::o;4573:116::-;4671:10;;4679:1;4671:10;:::i;:::-;;:::i;:::-;4573:116::o;:::-;;;:::i;:::-;:::o;23013:95:0:-;23063:7;;:::i;:::-;23089:12;;;;:::i;:::-;23082:19;:::o;719:28697::-;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;3365:442:5:-;3411:7;;:::i;:::-;3421:196;;;;;;;3792:8;;3653:20;;:::i;:::-;3674:102;;;3792:8;;:::i;:::-;3785:15;:::o;4259:669:0:-;;4924:1;4259:669;;;3914:6;3921:16;3938:15;3954:13;;4369:554;;;;;;;;;;;;;;;4924:1;:::i;:::-;4259:669::o;719:28697::-;;;;:::o;:::-;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;:::o;:::-;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;4069:1815:6:-;;;;4191:26;;:::i;:::-;4218:102;;;;4403:16;4404:15;;:1;:15;;:::i;:::-;4403:16;;:::i;:::-;4420:115;;;;4565:14;;:1;:14;;:::i;:::-;4580:112;;;5055:11;:16;;5070:1;5055:16;:::i;:::-;;;:::i;:::-;;:34;;;4069:1815;5090:113;;;;5232:16;;5247:1;5232:16;:::i;:::-;;;:::i;:::-;;:50;;;4069:1815;5410:13;5212:70;5283:113;;;;5410:13;;:::i;:::-;:30;;;;4069:1815;5406:91;;;5766:1;5523;5506:18;;5523:1;5506:18;:::i;:::-;:14;:1;:14;:18;:::i;:::-;5550:14;;:1;:14;;:::i;:::-;5565:116;;5694:14;5690:67;;4069:1815;5766:1;:::i;:::-;5777:101;;4069:1815;;:::o;5777:101::-;5811:23;5829:5;5811:15;5829:5;5811:1;:15;:23;:::i;:::-;5865:1;5853:14;;;;;:::i;:::-;;;;;;:::i;:::-;;;;5777:101;;;5690:67;5724:22;5742:4;5724:15;:1;:15;:22;:::i;:::-;5690:67;;5406:91;5463:23;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;5410:30;5427:13;5428:12;;5427:13;;:::i;:::-;5410:30;;;5232:50;5260:4;5410:13;5252;5260:4;5252:13;:::i;:::-;:25;:30;;5281:1;5252:30;:::i;:::-;;;:::i;:::-;;5232:50;;;;5055:34;5075:14;;5055:34;;3747:512:0;4225:27;3747:512;4084:34;4210:42;3747:512;;4060:14;4170:30;3747:512;4005:10;;;:::i;:::-;;;:::i;:::-;4060:14;;:::i;:::-;4084:34;;:::i;:::-;4128:32;4145:15;4128:32;;:::i;:::-;4170:30;;:::i;:::-;4225:27;:::i;:::-;4210:42;;:::i;:::-;3747:512::o;:::-;;;;;;;:::i;:::-;:::o;23114:121::-;23173:7;;:::i;:::-;23199:12;:29;:12;;;:::i;:::-;23214:14;;;:::i;:::-;23199:29;;:::i;:::-;23192:36;:::o;719:28697::-;;;;;;;;;;;;;;;;:::o;:::-;;:::i;18717:2603::-;18760:280;;;;;;;;;19049:40;19073:16;:7;19081;19073:16;;:::i;:::-;;19049:40;:::i;:::-;19090:102;;;20346:22;;19201:52;19225:28;:16;:7;19233;19225:16;;:::i;:::-;19242:10;19225:28;;:::i;:::-;19201:52;:::i;:::-;19254:102;;;;19365:28;19372:15;;:8;:15;;:::i;:::-;:20;;19391:1;19372:20;:::i;:::-;;;:::i;:::-;;;19365:28;:::i;:::-;19415:7;;;:::i;:::-;20110:19;;19458:147;19508:15;;:8;:15;;:::i;:::-;19537:25;;:8;:25;;:::i;:::-;19576:19;:8;;:19;;:::i;:::-;19458:147;;:::i;:::-;19606:114;;;;19730:49;19748:31;:15;;:8;:15;;:::i;:::-;19766:13;19748:31;;:::i;:::-;19730:15;:8;:15;:49;:::i;:::-;19806:15;;:8;:15;;:::i;:::-;19822:116;;19948:135;19970:113;20019:15;;:8;:15;;:::i;:::-;20048:25;;:8;:25;;:::i;:::-;19970:113;;:::i;:::-;19948:8;;:19;:135;:::i;:::-;20110:19;;:::i;:::-;20130:116;;20256:63;20281:38;:22;:8;;:22;;:::i;:::-;20306:13;20281:38;;:::i;:::-;20256:8;;:22;:63;:::i;:::-;20346:22;;:::i;:::-;20369:116;;20656:658;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18717:2603::o;25231:85::-;25276:7;;:::i;:::-;25302;;;;:::i;:::-;25295:14;:::o;26033:2668::-;26667:47;26691:23;28409:138;26033:2668;26134:7;;:::i;:::-;26144:362;;;;;;;;;;;;;26691:16;26515:40;26539:16;:7;26547;26539:16;;:::i;:::-;;26515:40;:::i;:::-;26556:102;;;;26691:7;:16;:::i;:::-;:23;:::i;:::-;26667:47;:::i;:::-;26715:102;;;26854:25;;:8;:25;;:::i;:::-;26880:117;;;;27026:22;;:8;:22;;:::i;:::-;27049:109;;;;27172:15;:46;;27190:28;;:8;:28;;:::i;:::-;27172:46;:::i;:::-;;;:::i;:::-;;:63;;;26033:2668;27168:1206;;26033:2668;28459:8;;28518:19;;28459:15;;:8;:15;;:::i;:::-;28488:16;28518:8;:19;;:::i;:::-;28409:138;;:::i;:::-;28548:115;;;28673:21;:::o;27168:1206::-;27275:15;27712:109;27713:101;28025:144;27275:15;;;;:30;;27293:12;;;:::i;:::-;27275:30;:::i;:::-;;;:::i;:::-;;:95;;;;27768:45;27769:25;:19;;27714:33;27590:34;27324:15;27275:95;27413:28;;:8;:28;;:::i;:::-;:59;;27460:12;;;:::i;:::-;27413:59;:::i;:::-;;;:::i;:::-;;:137;;;;27491:28;;:8;:28;;:::i;:::-;27413:137;27590:34;;:::i;:::-;27732:15;;;:::i;:::-;27714:33;;:::i;:::-;27769:8;:19;;:::i;:::-;:25;27791:3;27769:25;:::i;:::-;;;:::i;:::-;27798:15;;;:::i;:::-;27768:45;;:::i;:::-;27713:101;;:::i;:::-;27712:109;27818:3;27712:109;:::i;:::-;;;:::i;:::-;28147:8;28025:144;;:::i;:::-;27168:1206;;;;;27413:137;27538:12;;;:::i;:::-;27413:137;;27275:95;27768:45;27769:25;:19;;27714:33;27590:34;27358:12;;;:::i;:::-;27275:95;;27172:63;27222:8;;:13;;27234:1;27222:13;:::i;:::-;;;:::i;:::-;;;27172:63;;719:28697;;;;:::i;:::-;;:::o;5465:608::-;5504:280;;;;;;;;;5797:15;:31;;5816:12;;;:::i;:::-;5797:31;:::i;:::-;;;:::i;:::-;;;5793:98;;6044:22;6029:37;5901:5;5960:7;5901:5;;;:::i;:::-;5932:10;5945:13;5953:4;5945:13;:::i;:::-;5960:7;;;;:::i;:::-;5978:41;;5994:25;:7;6004:15;;;:::i;:::-;5994:25;;:::i;:::-;5978:41;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;6044:12;;;:::i;:::-;:22;:::i;:::-;6029:37;;:::i;:::-;5465:608::o;5793:98::-;5851:29;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;22462:98;22512:7;;:::i;:::-;22538:15;;;;:::i;:::-;22531:22;:::o;11358:2402::-;;11417:364;;;;;;;;;;;;11790:40;11814:16;:7;11822;11814:16;;:::i;:::-;;11790:40;:::i;:::-;11831:102;;;11942:52;11966:28;:16;:7;11974;11966:16;;:::i;:::-;11983:10;11966:28;;:::i;:::-;11942:52;:::i;:::-;11995:102;;;12118:7;;;:::i;:::-;12141:15;;:8;:15;;:::i;:::-;:19;;12159:1;12141:19;:::i;:::-;;;:::i;:::-;;12137:335;;11358:2402;13223:19;12482:8;13061:135;13083:113;12482:8;12589:7;12482:16;;13223:19;12482:8;:16;;:::i;:::-;12537:10;12562:13;12570:4;12562:13;:::i;:::-;12589:7;;;;:::i;:::-;12616:57;12641:32;:22;;:8;:22;;:::i;:::-;12666:7;12641:32;;:::i;:::-;12616:22;:8;:22;:57;:::i;:::-;12700:22;;:8;:22;;:::i;:::-;12723:116;;12849:43;12867:25;:15;;:8;:15;;:::i;:::-;12885:7;12867:25;;:::i;:::-;12849:15;:8;:15;:43;:::i;:::-;12919:15;;:8;:15;;:::i;:::-;12935:116;;13161:25;;13132:15;;:8;:15;;:::i;:::-;13161:8;:25;;:::i;:::-;13083:113;;:::i;:::-;13061:8;;:19;:135;:::i;:::-;13223:19;;:::i;:::-;13243:116;;13425:329;;;;;;;11358:2402::o;12137:335::-;12201:163;12255:15;;:8;:15;;:::i;:::-;12288:25;;:8;:25;;:::i;:::-;12331:19;;:8;:19;;:::i;:::-;12201:163;;:::i;:::-;12379:5;:14;:5;;;:::i;:::-;:14;:::i;:::-;;:42;:14;12394:10;;12406:14;12379:42;;12406:14;12379:42;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;13223:19;12379:42;12436:25;;13083:113;12379:42;13223:19;12379:42;13061:135;12379:42;;;12137:335;12447:14;12436:25;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;12137:335;;;;;;;;12379:42;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;:::i;22658:95::-;22708:7;;:::i;:::-;22734:12;;;;:::i;:::-;22727:19;:::o;719:28697::-;;;;;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;3431:178::-;;;3475:52;;:40;:12;;;:::i;:::-;:40;:::i;:::-;;3516:10;3475:52;3516:10;3475:52;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;3474:53;3475:52;;;;;3431:178;3474:53;;;:::i;:::-;3470:122;;3601:1;;;:::i;:::-;3431:178::o;3470:122::-;3550:31;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;3475:52;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;719:28697::-;;:::o;:::-;;;;;;;:::o;:::-;;;:::o;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;:::o;:::-;;:::o;:::-;;;;;;;;:::i;:::-;;:::i;:::-;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;:::o;:::-;;:::i;21568:806::-;21723:47;21568:806;21747:16;:23;21568:806;21747:7;:16;:::i;:::-;:23;:::i;:::-;21723:47;:::i;:::-;21771:102;;;21928:25;;:8;:25;;:::i;:::-;:43;;21956:15;21928:43;:::i;:::-;;;:::i;:::-;;21924:114;;22326:24;:29;22075:17;22047:45;22326:41;22075:17;22047:25;:8;:25;:45;:::i;:::-;22119:25;;:8;:25;;:::i;:::-;22145:116;;22326:24;:29;:::i;:::-;22356:10;22326:41;;:::i;:::-;21568:806::o;21924:114::-;21994:33;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;21568:806;;;;;;:::i;:::-;:::o;24559:666::-;25037:47;25061:23;25203:15;24559:666;25061:16;25203:15;24559:666;24656:7;;:::i;:::-;24666:362;;;;;;;;;;;;;25061:7;:16;:::i;:::-;:23;:::i;:::-;25037:47;:::i;:::-;25085:102;;;25203:15;;:::i;:::-;25196:22;:::o;5304:329:5:-;5629:1;5304:329;5140:8;5347:281;;;;;;;;5629:1;:::i;:::-;5304:329::o;3227:62::-;3281:1;3227:62;;;:::i;:::-;3281:1;:::i;:::-;3227:62::o;5066:238::-;5173:8;:22;;5185:10;5193:1;5185:10;:::i;:::-;5173:22;:::i;:::-;;;:::i;:::-;;5169:91;;5288:8;;;:::i;:::-;5066:238::o;5169:91::-;5218:31;5238:10;5246:1;5238:10;:::i;:::-;5218:31;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;5066:238;;;;:::i;:::-;:::o;719:28697:0:-;;;;:::i;:::-;;:::o;:::-;;;:::o;:::-;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;:::o;:::-;;;:::i;:::-;;:::o;:::-;;;:::o;:::-;;;;;;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;:::o;:::-;;;;:::i;:::-;;:::o;25322:667::-;25809:46;25322:667;25832:16;:23;25322:667;25424:11;;:::i;:::-;25438:362;;;;;;;;;;;;;25832:7;:16;:::i;:::-;:23;:::i;:::-;25809:46;:::i;:::-;25856:102;;;25967:15;:::o;719:28697::-;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;:::o;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;;;;:::o;:::-;;:::i;23359:1074::-;;;;23481:16;;:::i;:::-;23499;;;:::i;:::-;23569:5;23555:27;23569:12;:5;:12;:::i;:::-;23555:27;:::i;:::-;23583:102;;;;23722:27;23736:12;:5;:12;:::i;:::-;23722:27;:::i;:::-;23750:102;;;;23915:10;23924:1;23915:10;:::i;:::-;23945:3;23927:1;:16;;23931:12;:5;:12;:::i;:::-;23927:16;:::i;:::-;;;:::i;:::-;;;;;23945:3;23991:6;23964:44;23978:30;23991:6;23999:8;;:5;24005:1;23999:8;;:::i;:::-;;:::i;:::-;23978:30;;:::i;:::-;23964:44;:8;23973:1;;23964:44;;;:::i;:::-;;:::i;:::-;24035:11;;:8;24044:1;24035:11;;:::i;:::-;;:::i;:::-;24047:116;;24176:48;24190:34;24207:6;24215:8;;:5;24221:1;24215:8;;:::i;:::-;;:::i;:::-;24190:34;;:::i;:::-;24176:48;:8;24185:1;;24176:48;;;:::i;:::-;;:::i;:::-;24251:11;;:8;24260:1;24251:11;;:::i;:::-;;:::i;:::-;24263:116;;23945:3;:::i;:::-;23915:10;;23927:16;;;;;24399:27;;:::o;3880:358:5:-;3926:196;;;;;;4135:7;;:::i;:::-;:23;;4146:12;;:::i;:::-;4135:23;:::i;:::-;;;:::i;:::-;;4131:101;;3880:358::o;4131:101::-;4181:40;4208:12;;:::i;:::-;4181:40;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;719:28697:0;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;91:690:1:-;725:27;724:50;91:690;;724:36;91:690;236:7;;:::i;:::-;246:462;;;;;;;;;;;;;;;;725:27;:::i;:::-;724:36;756:4;724:36;:::i;:::-;;;:::i;:::-;:50;:::i;:::-;717:57;:::o;787:729::-;1473:36;787:729;1474:27;787:729;902:7;;:::i;:::-;912:374;;;;;;;;;;;;;1474:27;:::i;:::-;1473:36;1505:4;1473:36;:::i;:::-;;;:::i;:::-;1466:43;:::o;719:28697:0:-;;;;:::o;:::-;6593:120;719:28697;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;1219:599:18:-;;1767:43;;1219:599;1767:43;;1219:599;1292:439;;;;;;;;;;;;;;;1782:14;1767:43;1782:14;1799:2;1803:5;1767:43;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;:::i;:::-;1219:599::o;719:28697:0:-;;;;:::i;:::-;;:::o;5547:508:7:-;5593:196;;;;;;5815:13;5823:4;5815:13;:::i;:::-;:23;;5832:6;5815:23;:::i;:::-;;;:::i;:::-;;:120;;;;5547:508;5798:251;;5547:508::o;5798:251::-;6009:29;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;5815:120;5893:32;;;:::i;:::-;:42;;5929:6;5893:42;:::i;:::-;;;:::i;:::-;;;5815:120;;5063:346:0;5405:1;5063:346;5033:17;5114:290;;;;;;;;5405:1;:::i;:::-;5063:346::o;3227:62:5:-;;;;:::i;:::-;:::o;4934:129:0:-;;;;:::i;:::-;:::o;719:28697::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;7393:909:7:-;;;7479:371;;;;;;;;;;;;7863:52;;:50;:36;7881:17;7863:36;:::i;:::-;:50;:::i;:::-;;:52;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;7393:909;7859:437;;;;;;;;;;;;;;7393:909::o;7859:437::-;8225:60;8267:17;8225:60;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;7859:437;7957:4;;:40;;7965:32;;:::i;:::-;7957:40;:::i;:::-;;;:::i;:::-;;7953:120;;8135:4;8116:17;;;8135:4;:::i;:::-;7859:437;;7953:120;8024:34;8053:4;8024:34;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;7863:52;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;1522:860:1;2258:117;1522:860;2293:44;2292:83;1522:860;1715:7;;:::i;:::-;1725:505;;;;;;;;;;;;;;;;2293:37;:44;2333:4;2293:44;:::i;:::-;;;:::i;:::-;2292:83;:::i;:::-;2258:117;;:::i;:::-;2239:136;:::o;6172:409:7:-;6225:196;;;;;;6434:13;6442:4;6434:13;:::i;:::-;:23;;6451:6;6434:23;:::i;:::-;;;:::i;:::-;;6430:145;;6172:409::o;6430:145::-;6535:29;;:::i;:::-;6009;;;6535;;;;;;;;:::i;:::-;;;;719:28697:0;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;5787:891:5:-;5851:281;;;;;;;;;6168:20;;:::i;:::-;6189:102;;;6492:8;;6319;:1;;:8;;:::i;:::-;6328:109;;;;6446:19;6457:8;6446:1;;:8;:19;:::i;:::-;6492:8;;:::i;:::-;6501:116;;6662:8;6631:40;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;;5787:891::o;1192:355::-;1271:196;;;;;;1476:65;1192:355;:::o;10902:366:6:-;10993:196;;;;;;11198:64;10902:366;:::o;2197:337:5:-;2530:1;2197:337;2112:12;2244:285;;;;;;;;2530:1;:::i;:::-;2197:337::o;8172:76:6:-;8240:1;8172:76;;;:::i;:::-;8240:1;:::i;:::-;8172:76::o;2043:154:5:-;2177:12;2043:154;2177:12;:::i;:::-;2043:154::o;:::-;;;;:::i;:::-;:::o;3052:228:7:-;3079:196;;;;;;3276:1;;:::i;:::-;3052:228::o;8172:76:6:-;;;:::i;:::-;:::o;2970:82:7:-;;;:::i;:::-;:::o;719:28697:0:-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;:::o;2057:708:18:-;2704:53;2057:708;2704:53;;2057:708;;2704:53;2057:708;2148:520;;;;;;;;;;;;;;;;;;2719:18;2704:53;2719:18;2740:4;2746:2;2750:5;2704:53;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;:::i;:::-;2057:708::o;1373:292:8:-;1426:7;;:::i;:::-;1436:196;;;;;;;1648:10;1641:17;:::o;13488:1302:18:-;;14207:421;;13488:1302;13559:359;;;;;;;;;;;;13927:18;;:::i;:::-;13946:111;;14066:19;;:::i;:::-;14086:112;;14207:421;;;;;;;;;;;;;;;14642:10;:15;;14656:1;14642:15;:::i;:::-;;;:::i;:::-;;:68;;;;14668:5;14660:14;14668:5;14660:14;:::i;:::-;:26;:31;;14690:1;14660:31;:::i;:::-;;;:::i;:::-;;14642:68;14638:146;;13488:1302;:::o;14638:146::-;14758:14;14733:40;14766:5;14758:14;:::i;:::-;14733:40;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;14642:68;14694:16;;14709:1;14694:16;:::i;:::-;;;:::i;:::-;;;14642:68;;14207:421;;;;;;;;;;1441:334:15;1493:7;;:::i;:::-;1503:196;;;;;;;1715:53;;:47;1742:19;;:::i;:::-;1715:47;:::i;:::-;:53;;:::i;:::-;1708:60;:::o;719:28697:0:-;;;:::o;2750:715:15:-;;2832:371;;;;;;;;;;;;3231:17;;;:::i;:::-;3282;3264:36;;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;;3315:11;:4;:11;:::i;:::-;:15;;3329:1;3315:15;:::i;:::-;;;:::i;:::-;;3311:148;;;;3346:53;3375:17;3346:53;:::i;:::-;;3311:148;2750:715::o;3311:148::-;;;;;:::i;:::-;;;8363:337:6;8416:196;;;;;;8625:18;8626:17;;:::i;:::-;8625:18;;:::i;:::-;8621:73;;8363:337::o;8621:73::-;8666:17;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;2802:337:5;3135:1;2802:337;2619:12;2849:285;;;;;;;;3135:1;:::i;:::-;2802:337::o;8172:76:6:-;8240:1;8172:76;;;:::i;:::-;8240:1;:::i;:::-;8172:76::o;2540:262:5:-;2663:12;:26;;2679:10;2687:1;2679:10;:::i;:::-;2663:26;:::i;:::-;;;:::i;:::-;;2659:95;;2782:12;;;:::i;:::-;2540:262::o;2659:95::-;2712:31;2732:10;2740:1;2732:10;:::i;:::-;2712:31;;:::i;:::-;5218;;;;;;2712;;;;;;:::i;:::-;;;;2540:262;;;;:::i;:::-;:::o;1899:440:24:-;1984:277;;;;;;;;;1899:440;:::o;1867:571:15:-;1931:290;;;;;;;;;2234:17;:29;:34;;2267:1;2234:34;:::i;:::-;;;:::i;:::-;;2230:119;;2358:73;2414:17;2358:53;:47;2385:19;;:::i;:::-;2358:47;:::i;:::-;:53;:73;:::i;:::-;1867:571::o;2230:119::-;2291:47;2320:17;2291:47;;:::i;:::-;8225:60:7;;;;;;2291:47:15;;;;;;:::i;:::-;;;;8690:318;8727:196;;;;;;8936:9;:13;;8948:1;8936:13;:::i;:::-;;;:::i;:::-;;8932:70;;8690:318::o;8932:70::-;8972:19;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;719:28697:0;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;5749:715:19;6258:25;5749:715;6402:55;5749:715;5832:12;;:::i;:::-;5847:360;;;;;;;;;;;;;6258:6;6278:4;6258:25;;;;;;;;;;;:::i;:::-;6284:102;;;;6437:7;6446:10;6402:55;;:::i;:::-;6395:62;:::o;719:28697:0:-;;;:::o;10456:316:6:-;10506:4;;:::i;:::-;10513:196;;;;;;;10725:40;;:26;;:::i;:::-;:40;;:::i;:::-;10718:47;:::o;6732:1032:19:-;;7354:8;6732:1032;6876:12;;:::i;:::-;6891:450;;;;;;;;;;;;;;;;7354:8;;:::i;:::-;7350:408;;;;7386:10;;:::i;7350:408::-;7602:17;:10;:17;:::i;:::-;:22;;7623:1;7602:22;:::i;:::-;;;:::i;:::-;;:49;;;7350:408;7598:119;;7737:10;7730:17;:::o;7598:119::-;7678:24;7695:6;7678:24;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;7602:49;7628:6;;:18;:23;;7650:1;7628:23;:::i;:::-;;;:::i;:::-;;7602:49;;8671:770;8727:283;;;;;;;;;9085:17;:10;:17;:::i;:::-;:21;;9105:1;9085:21;:::i;:::-;;;:::i;:::-;;9081:354;;;;9210:158;;;;;;9081:354;9405:19;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;",
                "storageLayout": {
                    "storage": [
                        {
                            "astId": 58,
                            "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_31_44_283/.certora_sources/src/GasBadStakingMining.sol:GasBadStakingMining",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "20",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "contractName": "IERC20",
                                "type": "Contract"
                            },
                            "label": "erc20",
                            "offset": 0,
                            "slot": "0",
                            "type": "t_contract(IERC20)2523"
                        },
                        {
                            "astId": 60,
                            "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_31_44_283/.certora_sources/src/GasBadStakingMining.sol:GasBadStakingMining",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint256",
                                "type": "Primitive"
                            },
                            "label": "rewardPerSecond",
                            "offset": 0,
                            "slot": "1",
                            "type": "t_uint256"
                        },
                        {
                            "astId": 62,
                            "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_31_44_283/.certora_sources/src/GasBadStakingMining.sol:GasBadStakingMining",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint256",
                                "type": "Primitive"
                            },
                            "label": "startTimestamp",
                            "offset": 0,
                            "slot": "2",
                            "type": "t_uint256"
                        },
                        {
                            "astId": 64,
                            "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_31_44_283/.certora_sources/src/GasBadStakingMining.sol:GasBadStakingMining",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint256",
                                "type": "Primitive"
                            },
                            "label": "endTimestamp",
                            "offset": 0,
                            "slot": "3",
                            "type": "t_uint256"
                        },
                        {
                            "astId": 67,
                            "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_31_44_283/.certora_sources/src/GasBadStakingMining.sol:GasBadStakingMining",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "20",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "contractName": "SalesFactory",
                                "type": "Contract"
                            },
                            "label": "salesFactory",
                            "offset": 0,
                            "slot": "4",
                            "type": "t_contract(SalesFactory)1698"
                        },
                        {
                            "astId": 69,
                            "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_31_44_283/.certora_sources/src/GasBadStakingMining.sol:GasBadStakingMining",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint256",
                                "type": "Primitive"
                            },
                            "label": "paidOut",
                            "offset": 0,
                            "slot": "5",
                            "type": "t_uint256"
                        },
                        {
                            "astId": 71,
                            "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_31_44_283/.certora_sources/src/GasBadStakingMining.sol:GasBadStakingMining",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint256",
                                "type": "Primitive"
                            },
                            "label": "totalRewards",
                            "offset": 0,
                            "slot": "6",
                            "type": "t_uint256"
                        },
                        {
                            "astId": 75,
                            "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_31_44_283/.certora_sources/src/GasBadStakingMining.sol:GasBadStakingMining",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "dynamicArrayBaseType": {
                                    "annotations": [
                                        {
                                            "numberOfBytes": "160",
                                            "type": "StorageAnnotation"
                                        }
                                    ],
                                    "astId": 55,
                                    "canonicalId": "src/GasBadStakingMining.sol|GasBadStakingMining.Pool",
                                    "containingContract": "GasBadStakingMining",
                                    "structMembers": [
                                        {
                                            "name": "lpToken",
                                            "type": {
                                                "annotations": [
                                                    {
                                                        "numberOfBytes": "20",
                                                        "offset": 0,
                                                        "slot": "0",
                                                        "type": "StorageAnnotation"
                                                    }
                                                ],
                                                "contractName": "IERC20",
                                                "type": "Contract"
                                            }
                                        },
                                        {
                                            "name": "allocPoint",
                                            "type": {
                                                "annotations": [
                                                    {
                                                        "numberOfBytes": "32",
                                                        "offset": 0,
                                                        "slot": "1",
                                                        "type": "StorageAnnotation"
                                                    }
                                                ],
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "lastRewardTimestamp",
                                            "type": {
                                                "annotations": [
                                                    {
                                                        "numberOfBytes": "32",
                                                        "offset": 0,
                                                        "slot": "2",
                                                        "type": "StorageAnnotation"
                                                    }
                                                ],
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "accERC20PerShare",
                                            "type": {
                                                "annotations": [
                                                    {
                                                        "numberOfBytes": "32",
                                                        "offset": 0,
                                                        "slot": "3",
                                                        "type": "StorageAnnotation"
                                                    }
                                                ],
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "totalDeposits",
                                            "type": {
                                                "annotations": [
                                                    {
                                                        "numberOfBytes": "32",
                                                        "offset": 0,
                                                        "slot": "4",
                                                        "type": "StorageAnnotation"
                                                    }
                                                ],
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        }
                                    ],
                                    "structName": "Pool",
                                    "type": "UserDefinedStruct"
                                },
                                "type": "Array"
                            },
                            "label": "poolArr",
                            "offset": 0,
                            "slot": "7",
                            "type": "t_array(t_struct(Pool)55_storage)dyn_storage"
                        },
                        {
                            "astId": 82,
                            "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_31_44_283/.certora_sources/src/GasBadStakingMining.sol:GasBadStakingMining",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "mappingKeyType": {
                                    "annotations": [
                                        {
                                            "numberOfBytes": "32",
                                            "type": "StorageAnnotation"
                                        }
                                    ],
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                },
                                "mappingValueType": {
                                    "annotations": [
                                        {
                                            "numberOfBytes": "32",
                                            "type": "StorageAnnotation"
                                        }
                                    ],
                                    "mappingKeyType": {
                                        "annotations": [
                                            {
                                                "numberOfBytes": "20",
                                                "type": "StorageAnnotation"
                                            }
                                        ],
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    },
                                    "mappingValueType": {
                                        "annotations": [
                                            {
                                                "numberOfBytes": "128",
                                                "type": "StorageAnnotation"
                                            }
                                        ],
                                        "astId": 43,
                                        "canonicalId": "src/GasBadStakingMining.sol|GasBadStakingMining.User",
                                        "containingContract": "GasBadStakingMining",
                                        "structMembers": [
                                            {
                                                "name": "amount",
                                                "type": {
                                                    "annotations": [
                                                        {
                                                            "numberOfBytes": "32",
                                                            "offset": 0,
                                                            "slot": "0",
                                                            "type": "StorageAnnotation"
                                                        }
                                                    ],
                                                    "primitiveName": "uint256",
                                                    "type": "Primitive"
                                                }
                                            },
                                            {
                                                "name": "rewardDebt",
                                                "type": {
                                                    "annotations": [
                                                        {
                                                            "numberOfBytes": "32",
                                                            "offset": 0,
                                                            "slot": "1",
                                                            "type": "StorageAnnotation"
                                                        }
                                                    ],
                                                    "primitiveName": "uint256",
                                                    "type": "Primitive"
                                                }
                                            },
                                            {
                                                "name": "tokensUnlockTime",
                                                "type": {
                                                    "annotations": [
                                                        {
                                                            "numberOfBytes": "32",
                                                            "offset": 0,
                                                            "slot": "2",
                                                            "type": "StorageAnnotation"
                                                        }
                                                    ],
                                                    "primitiveName": "uint256",
                                                    "type": "Primitive"
                                                }
                                            },
                                            {
                                                "name": "salesRegistered",
                                                "type": {
                                                    "annotations": [
                                                        {
                                                            "numberOfBytes": "32",
                                                            "offset": 0,
                                                            "slot": "3",
                                                            "type": "StorageAnnotation"
                                                        }
                                                    ],
                                                    "dynamicArrayBaseType": {
                                                        "annotations": [
                                                            {
                                                                "numberOfBytes": "20",
                                                                "type": "StorageAnnotation"
                                                            }
                                                        ],
                                                        "primitiveName": "address",
                                                        "type": "Primitive"
                                                    },
                                                    "type": "Array"
                                                }
                                            }
                                        ],
                                        "structName": "User",
                                        "type": "UserDefinedStruct"
                                    },
                                    "type": "Mapping"
                                },
                                "type": "Mapping"
                            },
                            "label": "userMap",
                            "offset": 0,
                            "slot": "8",
                            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(User)43_storage))"
                        },
                        {
                            "astId": 84,
                            "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_31_44_283/.certora_sources/src/GasBadStakingMining.sol:GasBadStakingMining",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint256",
                                "type": "Primitive"
                            },
                            "label": "totalAllocPoint",
                            "offset": 0,
                            "slot": "9",
                            "type": "t_uint256"
                        }
                    ],
                    "types": {
                        "t_address": {
                            "encoding": "inplace",
                            "label": "address",
                            "numberOfBytes": "20"
                        },
                        "t_array(t_address)dyn_storage": {
                            "base": "t_address",
                            "encoding": "dynamic_array",
                            "label": "address[]",
                            "numberOfBytes": "32"
                        },
                        "t_array(t_struct(Pool)55_storage)dyn_storage": {
                            "base": "t_struct(Pool)55_storage",
                            "encoding": "dynamic_array",
                            "label": "struct GasBadStakingMining.Pool[]",
                            "numberOfBytes": "32"
                        },
                        "t_contract(IERC20)2523": {
                            "encoding": "inplace",
                            "label": "contract IERC20",
                            "numberOfBytes": "20"
                        },
                        "t_contract(SalesFactory)1698": {
                            "encoding": "inplace",
                            "label": "contract SalesFactory",
                            "numberOfBytes": "20"
                        },
                        "t_mapping(t_address,t_struct(User)43_storage)": {
                            "encoding": "mapping",
                            "key": "t_address",
                            "label": "mapping(address => struct GasBadStakingMining.User)",
                            "numberOfBytes": "32",
                            "value": "t_struct(User)43_storage"
                        },
                        "t_mapping(t_uint256,t_mapping(t_address,t_struct(User)43_storage))": {
                            "encoding": "mapping",
                            "key": "t_uint256",
                            "label": "mapping(uint256 => mapping(address => struct GasBadStakingMining.User))",
                            "numberOfBytes": "32",
                            "value": "t_mapping(t_address,t_struct(User)43_storage)"
                        },
                        "t_struct(Pool)55_storage": {
                            "encoding": "inplace",
                            "label": "struct GasBadStakingMining.Pool",
                            "members": [
                                {
                                    "astId": 46,
                                    "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_31_44_283/.certora_sources/src/GasBadStakingMining.sol:GasBadStakingMining",
                                    "label": "lpToken",
                                    "offset": 0,
                                    "slot": "0",
                                    "type": "t_contract(IERC20)2523"
                                },
                                {
                                    "astId": 48,
                                    "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_31_44_283/.certora_sources/src/GasBadStakingMining.sol:GasBadStakingMining",
                                    "label": "allocPoint",
                                    "offset": 0,
                                    "slot": "1",
                                    "type": "t_uint256"
                                },
                                {
                                    "astId": 50,
                                    "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_31_44_283/.certora_sources/src/GasBadStakingMining.sol:GasBadStakingMining",
                                    "label": "lastRewardTimestamp",
                                    "offset": 0,
                                    "slot": "2",
                                    "type": "t_uint256"
                                },
                                {
                                    "astId": 52,
                                    "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_31_44_283/.certora_sources/src/GasBadStakingMining.sol:GasBadStakingMining",
                                    "label": "accERC20PerShare",
                                    "offset": 0,
                                    "slot": "3",
                                    "type": "t_uint256"
                                },
                                {
                                    "astId": 54,
                                    "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_31_44_283/.certora_sources/src/GasBadStakingMining.sol:GasBadStakingMining",
                                    "label": "totalDeposits",
                                    "offset": 0,
                                    "slot": "4",
                                    "type": "t_uint256"
                                }
                            ],
                            "numberOfBytes": "160"
                        },
                        "t_struct(User)43_storage": {
                            "encoding": "inplace",
                            "label": "struct GasBadStakingMining.User",
                            "members": [
                                {
                                    "astId": 35,
                                    "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_31_44_283/.certora_sources/src/GasBadStakingMining.sol:GasBadStakingMining",
                                    "label": "amount",
                                    "offset": 0,
                                    "slot": "0",
                                    "type": "t_uint256"
                                },
                                {
                                    "astId": 37,
                                    "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_31_44_283/.certora_sources/src/GasBadStakingMining.sol:GasBadStakingMining",
                                    "label": "rewardDebt",
                                    "offset": 0,
                                    "slot": "1",
                                    "type": "t_uint256"
                                },
                                {
                                    "astId": 39,
                                    "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_31_44_283/.certora_sources/src/GasBadStakingMining.sol:GasBadStakingMining",
                                    "label": "tokensUnlockTime",
                                    "offset": 0,
                                    "slot": "2",
                                    "type": "t_uint256"
                                },
                                {
                                    "astId": 42,
                                    "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_31_44_283/.certora_sources/src/GasBadStakingMining.sol:GasBadStakingMining",
                                    "label": "salesRegistered",
                                    "offset": 0,
                                    "slot": "3",
                                    "type": "t_array(t_address)dyn_storage"
                                }
                            ],
                            "numberOfBytes": "128"
                        },
                        "t_uint256": {
                            "encoding": "inplace",
                            "label": "uint256",
                            "numberOfBytes": "32"
                        }
                    }
                },
                "transientStorageLayout": null,
                "varmap": ""
            }
        ],
        "legacyStructLinking": {},
        "library_addresses": [],
        "origSourceDir": ".pre_autofinders.0",
        "primary_contract": "GasBadStakingMining",
        "primary_contract_address": "00000000ce4604a0000000000000000000000014",
        "prototypeFor": [],
        "sdc_name": "GasBadStakingMining.sol_0",
        "sourceDir": ".post_autofinders.0",
        "srclist": {
            "0": "src/GasBadStakingMining.sol",
            "1": "src/LibCalReward.sol",
            "2": "src/StakingMining.sol",
            "3": "src/sale/IceFrogSale.sol",
            "4": "src/sale/SalesFactory.sol",
            "5": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
            "6": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
            "7": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
            "8": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
            "9": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol",
            "10": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol",
            "11": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol",
            "12": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol",
            "13": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol",
            "14": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
            "15": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
            "16": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
            "17": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
            "18": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
            "19": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol",
            "20": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Context.sol",
            "21": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Errors.sol",
            "22": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Panic.sol",
            "23": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol",
            "24": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
            "25": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
            "26": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
            "27": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol",
            "28": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
            "29": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
            "30": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol",
            "31": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol"
        },
        "state": {},
        "structLinkingInfo": {}
    },
    "StakingMining_00000000ce4604a000000000000000000000003d": {
        "contracts": [
            {
                "address": "00000000ce4604a000000000000000000000003d",
                "allMethods": [
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "UPGRADE_INTERFACE_VERSION",
                        "notpayable": true,
                        "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            }
                        ],
                        "sighash": "ad3cb1cc",
                        "sourceBytes": {
                            "begin": 1819,
                            "size": 58
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "_authorizeUpgrade",
                        "notpayable": true,
                        "originalFile": null,
                        "paramNames": [
                            "newImplementation"
                        ],
                        "returns": [],
                        "sighash": "0",
                        "sourceBytes": null,
                        "stateMutability": "nonpayable",
                        "visibility": "internal"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "contractName": "IERC20",
                                    "type": "Contract"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "add",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [
                            "_allocPoint",
                            "_lpToken",
                            "_withUpdate"
                        ],
                        "returns": [],
                        "sighash": "1eaaa045",
                        "sourceBytes": {
                            "begin": 5290,
                            "size": 652
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "compound",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [
                            "_poolId"
                        ],
                        "returns": [],
                        "sighash": "aa5f7e26",
                        "sourceBytes": {
                            "begin": 10260,
                            "size": 835
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "constructor",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [],
                        "returns": [],
                        "sighash": "0",
                        "sourceBytes": {
                            "begin": 4120,
                            "size": 53
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "deposit",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [
                            "_poolId",
                            "_amount"
                        ],
                        "returns": [],
                        "sighash": "e2bbb158",
                        "sourceBytes": {
                            "begin": 7653,
                            "size": 1007
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "emergencyWithdraw",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [
                            "_poolId"
                        ],
                        "returns": [],
                        "sighash": "5312ea8e",
                        "sourceBytes": {
                            "begin": 9800,
                            "size": 454
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "fund",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [
                            "_amount"
                        ],
                        "returns": [],
                        "sighash": "ca1d209d",
                        "sourceBytes": {
                            "begin": 4804,
                            "size": 328
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "getDeposited",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [
                            "_poolId",
                            "_user"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "e86facc5",
                        "sourceBytes": {
                            "begin": 13552,
                            "size": 202
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getEndTimestamp",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "74e94deb",
                        "sourceBytes": {
                            "begin": 12518,
                            "size": 95
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getPaidOut",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "b3458b4b",
                        "sourceBytes": {
                            "begin": 13760,
                            "size": 85
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "dynamicArrayBaseType": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    },
                                    "type": "Array"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "getPendingAndDepositedForUsers",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [
                            "users",
                            "poolId"
                        ],
                        "returns": [
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "dynamicArrayBaseType": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    },
                                    "type": "Array"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "dynamicArrayBaseType": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    },
                                    "type": "Array"
                                }
                            }
                        ],
                        "sighash": "fcfc1b14",
                        "sourceBytes": {
                            "begin": 12864,
                            "size": 562
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "getPendingReward",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [
                            "_poolId",
                            "_user"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "c59b1f3c",
                        "sourceBytes": {
                            "begin": 14098,
                            "size": 1761
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "getPoolInfo",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [
                            "poolId"
                        ],
                        "returns": [
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "astId": 55,
                                    "canonicalId": "src/StakingMining.sol|StakingMining.Pool",
                                    "containingContract": "StakingMining",
                                    "structMembers": [
                                        {
                                            "name": "lpToken",
                                            "type": {
                                                "contractName": "IERC20",
                                                "type": "Contract"
                                            }
                                        },
                                        {
                                            "name": "allocPoint",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "lastRewardTimestamp",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "accERC20PerShare",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "totalDeposits",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        }
                                    ],
                                    "structName": "Pool",
                                    "type": "UserDefinedStruct"
                                }
                            }
                        ],
                        "sighash": "2f380b35",
                        "sourceBytes": {
                            "begin": 12746,
                            "size": 112
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getPoolNum",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "212af18d",
                        "sourceBytes": {
                            "begin": 13454,
                            "size": 92
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getRewardPerSec",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "e0d41c02",
                        "sourceBytes": {
                            "begin": 11967,
                            "size": 98
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getRewardToken",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "contractName": "IERC20",
                                    "type": "Contract"
                                }
                            }
                        ],
                        "sighash": "69940d79",
                        "sourceBytes": {
                            "begin": 12071,
                            "size": 86
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getStakingMiningDuration",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "a242057a",
                        "sourceBytes": {
                            "begin": 12619,
                            "size": 121
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getStartTimestamp",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "1f89f25e",
                        "sourceBytes": {
                            "begin": 12413,
                            "size": 99
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getTotalAllocPoint",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "3a58b91a",
                        "sourceBytes": {
                            "begin": 12264,
                            "size": 101
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getTotalPending",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "3bd05400",
                        "sourceBytes": {
                            "begin": 15915,
                            "size": 427
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getTotalRewards",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "e627f2db",
                        "sourceBytes": {
                            "begin": 12163,
                            "size": 95
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "getUserInfoInPool",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [
                            "_poolId",
                            "_user"
                        ],
                        "returns": [
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "astId": 43,
                                    "canonicalId": "src/StakingMining.sol|StakingMining.User",
                                    "containingContract": "StakingMining",
                                    "structMembers": [
                                        {
                                            "name": "amount",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "rewardDebt",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "tokensUnlockTime",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "salesRegistered",
                                            "type": {
                                                "dynamicArrayBaseType": {
                                                    "primitiveName": "address",
                                                    "type": "Primitive"
                                                },
                                                "type": "Array"
                                            }
                                        }
                                    ],
                                    "structName": "User",
                                    "type": "UserDefinedStruct"
                                }
                            }
                        ],
                        "sighash": "f70fd81c",
                        "sourceBytes": {
                            "begin": 13851,
                            "size": 203
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "contractName": "IERC20",
                                    "type": "Contract"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "initialize",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [
                            "_erc20",
                            "_rewardPerSecond",
                            "_startTimestamp",
                            "_salesFactory"
                        ],
                        "returns": [],
                        "sighash": "9e3d87cd",
                        "sourceBytes": {
                            "begin": 4199,
                            "size": 445
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "massUpdatePools",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [],
                        "returns": [],
                        "sighash": "630b5ba1",
                        "sourceBytes": {
                            "begin": 6439,
                            "size": 186
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "owner",
                        "notpayable": true,
                        "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "8da5cb5b",
                        "sourceBytes": {
                            "begin": 2441,
                            "size": 144
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "proxiableUUID",
                        "notpayable": true,
                        "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "bytes32",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "52d1902d",
                        "sourceBytes": {
                            "begin": 3708,
                            "size": 134
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "renounceOwnership",
                        "notpayable": true,
                        "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
                        "paramNames": [],
                        "returns": [],
                        "sighash": "715018a6",
                        "sourceBytes": {
                            "begin": 3155,
                            "size": 101
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "set",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [
                            "_poolId",
                            "_allocPoint",
                            "_withUpdate"
                        ],
                        "returns": [],
                        "sighash": "64482f79",
                        "sourceBytes": {
                            "begin": 5988,
                            "size": 366
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setSalesFactory",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [
                            "_salesFactory"
                        ],
                        "returns": [],
                        "sighash": "3dfcb861",
                        "sourceBytes": {
                            "begin": 11101,
                            "size": 236
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setTokensUnlockTime",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [
                            "_poolId",
                            "_user",
                            "_tokensUnlockTime"
                        ],
                        "returns": [],
                        "sighash": "e6f04acc",
                        "sourceBytes": {
                            "begin": 11343,
                            "size": 536
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "transferOwnership",
                        "notpayable": true,
                        "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
                        "paramNames": [
                            "newOwner"
                        ],
                        "returns": [],
                        "sighash": "f2fde38b",
                        "sourceBytes": {
                            "begin": 3405,
                            "size": 215
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "updatePool",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [
                            "_pid"
                        ],
                        "returns": [],
                        "sighash": "51eb05a6",
                        "sourceBytes": {
                            "begin": 6684,
                            "size": 929
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "PackedBytes"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "upgradeToAndCall",
                        "notpayable": false,
                        "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
                        "paramNames": [
                            "newImplementation",
                            "data"
                        ],
                        "returns": [],
                        "sighash": "4f1ef286",
                        "sourceBytes": {
                            "begin": 4161,
                            "size": 214
                        },
                        "stateMutability": "payable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "version",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "54fd4d50",
                        "sourceBytes": {
                            "begin": 11885,
                            "size": 76
                        },
                        "stateMutability": "pure",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "withdraw",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [
                            "_poolId",
                            "_amount"
                        ],
                        "returns": [],
                        "sighash": "441a3e70",
                        "sourceBytes": {
                            "begin": 8756,
                            "size": 1003
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    }
                ],
                "bytecode": "60806040526004361015610013575b61119f565b61001d5f3561023c565b80631eaaa045146102375780631f89f25e14610232578063212af18d1461022d5780632f380b35146102285780633a58b91a146102235780633bd054001461021e5780633dfcb86114610219578063441a3e70146102145780634f1ef2861461020f57806351eb05a61461020a57806352d1902d146102055780635312ea8e1461020057806354fd4d50146101fb578063630b5ba1146101f657806364482f79146101f157806369940d79146101ec578063715018a6146101e757806374e94deb146101e25780638da5cb5b146101dd5780639e3d87cd146101d8578063a242057a146101d3578063aa5f7e26146101ce578063ad3cb1cc146101c9578063b3458b4b146101c4578063c59b1f3c146101bf578063ca1d209d146101ba578063e0d41c02146101b5578063e2bbb158146101b0578063e627f2db146101ab578063e6f04acc146101a6578063e86facc5146101a1578063f2fde38b1461019c578063f70fd81c146101975763fcfc1b140361000e57611168565b610fad565b610e89565b610e53565b610e1f565b610db0565b610d7c565b610d47565b610d14565b610cde565b610c7c565b610c47565b610b00565b610acb565b610a94565b610a19565b6109c2565b61098f565b61095a565b610904565b610897565b610862565b61082f565b6107fa565b6107a2565b610778565b610614565b6105b4565b61053e565b610509565b6104d4565b6103c1565b61038c565b610327565b60e01c90565b60405190565b5f80fd5b5f80fd5b5f80fd5b90565b61026081610254565b0361026757565b5f80fd5b9050359061027882610257565b565b60018060a01b031690565b61028e9061027a565b90565b61029a90610285565b90565b6102a681610291565b036102ad57565b5f80fd5b905035906102be8261029d565b565b151590565b6102ce816102c0565b036102d557565b5f80fd5b905035906102e6826102c5565b565b909160608284031261031d5761031a610303845f850161026b565b9361031181602086016102b1565b936040016102d9565b90565b61024c565b5f0190565b346103565761034061033a3660046102e8565b9161161a565b610348610242565b8061035281610322565b0390f35b610248565b5f91031261036557565b61024c565b61037390610254565b9052565b919061038a905f6020850194019061036a565b565b346103bc5761039c36600461035b565b6103b86103a761162b565b6103af610242565b91829182610377565b0390f35b610248565b346103f1576103d136600461035b565b6103ed6103dc611645565b6103e4610242565b91829182610377565b0390f35b610248565b9060208282031261040f5761040c915f0161026b565b90565b61024c565b90565b61042b6104266104309261027a565b610414565b61027a565b90565b61043c90610417565b90565b61044890610433565b90565b6104549061043f565b9052565b61046190610254565b9052565b906080806104bd9361047d5f8201515f86019061044b565b61048f60208201516020860190610458565b6104a160408201516040860190610458565b6104b360608201516060860190610458565b0151910190610458565b565b91906104d2905f60a08501940190610465565b565b34610504576105006104ef6104ea3660046103f6565b6117af565b6104f7610242565b918291826104bf565b0390f35b610248565b346105395761051936600461035b565b6105356105246117cf565b61052c610242565b91829182610377565b0390f35b610248565b3461056e5761054e36600461035b565b61056a61055961183f565b610561610242565b91829182610377565b0390f35b610248565b61057c81610285565b0361058357565b5f80fd5b9050359061059482610573565b565b906020828203126105af576105ac915f01610587565b90565b61024c565b346105e2576105cc6105c7366004610596565b611a0e565b6105d4610242565b806105de81610322565b0390f35b610248565b919060408382031261060f578061060361060c925f860161026b565b9360200161026b565b90565b61024c565b346106435761062d6106273660046105e7565b90611abd565b610635610242565b8061063f81610322565b0390f35b610248565b5f80fd5b5f80fd5b601f801991011690565b634e487b7160e01b5f52604160045260245ffd5b9061067890610650565b810190811067ffffffffffffffff82111761069257604052565b61065a565b906106aa6106a3610242565b928361066e565b565b67ffffffffffffffff81116106ca576106c6602091610650565b0190565b61065a565b90825f939282370152565b909291926106ef6106ea826106ac565b610697565b9381855260208501908284011161070b57610709926106cf565b565b61064c565b9080601f8301121561072e5781602061072b933591016106da565b90565b610648565b9190916040818403126107735761074c835f8301610587565b92602082013567ffffffffffffffff811161076e5761076b9201610710565b90565b610250565b61024c565b61078c610786366004610733565b90611f2f565b610794610242565b8061079e81610322565b0390f35b346107d0576107ba6107b53660046103f6565b611f90565b6107c2610242565b806107cc81610322565b0390f35b610248565b90565b6107e1906107d5565b9052565b91906107f8905f602085019401906107d8565b565b3461082a5761080a36600461035b565b6108266108156122c7565b61081d610242565b918291826107e5565b0390f35b610248565b3461085d576108476108423660046103f6565b6122da565b61084f610242565b8061085981610322565b0390f35b610248565b346108925761087236600461035b565b61088e61087d612537565b610885610242565b91829182610377565b0390f35b610248565b346108c5576108a736600461035b565b6108af61255c565b6108b7610242565b806108c181610322565b0390f35b610248565b90916060828403126108ff576108fc6108e5845f850161026b565b936108f3816020860161026b565b936040016102d9565b90565b61024c565b346109335761091d6109173660046108ca565b91612756565b610925610242565b8061092f81610322565b0390f35b610248565b6109419061043f565b9052565b9190610958905f60208501940190610938565b565b3461098a5761096a36600461035b565b610986610975612767565b61097d610242565b91829182610945565b0390f35b610248565b346109bd5761099f36600461035b565b6109a76127f6565b6109af610242565b806109b981610322565b0390f35b610248565b346109f2576109d236600461035b565b6109ee6109dd612800565b6109e5610242565b91829182610377565b0390f35b610248565b610a0090610285565b9052565b9190610a17905f602085019401906109f7565b565b34610a4957610a2936600461035b565b610a45610a34612846565b610a3c610242565b91829182610a04565b0390f35b610248565b608081830312610a8f57610a64825f83016102b1565b92610a8c610a75846020850161026b565b93610a83816040860161026b565b93606001610587565b90565b61024c565b34610ac657610ab0610aa7366004610a4e565b92919091612dcb565b610ab8610242565b80610ac281610322565b0390f35b610248565b34610afb57610adb36600461035b565b610af7610ae6612dd9565b610aee610242565b91829182610377565b0390f35b610248565b34610b2e57610b18610b133660046103f6565b612e45565b610b20610242565b80610b2a81610322565b0390f35b610248565b67ffffffffffffffff8111610b5157610b4d602091610650565b0190565b61065a565b90610b68610b6383610b33565b610697565b918252565b5f7f352e302e30000000000000000000000000000000000000000000000000000000910152565b610b9e6005610b56565b90610bab60208301610b6d565b565b610bb5610b94565b90565b610bc0610bad565b90565b610bcb610bb8565b90565b5190565b60209181520190565b5f5b838110610bed575050905f910152565b806020918301518185015201610bdd565b610c1d610c26602093610c2b93610c1481610bce565b93848093610bd2565b95869101610bdb565b610650565b0190565b610c449160208201915f818403910152610bfe565b90565b34610c7757610c5736600461035b565b610c73610c62610bc3565b610c6a610242565b91829182610c2f565b0390f35b610248565b34610cac57610c8c36600461035b565b610ca8610c976130fd565b610c9f610242565b91829182610377565b0390f35b610248565b9190604083820312610cd95780610ccd610cd6925f860161026b565b93602001610587565b90565b61024c565b34610d0f57610d0b610cfa610cf4366004610cb1565b90613113565b610d02610242565b91829182610377565b0390f35b610248565b34610d4257610d2c610d273660046103f6565b61342d565b610d34610242565b80610d3e81610322565b0390f35b610248565b34610d7757610d5736600461035b565b610d73610d6261354e565b610d6a610242565b91829182610377565b0390f35b610248565b34610dab57610d95610d8f3660046105e7565b90613564565b610d9d610242565b80610da781610322565b0390f35b610248565b34610de057610dc036600461035b565b610ddc610dcb6138ed565b610dd3610242565b91829182610377565b0390f35b610248565b9091606082840312610e1a57610e17610e00845f850161026b565b93610e0e8160208601610587565b9360400161026b565b90565b61024c565b34610e4e57610e38610e32366004610de5565b91613b93565b610e40610242565b80610e4a81610322565b0390f35b610248565b34610e8457610e80610e6f610e69366004610cb1565b90613ba0565b610e77610242565b91829182610377565b0390f35b610248565b34610eb757610ea1610e9c366004610596565b613d6d565b610ea9610242565b80610eb381610322565b0390f35b610248565b5190565b60209181520190565b60200190565b610ed890610285565b9052565b90610ee981602093610ecf565b0190565b60200190565b90610f10610f0a610f0384610ebc565b8093610ec0565b92610ec9565b905f5b818110610f205750505090565b909192610f39610f336001928651610edc565b94610eed565b9101919091610f13565b610f929160606080820192610f5e5f8201515f850190610458565b610f7060208201516020850190610458565b610f8260408201516040850190610458565b0151906060818403910152610ef3565b90565b610faa9160208201915f818403910152610f43565b90565b34610fde57610fda610fc9610fc3366004610cb1565b90613ef1565b610fd1610242565b91829182610f95565b0390f35b610248565b67ffffffffffffffff8111610ffb5760208091020190565b61065a565b5f80fd5b9092919261101961101482610fe3565b610697565b938185526020808601920283019281841161105657915b83831061103d5750505050565b6020809161104b8486610587565b815201920191611030565b611000565b9080601f830112156110795781602061107693359101611004565b90565b610648565b91906040838203126110be575f8301359067ffffffffffffffff82116110b9576110ad816110b693860161105b565b9360200161026b565b90565b610250565b61024c565b5190565b60209181520190565b60200190565b906110e381602093610458565b0190565b60200190565b9061110a6111046110fd846110c3565b80936110c7565b926110d0565b905f5b81811061111a5750505090565b90919261113361112d60019286516110d6565b946110e7565b910191909161110d565b90916111576111659360408401908482035f8601526110ed565b9160208184039101526110ed565b90565b3461119a5761118161117b36600461107e565b90614080565b9061119661118d610242565b9283928361113d565b0390f35b610248565b5f80fd5b9061126492918082849164f196e500617fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff006100005260037fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00610001527fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00611000527fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00611001527fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff0061100252611266565b565b90611279929161127461420e565b61151b565b565b5f1c90565b90565b61128f6112949161127b565b611280565b90565b6112a19054611283565b90565b634e487b7160e01b5f52601160045260245ffd5b6112c76112cd91939293610254565b92610254565b82018092116112d857565b6112a4565b5f1b90565b906112ee5f19916112dd565b9181191691161790565b61130c61130761131192610254565b610414565b610254565b90565b90565b9061132c611327611333926112f8565b611314565b82546112e2565b9055565b90565b61134460a0610697565b90565b9061135190610291565b9052565b9061135f90610254565b9052565b90565b61137a61137561137f92611363565b610414565b610254565b90565b5f5260205f2090565b634e487b7160e01b5f52603260045260245ffd5b5490565b6113ac8161139f565b8210156113c6576113be600591611382565b910201905f90565b61138b565b634e487b7160e01b5f525f60045260245ffd5b6113e89051610291565b90565b906113fc60018060a01b03916112dd565b9181191691161790565b61140f90610417565b90565b61141b90611406565b90565b90565b9061143661143161143d92611412565b61141e565b82546113eb565b9055565b61144b9051610254565b90565b906114c4608060046114ca946114715f820161146b5f88016113de565b90611421565b61148a6001820161148460208801611441565b90611317565b6114a36002820161149d60408801611441565b90611317565b6114bc600382016114b660608801611441565b90611317565b019201611441565b90611317565b565b91906114dd576114db9161144e565b565b6113cb565b1b90565b9081549168010000000000000000831015611516578261150e916001611514950181556113a3565b906114cc565b565b61065a565b906115f16115e85f936115f69561160d575b4261154961154361153e6002611297565b610254565b91610254565b1185146115f8576115e36115da425b807fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff000000015261159961159261158b6009611297565b86906112b8565b6009611317565b6115d56115a66007611337565b9794916115cc8a936115c38c986115bb61133a565b9d8e01611347565b60208c01611355565b60408a01611355565b611366565b60608701611355565b611366565b60808401611355565b6114e6565b565b6115e36115da6116086002611297565b611558565b61161561255c565b61152d565b9061162592916111a3565b565b5f90565b611633611627565b5061163e6002611297565b90565b5490565b61164d611627565b506116586007611641565b90565b61166560a0610697565b90565b5f90565b5f90565b61167861165b565b9060208080808086611688611668565b81520161169361166c565b81520161169e61166c565b8152016116a961166c565b8152016116b461166c565b81525050565b6116c2611670565b90565b5f5260205f2090565b6116d781611641565b8210156116f1576116e96005916116c5565b910201905f90565b61138b565b60018060a01b031690565b61170d6117129161127b565b6116f6565b90565b61171f9054611701565b90565b906117a1611798600461173361165b565b9461174a6117425f8301611715565b5f8801611347565b61176261175960018301611297565b60208801611355565b61177a61177160028301611297565b60408801611355565b61179261178960038301611297565b60608801611355565b01611297565b60808401611355565b565b6117ac90611722565b90565b6117c66117cc916117be6116ba565b5060076116ce565b506117a3565b90565b6117d7611627565b506117e26009611297565b90565b6117f46117fa91939293610254565b92610254565b820391821161180557565b6112a4565b61181961181f91939293610254565b92610254565b9161182b838202610254565b92818404149015171561183a57565b6112a4565b611847611627565b504261186461185e6118596002611297565b610254565b91610254565b1115611928574261188661188061187b6003611297565b610254565b91610254565b105f146119105761190d6118fd6118cb425b807fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0000001c526118c56002611297565b906117e5565b807fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0000001d526118f86001611297565b61180a565b6119076005611297565b906117e5565b90565b61190d6118fd6118cb6119236003611297565b611898565b6119315f611366565b90565b6119459061194061420e565b6119b6565b565b61195b61195661196092611363565b610414565b61027a565b90565b61196c90611947565b90565b61197890610417565b90565b6119849061196f565b90565b6119909061196f565b90565b90565b906119ab6119a66119b292611987565b611993565b82546113eb565b9055565b806119d16119cb6119c65f611963565b610285565b91610285565b146119eb576119e26119e99161197b565b6004611996565b565b6119f3610242565b6312e2c30b60e11b815280611a0a60048201610322565b0390fd5b611a1790611934565b565b90565b90611a26906112f8565b5f5260205260405f2090565b611a3b90610433565b90565b90611a4890611a32565b5f5260205260405f2090565b90565b60e01b90565b90505190611a6a826102c5565b565b90602082820312611a8557611a82915f01611a5d565b90565b61024c565b916020611aab929493611aa460408201965f8301906109f7565b019061036a565b565b611ab5610242565b3d5f823e3d90fd5b9064f196e5006f7fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff006f00005260027fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff006f000152817fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff006f100052807fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff006f100152611b65611b5f600784906116ce565b50611a19565b5f7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0001000a52611ba6611ba1611b9a60088690611a1c565b3390611a3e565b611a54565b905f7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0001000b52611bd55f8301611297565b611be7611be185610254565b91610254565b10611e4457611bf584611f90565b611c21611c035f8401611297565b611c0f60038401611297565b611c1b60018601611297565b916142cd565b90817fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0000000c52611c56611c515f611715565b61043f565b91602063a9059cbb933390611c7e5f8597611c89611c72610242565b998a9687958694611a57565b845260048401611a8a565b03925af1908115611e3f57611da094611cc4611cbd600193600497611d4296611e13575b50611cb86005611297565b6112b8565b6005611317565b611ce4611cdc611cd55f8401611297565b89906117e5565b5f8301611317565b611cef5f8201611297565b7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0000002352611d3c611d34611d225f8401611297565b611d2e60038801611297565b906143c2565b838301611317565b01611297565b7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0000002452611d7a611d725f8301611715565b3386916144bc565b611d9a611d92611d8b848401611297565b86906117e5565b838301611317565b01611297565b7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff000000255233919091611e0e611dfc611df67ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b56893611a32565b936112f8565b93611e05610242565b91829182610377565b0390a3565b611e339060203d8111611e38575b611e2b818361066e565b810190611a6c565b611cad565b503d611e21565b611aad565b611e4c610242565b63fb6e312960e01b815280611e6360048201610322565b0390fd5b90611f049180829064f196e500867fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff008600005260027fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00860001527fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00861000527fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff0086100152611f06565b565b90611f1891611f136145cb565b611f1a565b565b90611f2d91611f2881614749565b6147b9565b565b90611f3991611e67565b565b90565b611f52611f4d611f5792611f3b565b610414565b610254565b90565b634e487b7160e01b5f52601260045260245ffd5b611f7a611f8091610254565b91610254565b908115611f8b570490565b611f5a565b61200d6120139164f196e5006c7fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff006c00005260017fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff006c000152807fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff006c10005260076116ce565b50611a19565b5f7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff00010003524261205261204c6120476003611297565b610254565b91610254565b105f1461224957425b90817fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff00000004528161209d61209761209260028501611297565b610254565b91610254565b1115612245576120af60048201611297565b807fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0000000552806120e56120df5f611366565b91610254565b1461223557906121d16121c86002936121906121806121486121156122119961210f8a8a01611297565b906117e5565b807fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff00000006526121426001611297565b9061180a565b61217a61216a61215a60018a01611297565b6121646064611f3e565b9061180a565b6121746009611297565b90611f6e565b9061180a565b61218a6064611f3e565b90611f6e565b90817fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff00000007526121c060038601611297565b919091614957565b60038301611317565b6121dd60038201611297565b7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0000001e5261220b42838301611317565b01611297565b7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0000001f52565b506002612243929101611317565b565b5050565b6122536003611297565b61205b565b5f90565b61226d90612268614a4d565b6122bb565b90565b90565b61228761228261228c92612270565b6112dd565b6107d5565b90565b6122b87f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc612273565b90565b506122c461228f565b90565b6122d76122d2612258565b61225c565b90565b60016124f49164f196e500667fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff0066000052817fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff0066000152807fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff006610005261236361235d600783906116ce565b50611a19565b905f7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0001000d5261241e60046123aa6123a561239e60088690611a1c565b3390611a3e565b611a54565b935f7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0001000e526123ee6123dc5f8301611715565b336123e85f8901611297565b916144bc565b6124186124106123ff848401611297565b61240a5f8901611297565b906117e5565b838301611317565b01611297565b7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0000002652339061244d5f8401611297565b9161249661248461247e7fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae059593611a32565b936112f8565b9361248d610242565b91829182610377565b0390a36124ad6124a55f611366565b5f8301611317565b6124b85f8201611297565b7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff00000027526124ee6124e65f611366565b838301611317565b01611297565b7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0000002852565b90565b61252f61252a61253492612518565b610414565b610254565b90565b61253f611627565b5061254a600161251b565b90565b60016125599101610254565b90565b64f196e5006b7fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff006b0000525f7fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff006b0001526125b16007611641565b807fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff00000002526125dd5f611366565b5b806125f16125eb84610254565b91610254565b101561260e578061260461260992611f90565b61254d565b6125de565b5050565b906126d392918082849164f196e500707fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff007000005260037fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00700001527fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00701000527fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00701001527fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00701002526126d5565b565b906126e892916126e361420e565b6126ea565b565b9061274060019161274794612749575b61273861273161272a61270d6009611297565b6127248761271d60078b906116ce565b5001611297565b906117e5565b83906112b8565b6009611317565b9260076116ce565b5001611317565b565b61275161255c565b6126fa565b906127619291612612565b565b5f90565b61276f612763565b506127795f611715565b90565b64f196e5007b7fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff007b0000525f7fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff007b0001526127cf6127d1565b565b6127d961420e565b6127e16127e3565b565b6127f46127ef5f611963565b614b1d565b565b6127fe61277c565b565b612808611627565b506128136003611297565b90565b5f90565b60018060a01b031690565b6128316128369161127b565b61281a565b90565b6128439054612825565b90565b61284e612816565b5064f196e500687fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00680000525f7fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00680001526128cf5f6128a6614c6a565b817fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff000100335201612839565b90565b906129b893929180828490869264f196e500657fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff006500005260047fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00650001527fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00651000527fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00651001527fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00651002527fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff0065100352612b37565b565b60401c90565b60ff1690565b6129d26129d7916129ba565b6129c0565b90565b6129e490546129c6565b90565b67ffffffffffffffff1690565b612a00612a059161127b565b6129e7565b90565b612a1290546129f4565b90565b67ffffffffffffffff1690565b612a36612a31612a3b92611363565b610414565b612a15565b90565b612a52612a4d612a5792612518565b610414565b612a15565b90565b612a6390610433565b90565b90612a7967ffffffffffffffff916112dd565b9181191691161790565b612a97612a92612a9c92612a15565b610414565b612a15565b90565b90565b90612ab7612ab2612abe92612a83565b612a9f565b8254612a66565b9055565b60401b90565b90612adc68ff000000000000000091612ac2565b9181191691161790565b612aef906102c0565b90565b90565b90612b0a612b05612b1192612ae6565b612af2565b8254612ac8565b9055565b612b1e90612a3e565b9052565b9190612b35905f60208501940190612b15565b565b909192612b42614cd9565b935f7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0001003752612b7a612b745f87016129da565b156102c0565b93847fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0000003852612ba95f8701612a08565b807fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff000000395280612bdf612bd95f612a22565b91612a15565b1480612d73575b90817fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0000003a52612c1d612c176001612a3e565b91612a15565b1480612d4b575b612c529091827fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0000003b52156102c0565b9081612d3a575b50612d1757612caf93612c77612c6f6001612a3e565b5f8901612aa2565b612c825f8801612a08565b7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0000003e5285612d05575b612d7a565b612cb7575b50565b612cc4905f809101612af5565b6001612cfc7fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d291612cf3610242565b91829182612b22565b0390a15f612cb4565b612d1260015f8901612af5565b612caa565b612d1f610242565b63f92ee8a960e01b815280612d3660048201610322565b0390fd5b612d459150156102c0565b5f612c59565b50612c52612d5830612a5a565b3b612d6b612d655f611366565b91610254565b149050612c24565b5085612be6565b612dc292612dab612dc99593612da4612dbd94612d9633614de0565b612d9e614e4a565b5f611421565b6001611317565b612db6816002611317565b6003611317565b61197b565b6004611996565b565b90612dd79392916128d2565b565b612de1611627565b50612dff612def6003611297565b612df96002611297565b906117e5565b90565b634e487b7160e01b5f52600160045260245ffd5b15612e1d57565b612e02565b916020612e43929493612e3c60408201965f83019061036a565b019061036a565b565b64f196e5006d7fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff006d00005260017fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff006d000152807fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff006d100052612ec9612ec3600783906116ce565b50611a19565b5f7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0001000f52612f0a612f05612efe60088590611a1c565b3390611a3e565b611a54565b915f7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0001001052612f55612f3c5f8501611297565b612f4e612f485f611366565b91610254565b1015612e16565b612f5e81611f90565b6130806004612f8f612f715f8701611297565b612f7d60038701611297565b612f8960018901611297565b916142cd565b93847fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0000001152612fd3612fcb612fc45f8901611297565b87906112b8565b5f8801611317565b612fde5f8701611297565b7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff000000295261302c6130236130115f8901611297565b61301d60038501611297565b906143c2565b60018801611317565b61303860018701611297565b7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0000002a5261307a61307261306b848401611297565b87906112b8565b838301611317565b01611297565b7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0000002b526130b05f3392939401611297565b6130e36130dd7f92f0bdf80f3916a4279540865e94ef327cf48639092106cca4bddc9bb1de4a8693611a32565b936112f8565b936130f86130ef610242565b92839283612e22565b0390a3565b613105611627565b506131106005611297565b90565b6132056132006132d293613125611627565b5064f196e500717fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff007100005260027fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff0071000152837fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff0071100052807fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00711001526131fb6131d06131ca600787906116ce565b50611a19565b945f7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff00010017526008611a1c565b611a3e565b611a54565b5f7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff000100185261323460038301611297565b91827fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff000000195261326460048201611297565b90817fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0000001a52426132a66132a061329b60028501611297565b610254565b91610254565b1180613406575b6132f8575b50506132cc60016132c45f8401611297565b939201611297565b916142cd565b807fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0000001b5290565b906133c86133b86133cf9495934261332161331b6133166003611297565b610254565b91610254565b105f146133e6576133b26133a2613392600161338b61337c425b61334760028901611297565b61336261335c6133576003611297565b610254565b91610254565b105f146133d75761337560028901611297565b5b906117e5565b61338583611297565b9061180a565b9401611297565b61339c6064611f3e565b9061180a565b6133ac6009611297565b90611f6e565b9061180a565b6133c26064611f3e565b90611f6e565b9091614957565b905f806132b2565b6133e16003611297565b613376565b6133b26133a2613392600161338b61337c6134016003611297565b61333b565b508161341a6134145f611366565b91610254565b14156132ad565b61342a90610433565b90565b64f196e5006a7fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff006a00005260017fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff006a000152807fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff006a100052426134b86134b26134ad6003611297565b610254565b91610254565b101561352b57613522613529916134e36134d15f611715565b336134db30613421565b908492614e86565b61351361350c6134fd836134f76001611297565b90611f6e565b6135076003611297565b6112b8565b6003611317565b61351d6006611297565b6112b8565b6006611317565b565b613533610242565b63d274e67d60e01b81528061354a60048201610322565b0390fd5b613556611627565b506135616001611297565b90565b9064f196e500677fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff006700005260027fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff0067000152817fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff0067100052807fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff006710015261360c613606600784906116ce565b50611a19565b5f7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff000100085261364d61364861364160088690611a1c565b3390611a3e565b611a54565b5f7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff000100095261367984611f90565b6136845f8201611297565b6136966136905f611366565b91610254565b11613804575b60019061378b613783846136c96136b75f6137919801611715565b336136c130613421565b908a92614e86565b6136eb6136e26136db60048401611297565b89906112b8565b60048301611317565b6136f760048201611297565b7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff000000205261373961373161372a5f8701611297565b89906112b8565b5f8601611317565b6137445f8501611297565b7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff000000215261377d60036137765f8701611297565b9201611297565b906143c2565b838301611317565b01611297565b7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0000002252339190916137ff6137ed6137e77f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a1593611a32565b936112f8565b936137f6610242565b91829182610377565b0390a3565b6138306138125f8301611297565b61381e60038501611297565b61382a60018501611297565b916142cd565b9061384261383d5f611715565b61043f565b91602063a9059cbb93339061386a5f859761387561385e610242565b998a9687958694611a57565b845260048401611a8a565b03925af19081156138e857613791946138b16138aa6137839360019761378b966138bc575b506138a56005611297565b6112b8565b6005611317565b94505050905061369c565b6138dc9060203d81116138e1575b6138d4818361066e565b810190611a6c565b61389a565b503d6138ca565b611aad565b6138f5611627565b506139006006611297565b90565b60018060a01b031690565b61391a61391f9161127b565b613903565b90565b61392c905461390e565b90565b61393890610433565b90565b919061397e602061395461394f6004613922565b61392f565b63a00249e8906139733392613967610242565b95869485938493611a57565b835260048301610a04565b03915afa80156139fa5761399a915f916139cc575b50156102c0565b6139a9576139a792613abb565b565b6139b1610242565b63c6b9ef6960e01b8152806139c860048201610322565b0390fd5b6139ed915060203d81116139f3575b6139e5818361066e565b810190611a6c565b5f613993565b503d6139db565b611aad565b90565b5f5260205f2090565b5490565b613a1881613a0b565b821015613a3257613a2a600191613a02565b910201905f90565b61138b565b91906008613a57910291613a5160018060a01b03846114e2565b926114e2565b9181191691161790565b90565b9190613a7a613a75613a8293611a32565b613a61565b908354613a37565b9055565b9081549168010000000000000000831015613ab65782613aae916001613ab495018155613a0f565b90613a64565b565b61065a565b613ad791613acd613ad2926008611a1c565b611a3e565b611a54565b5f7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0001001252613b0660028201611297565b613b18613b1242610254565b91610254565b11613b70576003613b6791613b33613b6e9460028301611317565b613b3f60028201611297565b7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0000002c52016139ff565b3390613a86565b565b613b78610242565b632cf8e56960e21b815280613b8f60048201610322565b0390fd5b90613b9e929161393b565b565b613c5b613c56613c8493613c515f94613bb7611627565b5064f196e500627fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff006200005260027fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff0062000152807fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff0062100052827fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00621001526008611a1c565b611a3e565b611a54565b817fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff000100155201611297565b90565b613cff908064f196e5007a7fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff007a00005260017fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff007a0001527fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff007a100052613d01565b565b613d1290613d0d61420e565b613d14565b565b80613d2f613d29613d245f611963565b610285565b91610285565b14613d3f57613d3d90614b1d565b565b613d69613d4b5f611963565b613d53610242565b918291631e4fbdf760e01b835260048301610a04565b0390fd5b613d7690613c87565b565b613d826080610697565b90565b606090565b613d92613d78565b90602080808085613da161166c565b815201613dac61166c565b815201613db761166c565b815201613dc2613d85565b81525050565b613dd0613d8a565b90565b5490565b5f5260205f2090565b613dea9054612825565b90565b60010190565b90613e10613e0a613e0384613dd3565b8093610ec0565b92613dd7565b905f5b818110613e205750505090565b909192613e40613e3a600192613e3587613de0565b610edc565b94613ded565b9101919091613e13565b90613e5491613df3565b90565b90613e77613e7092613e67610242565b93848092613e4a565b038361066e565b565b52565b90613ee3613eda6003613e8d613d78565b94613ea4613e9c5f8301611297565b5f8801611355565b613ebc613eb360018301611297565b60208801611355565b613ed4613ecb60028301611297565b60408801611355565b01613e57565b60608401613e79565b565b613eee90613e7c565b90565b613fa891613f9e613fa392613f04613dc8565b5064f196e500697fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff006900005260027fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff0069000152807fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff0069100052827fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00691001526008611a1c565b611a3e565b613ee5565b5f7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff000100165290565b606090565b67ffffffffffffffff8111613feb5760208091020190565b61065a565b90614002613ffd83613fd3565b610697565b918252565b369037565b9061403161401983613ff0565b926020806140278693613fd3565b9201910390614007565b565b9061403d82610ebc565b81101561404e576020809102010190565b61138b565b61405d9051610285565b90565b9061406a826110c3565b81101561407b576020809102010190565b61138b565b91909161408b613fce565b50614094613fce565b506140a66140a182610ebc565b61400c565b925f7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff00010013526140db6140d683610ebc565b61400c565b935f7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff00010014526141085f611366565b5b8061412461411e61411987610ebc565b610254565b91610254565b1015614206576142019061416061414e85614148614143898690614033565b614053565b90613ba0565b61415b8591849092614060565b611355565b61417361416e848390614060565b611441565b7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0000002d526141c76141b5856141af6141aa898690614033565b614053565b90613113565b6141c28991849092614060565b611355565b6141da6141d5888390614060565b611441565b7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0000002e5261254d565b614109565b509150509190565b64f196e500797fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00790000525f7fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff0079000152614261612846565b61427a61427461426f614fad565b610285565b91610285565b0361428157565b6142aa61428c614fad565b614294610242565b91829163118cdaa760e01b835260048301610a04565b0390fd5b90565b6142c56142c06142ca926142ae565b610414565b610254565b90565b61439c6143bf93926143ba926142e1611627565b5064f196e5005d7fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff005d00005260037fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff005d000152807fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff005d100052817fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff005d100152847fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff005d10025261180a565b6143b46ec097ce7bc90715b34b9f10000000006142b1565b90611f6e565b6117e5565b90565b6144889161446a916143d2611627565b5064f196e5005e7fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff005e00005260027fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff005e000152807fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff005e100052817fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff005e10015261180a565b6144826ec097ce7bc90715b34b9f10000000006142b1565b90611f6e565b90565b63ffffffff1690565b63ffffffff60e01b1690565b6144b46144af6144b99261448b565b611a57565b614494565b90565b906145b86145bd936145a960049464f196e5009a7fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff009a00005260037fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff009a000152807fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff009a100052847fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff009a100152827fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff009a1002529361459063a9059cbb9193916144a0565b92614599610242565b9687946020860190815201611a8a565b6020820181038252038361066e565b615005565b565b6145c890610433565b90565b64f196e500837fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00830000525f7fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff008300015261461f306145bf565b61465161464b7f0000000000000000000000000000000000000000000000000000000000000000610285565b91610285565b148015614682575b61465f57565b614667610242565b63703e46dd60e11b81528061467e60048201610322565b0390fd5b5061468b615194565b6146bd6146b77f0000000000000000000000000000000000000000000000000000000000000000610285565b91610285565b1415614659565b61473c908064f196e500607fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff006000005260017fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00600001527fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff006010005261473e565b565b5061474761420e565b565b614752906146c4565b565b61475d90610417565b90565b61476990614754565b90565b61477590610433565b90565b614781816107d5565b0361478857565b5f80fd5b9050519061479982614778565b565b906020828203126147b4576147b1915f0161478c565b90565b61024c565b919064f196e500857fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff008500005260027fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff0085000152827fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff0085100052807fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff0085100152614879602061486361485e86614760565b61476c565b6352d1902d90614871610242565b938492611a57565b8252818061488960048201610322565b03915afa80915f92614927575b50155f146148d15750509060016148ab57505b565b6148cd906148b7610242565b918291634c9c8ce360e01b835260048301610a04565b0390fd5b92836148ec6148e66148e161228f565b6107d5565b916107d5565b03614901576148fc929350615209565b6148a9565b6149238461490d610242565b918291632a87526960e21b8352600483016107e5565b0390fd5b61494991925060203d8111614950575b614941818361066e565b81019061479b565b905f614896565b503d614937565b614a4a92614a3f614a449261496a611627565b5064f196e5005f7fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff005f00005260037fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff005f000152807fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff005f100052847fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff005f100152827fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff005f10025293614a396ec097ce7bc90715b34b9f10000000006142b1565b9061180a565b611f6e565b906112b8565b90565b64f196e500847fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00840000525f7fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff0084000152614aa1306145bf565b614ad3614acd7f0000000000000000000000000000000000000000000000000000000000000000610285565b91610285565b03614ada57565b614ae2610242565b63703e46dd60e11b815280614af960048201610322565b0390fd5b90614b12614b0d614b1992611a32565b613a61565b82546113eb565b9055565b64f196e500777fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff007700005260017fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff0077000152807fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff0077100052614b94614c6a565b5f7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0001003452614bfc5f614bc6818401612839565b92837fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0000003552614bf685838301614afd565b01612839565b7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff000000365290614c52614c4c7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e093611a32565b91611a32565b91614c5b610242565b80614c6581610322565b0390a3565b64f196e500757fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00750000525f7fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00750001527f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930090565b64f196e5007e7fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff007e0000525f7fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff007e0001527ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0090565b614dc0908064f196e500767fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff007600005260017fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00760001527fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff0076100052614dc2565b565b614dd390614dce615324565b614dd5565b565b614dde9061548f565b565b614de990614d48565b565b64f196e500817fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00810000525f7fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff0081000152614e3e614e40565b565b614e48615324565b565b614e52614deb565b565b604090614e7d614e849496959396614e7360608401985f8501906109f7565b60208301906109f7565b019061036a565b565b600492614f97614fab9593614fa69364f196e5009b7fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff009b000052867fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff009b000152807fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff009b100052817fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff009b100152837fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff009b100252857fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff009b10035294614f7e6323b872dd929491926144a0565b93614f87610242565b9788956020870190815201614e54565b6020820181038252038361066e565b615005565b565b614fb5612816565b5064f196e5008a7fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff008a0000525f7fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff008a0001523390565b905f60209164f196e500a47fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00a400005260027fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00a4000152837fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00a4100052807fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00a41001526150a4611627565b7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff00000046526150ce611627565b7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0000004752828151910182855af115615189573d5f519061511461510e5f611366565b91610254565b145f1461516f57506151258161043f565b3b6151386151325f611366565b91610254565b145b6151415750565b61514d61516b9161043f565b615155610242565b918291635274afe760e01b835260048301610a04565b0390fd5b61518261517c600161251b565b91610254565b141561513a565b6040513d5f823e3d90fd5b61519c612816565b5064f196e500907fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00900000525f7fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00900001526152025f6151fc6151f761228f565b61549a565b01612839565b90565b5190565b9064f196e500937fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff009300005260027fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff0093000152817fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff0093100052807fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00931001526152a58261550c565b816152d07fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b91611a32565b906152d9610242565b806152e381610322565b0390a26152ef81615205565b6153016152fb5f611366565b91610254565b115f1461531557615311916156a4565b505b565b505061531f6155d7565b615313565b64f196e5007c7fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff007c0000525f7fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff007c00015261538061537a61578c565b156102c0565b61538657565b61538e610242565b631afcd79f60e31b8152806153a560048201610322565b0390fd5b615421908064f196e500787fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff007800005260017fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00780001527fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff0078100052615423565b565b6154349061542f615324565b615436565b565b8061545161544b6154465f611963565b610285565b91610285565b146154615761545f90614b1d565b565b61548b61546d5f611963565b615475610242565b918291631e4fbdf760e01b835260048301610a04565b0390fd5b615498906153a9565b565b64f196e500b17fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00b100005260017fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00b1000152807fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00b110005290565b64f196e500917fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff009100005260017fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff0091000152807fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff0091100052803b61558f6155895f611366565b91610254565b146155b1576155af905f6155a96155a461228f565b61549a565b01614afd565b565b6155d3906155bd610242565b918291634c9c8ce360e01b835260048301610a04565b0390fd5b64f196e500997fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00990000525f7fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00990001523461563561562f5f611366565b91610254565b1161563c57565b615644610242565b63b398979f60e01b81528061565b60048201610322565b0390fd5b606090565b90615676615671836106ac565b610697565b918252565b3d5f146156965761568b3d615664565b903d5f602084013e5b565b61569e61565f565b90615694565b5f80615785936156b261565f565b5064f196e500a87fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00a800005260027fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00a8000152837fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00a8100052807fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00a81001528390602081019051915af49061575961567b565b905f7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0001004e529190916157f5565b90565b5f90565b615794615788565b5064f196e500807fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00800000525f7fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00800001526157f25f6157ec614cd9565b016129da565b90565b906158be9061580261565f565b5064f196e500ab7fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00ab00005260037fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00ab000152827fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00ab100052807fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00ab100152837fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00ab100252156102c0565b5f146158ca5750615935565b6158d382615205565b6158e56158df5f611366565b91610254565b148061591a575b6158f4575090565b61591690615900610242565b918291639996b31560e01b835260048301610a04565b0390fd5b50803b61592f6159295f611366565b91610254565b146158ec565b64f196e500ad7fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00ad00005260017fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00ad000152807fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00ad1000526159ad81615205565b6159bf6159b95f611366565b91610254565b115f146159ce57805190602001fd5b6159d6610242565b63d6bda27560e01b8152806159ed60048201610322565b0390fdfea26469706673582212202493fd8f663c52f68ac2818f72911d1fbe77c96eadb69a3e30e3da3120a4ca9164736f6c63430008180033",
                "compilerName": "solc",
                "compilerParameters": {
                    "optimizerOn": false,
                    "optimizerRuns": null,
                    "type": "SolcParameters",
                    "viaIR": true
                },
                "compilerVersion": "0.8.24",
                "constructorBytecode": "",
                "constructorSrcmap": "1189:26442:1:-:0;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;4120:53;;;:::i;:::-;;;:::i;:::-;:::o;1189:26442::-;;;;;;;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;986:7324:6:-;1163:13;1171:4;1163:13;:::i;:::-;;;986:7324::o;1189:26442:1:-;;;;:::o;:::-;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;;;;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;9186:720:5:-;9236:196;;;;;;;;9530:26;;:::i;:::-;9557:102;;;;9673:15;;:1;:15;;:::i;:::-;9669:76;;9758:14;;:1;:14;;:::i;:::-;:34;;1189:26442:1;;;;;9758:34:5;:::i;:::-;;;:::i;:::-;;9754:146;;9186:720;;:::o;9754:146::-;9808:33;1189:26442:1;9808:14:5;1189:26442:1;;;;;9808:1:5;:14;:33;:::i;:::-;1189:26442:1;;;;;9860:29:5;;;;;:::i;:::-;;;;;;:::i;:::-;;;;9754:146;;;9669:76;9711:23;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;10902:366;10993:196;;;;;;;;11198:64;10902:366;:::o",
                "extensionContracts": [],
                "file": "src/StakingMining.sol",
                "immutables": [
                    {
                        "length": 32,
                        "offset": 17959,
                        "type": {
                            "location": "stack",
                            "typeDesc": {
                                "primitiveName": "address",
                                "type": "Primitive"
                            }
                        },
                        "varname": "__self"
                    },
                    {
                        "length": 32,
                        "offset": 18067,
                        "type": {
                            "location": "stack",
                            "typeDesc": {
                                "primitiveName": "address",
                                "type": "Primitive"
                            }
                        },
                        "varname": "__self"
                    },
                    {
                        "length": 32,
                        "offset": 19113,
                        "type": {
                            "location": "stack",
                            "typeDesc": {
                                "primitiveName": "address",
                                "type": "Primitive"
                            }
                        },
                        "varname": "__self"
                    }
                ],
                "internalFunctions": {
                    "0xf196e5005d": {
                        "canonicalId": "src/LibCalReward.sol|CalculatingRewards",
                        "declaringContract": "CalculatingRewards",
                        "method": {
                            "contractName": "CalculatingRewards",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "getPendingRewards",
                            "notpayable": true,
                            "originalFile": "src/LibCalReward.sol",
                            "paramNames": [
                                "_amount",
                                "_accERC20PerShare",
                                "_rewardDebt"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 91,
                                "size": 228
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5005e": {
                        "canonicalId": "src/LibCalReward.sol|CalculatingRewards",
                        "declaringContract": "CalculatingRewards",
                        "method": {
                            "contractName": "CalculatingRewards",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "updateRewardDebt",
                            "notpayable": true,
                            "originalFile": "src/LibCalReward.sol",
                            "paramNames": [
                                "_amount",
                                "_accERC20PerShare"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 325,
                                "size": 355
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5005f": {
                        "canonicalId": "src/LibCalReward.sol|CalculatingRewards",
                        "declaringContract": "CalculatingRewards",
                        "method": {
                            "contractName": "CalculatingRewards",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "updateAccERC20PerShare",
                            "notpayable": true,
                            "originalFile": "src/LibCalReward.sol",
                            "paramNames": [
                                "oldAccERC20PerShare",
                                "totalAmountOfRewardsDuringTheDuration",
                                "amountOfStakeInThePool"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 686,
                                "size": 355
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50060": {
                        "canonicalId": "src/StakingMining.sol|StakingMining",
                        "declaringContract": "StakingMining",
                        "method": {
                            "contractName": "StakingMining",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_authorizeUpgrade",
                            "notpayable": true,
                            "originalFile": "src/StakingMining.sol",
                            "paramNames": [
                                "newImplementation"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 4650,
                                "size": 98
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50061": {
                        "canonicalId": "src/StakingMining.sol|StakingMining",
                        "declaringContract": "StakingMining",
                        "method": {
                            "contractName": "StakingMining",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC20",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "add",
                            "notpayable": true,
                            "originalFile": "src/StakingMining.sol",
                            "paramNames": [
                                "_allocPoint",
                                "_lpToken",
                                "_withUpdate"
                            ],
                            "returns": [],
                            "sighash": "1eaaa045",
                            "sourceBytes": {
                                "begin": 5290,
                                "size": 652
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50062": {
                        "canonicalId": "src/StakingMining.sol|StakingMining",
                        "declaringContract": "StakingMining",
                        "method": {
                            "contractName": "StakingMining",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "getDeposited",
                            "notpayable": true,
                            "originalFile": "src/StakingMining.sol",
                            "paramNames": [
                                "_poolId",
                                "_user"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "e86facc5",
                            "sourceBytes": {
                                "begin": 13552,
                                "size": 202
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50063": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol|StakingMining",
                        "declaringContract": "StakingMining",
                        "method": {
                            "contractName": "StakingMining",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "upgradeToAndCall",
                            "notpayable": false,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
                            "paramNames": [
                                "newImplementation",
                                "data"
                            ],
                            "returns": [],
                            "sighash": "4f1ef286",
                            "sourceBytes": {
                                "begin": 4161,
                                "size": 214
                            },
                            "stateMutability": "payable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50064": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol|StakingMining",
                        "declaringContract": "StakingMining",
                        "method": {
                            "contractName": "StakingMining",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "transferOwnership",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
                            "paramNames": [
                                "newOwner"
                            ],
                            "returns": [],
                            "sighash": "f2fde38b",
                            "sourceBytes": {
                                "begin": 3405,
                                "size": 215
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50065": {
                        "canonicalId": "src/StakingMining.sol|StakingMining",
                        "declaringContract": "StakingMining",
                        "method": {
                            "contractName": "StakingMining",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC20",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "initialize",
                            "notpayable": true,
                            "originalFile": "src/StakingMining.sol",
                            "paramNames": [
                                "_erc20",
                                "_rewardPerSecond",
                                "_startTimestamp",
                                "_salesFactory"
                            ],
                            "returns": [],
                            "sighash": "9e3d87cd",
                            "sourceBytes": {
                                "begin": 4199,
                                "size": 445
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50066": {
                        "canonicalId": "src/StakingMining.sol|StakingMining",
                        "declaringContract": "StakingMining",
                        "method": {
                            "contractName": "StakingMining",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "emergencyWithdraw",
                            "notpayable": true,
                            "originalFile": "src/StakingMining.sol",
                            "paramNames": [
                                "_poolId"
                            ],
                            "returns": [],
                            "sighash": "5312ea8e",
                            "sourceBytes": {
                                "begin": 9800,
                                "size": 454
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50067": {
                        "canonicalId": "src/StakingMining.sol|StakingMining",
                        "declaringContract": "StakingMining",
                        "method": {
                            "contractName": "StakingMining",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "deposit",
                            "notpayable": true,
                            "originalFile": "src/StakingMining.sol",
                            "paramNames": [
                                "_poolId",
                                "_amount"
                            ],
                            "returns": [],
                            "sighash": "e2bbb158",
                            "sourceBytes": {
                                "begin": 7653,
                                "size": 1007
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50068": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol|StakingMining",
                        "declaringContract": "StakingMining",
                        "method": {
                            "contractName": "StakingMining",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "owner",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "8da5cb5b",
                            "sourceBytes": {
                                "begin": 2441,
                                "size": 144
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50069": {
                        "canonicalId": "src/StakingMining.sol|StakingMining",
                        "declaringContract": "StakingMining",
                        "method": {
                            "contractName": "StakingMining",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "getUserInfoInPool",
                            "notpayable": true,
                            "originalFile": "src/StakingMining.sol",
                            "paramNames": [
                                "_poolId",
                                "_user"
                            ],
                            "returns": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "astId": 43,
                                        "canonicalId": "src/StakingMining.sol|StakingMining.User",
                                        "containingContract": "StakingMining",
                                        "structMembers": [
                                            {
                                                "name": "amount",
                                                "type": {
                                                    "primitiveName": "uint256",
                                                    "type": "Primitive"
                                                }
                                            },
                                            {
                                                "name": "rewardDebt",
                                                "type": {
                                                    "primitiveName": "uint256",
                                                    "type": "Primitive"
                                                }
                                            },
                                            {
                                                "name": "tokensUnlockTime",
                                                "type": {
                                                    "primitiveName": "uint256",
                                                    "type": "Primitive"
                                                }
                                            },
                                            {
                                                "name": "salesRegistered",
                                                "type": {
                                                    "dynamicArrayBaseType": {
                                                        "primitiveName": "address",
                                                        "type": "Primitive"
                                                    },
                                                    "type": "Array"
                                                }
                                            }
                                        ],
                                        "structName": "User",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "f70fd81c",
                            "sourceBytes": {
                                "begin": 13851,
                                "size": 203
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e5006a": {
                        "canonicalId": "src/StakingMining.sol|StakingMining",
                        "declaringContract": "StakingMining",
                        "method": {
                            "contractName": "StakingMining",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "fund",
                            "notpayable": true,
                            "originalFile": "src/StakingMining.sol",
                            "paramNames": [
                                "_amount"
                            ],
                            "returns": [],
                            "sighash": "ca1d209d",
                            "sourceBytes": {
                                "begin": 4804,
                                "size": 328
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e5006b": {
                        "canonicalId": "src/StakingMining.sol|StakingMining",
                        "declaringContract": "StakingMining",
                        "method": {
                            "contractName": "StakingMining",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "massUpdatePools",
                            "notpayable": true,
                            "originalFile": "src/StakingMining.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "630b5ba1",
                            "sourceBytes": {
                                "begin": 6439,
                                "size": 186
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e5006c": {
                        "canonicalId": "src/StakingMining.sol|StakingMining",
                        "declaringContract": "StakingMining",
                        "method": {
                            "contractName": "StakingMining",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "updatePool",
                            "notpayable": true,
                            "originalFile": "src/StakingMining.sol",
                            "paramNames": [
                                "_pid"
                            ],
                            "returns": [],
                            "sighash": "51eb05a6",
                            "sourceBytes": {
                                "begin": 6684,
                                "size": 929
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e5006d": {
                        "canonicalId": "src/StakingMining.sol|StakingMining",
                        "declaringContract": "StakingMining",
                        "method": {
                            "contractName": "StakingMining",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "compound",
                            "notpayable": true,
                            "originalFile": "src/StakingMining.sol",
                            "paramNames": [
                                "_poolId"
                            ],
                            "returns": [],
                            "sighash": "aa5f7e26",
                            "sourceBytes": {
                                "begin": 10260,
                                "size": 835
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e5006e": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol|StakingMining",
                        "declaringContract": "StakingMining",
                        "method": {
                            "contractName": "StakingMining",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "renounceOwnership",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "715018a6",
                            "sourceBytes": {
                                "begin": 3155,
                                "size": 101
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e5006f": {
                        "canonicalId": "src/StakingMining.sol|StakingMining",
                        "declaringContract": "StakingMining",
                        "method": {
                            "contractName": "StakingMining",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "withdraw",
                            "notpayable": true,
                            "originalFile": "src/StakingMining.sol",
                            "paramNames": [
                                "_poolId",
                                "_amount"
                            ],
                            "returns": [],
                            "sighash": "441a3e70",
                            "sourceBytes": {
                                "begin": 8756,
                                "size": 1003
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50070": {
                        "canonicalId": "src/StakingMining.sol|StakingMining",
                        "declaringContract": "StakingMining",
                        "method": {
                            "contractName": "StakingMining",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "set",
                            "notpayable": true,
                            "originalFile": "src/StakingMining.sol",
                            "paramNames": [
                                "_poolId",
                                "_allocPoint",
                                "_withUpdate"
                            ],
                            "returns": [],
                            "sighash": "64482f79",
                            "sourceBytes": {
                                "begin": 5988,
                                "size": 366
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50071": {
                        "canonicalId": "src/StakingMining.sol|StakingMining",
                        "declaringContract": "StakingMining",
                        "method": {
                            "contractName": "StakingMining",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "getPendingReward",
                            "notpayable": true,
                            "originalFile": "src/StakingMining.sol",
                            "paramNames": [
                                "_poolId",
                                "_user"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "c59b1f3c",
                            "sourceBytes": {
                                "begin": 14098,
                                "size": 1761
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50072": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol|SalesFactory",
                        "declaringContract": "SalesFactory",
                        "method": {
                            "contractName": "SalesFactory",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "owner",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "8da5cb5b",
                            "sourceBytes": {
                                "begin": 1638,
                                "size": 85
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50073": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol|SalesFactory",
                        "declaringContract": "SalesFactory",
                        "method": {
                            "contractName": "SalesFactory",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "transferOwnership",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol",
                            "paramNames": [
                                "newOwner"
                            ],
                            "returns": [],
                            "sighash": "f2fde38b",
                            "sourceBytes": {
                                "begin": 2543,
                                "size": 215
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50074": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol|SalesFactory",
                        "declaringContract": "SalesFactory",
                        "method": {
                            "contractName": "SalesFactory",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "renounceOwnership",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "715018a6",
                            "sourceBytes": {
                                "begin": 2293,
                                "size": 101
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50075": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol|OwnableUpgradeable",
                        "declaringContract": "OwnableUpgradeable",
                        "method": {
                            "contractName": "OwnableUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_getOwnableStorage",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 1515,
                                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol|OwnableUpgradeable.OwnableStorage",
                                        "containingContract": "OwnableUpgradeable",
                                        "structMembers": [
                                            {
                                                "name": "_owner",
                                                "type": {
                                                    "primitiveName": "address",
                                                    "type": "Primitive"
                                                }
                                            }
                                        ],
                                        "structName": "OwnableStorage",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1192,
                                "size": 159
                            },
                            "stateMutability": "pure",
                            "visibility": "private"
                        }
                    },
                    "0xf196e50076": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol|OwnableUpgradeable",
                        "declaringContract": "OwnableUpgradeable",
                        "method": {
                            "contractName": "OwnableUpgradeable",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "__Ownable_init",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
                            "paramNames": [
                                "initialOwner"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1847,
                                "size": 127
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50077": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol|OwnableUpgradeable",
                        "declaringContract": "OwnableUpgradeable",
                        "method": {
                            "contractName": "OwnableUpgradeable",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_transferOwnership",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
                            "paramNames": [
                                "newOwner"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3774,
                                "size": 248
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50078": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol|OwnableUpgradeable",
                        "declaringContract": "OwnableUpgradeable",
                        "method": {
                            "contractName": "OwnableUpgradeable",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "__Ownable_init_unchained",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
                            "paramNames": [
                                "initialOwner"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1980,
                                "size": 235
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50079": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol|OwnableUpgradeable",
                        "declaringContract": "OwnableUpgradeable",
                        "method": {
                            "contractName": "OwnableUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_checkOwner",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2658,
                                "size": 162
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5007a": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol|OwnableUpgradeable",
                        "declaringContract": "OwnableUpgradeable",
                        "method": {
                            "contractName": "OwnableUpgradeable",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "transferOwnership",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
                            "paramNames": [
                                "newOwner"
                            ],
                            "returns": [],
                            "sighash": "f2fde38b",
                            "sourceBytes": {
                                "begin": 3405,
                                "size": 215
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e5007b": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol|OwnableUpgradeable",
                        "declaringContract": "OwnableUpgradeable",
                        "method": {
                            "contractName": "OwnableUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "renounceOwnership",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "715018a6",
                            "sourceBytes": {
                                "begin": 3155,
                                "size": 101
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e5007c": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol|Initializable",
                        "declaringContract": "Initializable",
                        "method": {
                            "contractName": "Initializable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_checkInitializing",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 7084,
                                "size": 141
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5007d": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol|Initializable",
                        "declaringContract": "Initializable",
                        "method": {
                            "contractName": "Initializable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_disableInitializers",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 7711,
                                "size": 422
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5007e": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol|Initializable",
                        "declaringContract": "Initializable",
                        "method": {
                            "contractName": "Initializable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_getInitializableStorage",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 1706,
                                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol|Initializable.InitializableStorage",
                                        "containingContract": "Initializable",
                                        "structMembers": [
                                            {
                                                "name": "_initialized",
                                                "type": {
                                                    "primitiveName": "uint64",
                                                    "type": "Primitive"
                                                }
                                            },
                                            {
                                                "name": "_initializing",
                                                "type": {
                                                    "primitiveName": "bool",
                                                    "type": "Primitive"
                                                }
                                            }
                                        ],
                                        "structName": "InitializableStorage",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 8737,
                                "size": 170
                            },
                            "stateMutability": "pure",
                            "visibility": "private"
                        }
                    },
                    "0xf196e5007f": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol|Initializable",
                        "declaringContract": "Initializable",
                        "method": {
                            "contractName": "Initializable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_getInitializedVersion",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint64",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 8243,
                                "size": 128
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50080": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol|Initializable",
                        "declaringContract": "Initializable",
                        "method": {
                            "contractName": "Initializable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_isInitializing",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 8487,
                                "size": 120
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50081": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol|UUPSUpgradeable",
                        "declaringContract": "UUPSUpgradeable",
                        "method": {
                            "contractName": "UUPSUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "__UUPSUpgradeable_init",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2970,
                                "size": 67
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50082": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol|UUPSUpgradeable",
                        "declaringContract": "UUPSUpgradeable",
                        "method": {
                            "contractName": "UUPSUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "__UUPSUpgradeable_init_unchained",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3043,
                                "size": 77
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50083": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol|UUPSUpgradeable",
                        "declaringContract": "UUPSUpgradeable",
                        "method": {
                            "contractName": "UUPSUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_checkProxy",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 4578,
                                "size": 312
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50084": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol|UUPSUpgradeable",
                        "declaringContract": "UUPSUpgradeable",
                        "method": {
                            "contractName": "UUPSUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_checkNotDelegated",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 5007,
                                "size": 213
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50085": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol|UUPSUpgradeable",
                        "declaringContract": "UUPSUpgradeable",
                        "method": {
                            "contractName": "UUPSUpgradeable",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_upgradeToAndCallUUPS",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
                            "paramNames": [
                                "newImplementation",
                                "data"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 6032,
                                "size": 538
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "private"
                        }
                    },
                    "0xf196e50086": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol|UUPSUpgradeable",
                        "declaringContract": "UUPSUpgradeable",
                        "method": {
                            "contractName": "UUPSUpgradeable",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "upgradeToAndCall",
                            "notpayable": false,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
                            "paramNames": [
                                "newImplementation",
                                "data"
                            ],
                            "returns": [],
                            "sighash": "4f1ef286",
                            "sourceBytes": {
                                "begin": 4161,
                                "size": 214
                            },
                            "stateMutability": "payable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50087": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol|ContextUpgradeable",
                        "declaringContract": "ContextUpgradeable",
                        "method": {
                            "contractName": "ContextUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "__Context_init",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 748,
                                "size": 59
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50088": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol|ContextUpgradeable",
                        "declaringContract": "ContextUpgradeable",
                        "method": {
                            "contractName": "ContextUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "__Context_init_unchained",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 813,
                                "size": 69
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50089": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol|ContextUpgradeable",
                        "declaringContract": "ContextUpgradeable",
                        "method": {
                            "contractName": "ContextUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_contextSuffixLength",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1094,
                                "size": 97
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5008a": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol|ContextUpgradeable",
                        "declaringContract": "ContextUpgradeable",
                        "method": {
                            "contractName": "ContextUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_msgSender",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 887,
                                "size": 96
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5008b": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol|ContextUpgradeable",
                        "declaringContract": "ContextUpgradeable",
                        "method": {
                            "contractName": "ContextUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_msgData",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "calldata",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 989,
                                "size": 99
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5008c": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol|Ownable",
                        "declaringContract": "Ownable",
                        "method": {
                            "contractName": "Ownable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_checkOwner",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1796,
                                "size": 162
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5008d": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol|Ownable",
                        "declaringContract": "Ownable",
                        "method": {
                            "contractName": "Ownable",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_transferOwnership",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol",
                            "paramNames": [
                                "newOwner"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2912,
                                "size": 187
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5008e": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol|Ownable",
                        "declaringContract": "Ownable",
                        "method": {
                            "contractName": "Ownable",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "transferOwnership",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol",
                            "paramNames": [
                                "newOwner"
                            ],
                            "returns": [],
                            "sighash": "f2fde38b",
                            "sourceBytes": {
                                "begin": 2543,
                                "size": 215
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e5008f": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol|Ownable",
                        "declaringContract": "Ownable",
                        "method": {
                            "contractName": "Ownable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "renounceOwnership",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "715018a6",
                            "sourceBytes": {
                                "begin": 2293,
                                "size": 101
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50090": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol|ERC1967Utils",
                        "declaringContract": "ERC1967Utils",
                        "method": {
                            "contractName": "ERC1967Utils",
                            "fullArgs": [],
                            "isLibrary": true,
                            "name": "getImplementation",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1441,
                                "size": 138
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50091": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol|ERC1967Utils",
                        "declaringContract": "ERC1967Utils",
                        "method": {
                            "contractName": "ERC1967Utils",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "_setImplementation",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
                            "paramNames": [
                                "newImplementation"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1671,
                                "size": 281
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "private"
                        }
                    },
                    "0xf196e50092": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol|ERC1967Utils",
                        "declaringContract": "ERC1967Utils",
                        "method": {
                            "contractName": "ERC1967Utils",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "_setAdmin",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
                            "paramNames": [
                                "newAdmin"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3490,
                                "size": 217
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "private"
                        }
                    },
                    "0xf196e50093": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol|ERC1967Utils",
                        "declaringContract": "ERC1967Utils",
                        "method": {
                            "contractName": "ERC1967Utils",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "upgradeToAndCall",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
                            "paramNames": [
                                "newImplementation",
                                "data"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2264,
                                "size": 344
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50094": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol|ERC1967Utils",
                        "declaringContract": "ERC1967Utils",
                        "method": {
                            "contractName": "ERC1967Utils",
                            "fullArgs": [],
                            "isLibrary": true,
                            "name": "getAdmin",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3287,
                                "size": 120
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50095": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol|ERC1967Utils",
                        "declaringContract": "ERC1967Utils",
                        "method": {
                            "contractName": "ERC1967Utils",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "changeAdmin",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
                            "paramNames": [
                                "newAdmin"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3827,
                                "size": 142
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50096": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol|ERC1967Utils",
                        "declaringContract": "ERC1967Utils",
                        "method": {
                            "contractName": "ERC1967Utils",
                            "fullArgs": [],
                            "isLibrary": true,
                            "name": "getBeacon",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 4415,
                                "size": 122
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50097": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol|ERC1967Utils",
                        "declaringContract": "ERC1967Utils",
                        "method": {
                            "contractName": "ERC1967Utils",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "_setBeacon",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
                            "paramNames": [
                                "newBeacon"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 4620,
                                "size": 437
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "private"
                        }
                    },
                    "0xf196e50098": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol|ERC1967Utils",
                        "declaringContract": "ERC1967Utils",
                        "method": {
                            "contractName": "ERC1967Utils",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "upgradeBeaconToAndCall",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
                            "paramNames": [
                                "newBeacon",
                                "data"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 5582,
                                "size": 342
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50099": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol|ERC1967Utils",
                        "declaringContract": "ERC1967Utils",
                        "method": {
                            "contractName": "ERC1967Utils",
                            "fullArgs": [],
                            "isLibrary": true,
                            "name": "_checkNonPayable",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 6113,
                                "size": 122
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "private"
                        }
                    },
                    "0xf196e5009a": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC20",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "safeTransfer",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "to",
                                "value"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1219,
                                "size": 160
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5009b": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC20",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "safeTransferFrom",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "from",
                                "to",
                                "value"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1618,
                                "size": 188
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5009c": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC20",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "safeIncreaseAllowance",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "spender",
                                "value"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3146,
                                "size": 225
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5009d": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC20",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "trySafeTransfer",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "to",
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1943,
                                "size": 189
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5009e": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC20",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "trySafeTransferFrom",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "from",
                                "to",
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2273,
                                "size": 217
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5009f": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC20",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "safeDecreaseAllowance",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "spender",
                                "requestedDecrease"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 4039,
                                "size": 468
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500a0": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC20",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "forceApprove",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "spender",
                                "value"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 5084,
                                "size": 380
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500a1": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC1363",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "transferAndCallRelaxed",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "to",
                                "value",
                                "data"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 5808,
                                "size": 322
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500a2": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC1363",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "transferFromAndCallRelaxed",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "from",
                                "to",
                                "value",
                                "data"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 6482,
                                "size": 406
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500a3": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC1363",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "approveAndCallRelaxed",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "to",
                                "value",
                                "data"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 7553,
                                "size": 320
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500a4": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC20",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "_callOptionalReturn",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "data"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 8370,
                                "size": 720
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "private"
                        }
                    },
                    "0xf196e500a5": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC20",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "_callOptionalReturnBool",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "data"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 9592,
                                "size": 480
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "private"
                        }
                    },
                    "0xf196e500a6": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol|Address",
                        "declaringContract": "Address",
                        "method": {
                            "contractName": "Address",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "sendValue",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol",
                            "paramNames": [
                                "recipient",
                                "amount"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1290,
                                "size": 365
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500a7": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol|Address",
                        "declaringContract": "Address",
                        "method": {
                            "contractName": "Address",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "functionCall",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol",
                            "paramNames": [
                                "target",
                                "data"
                            ],
                            "returns": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2500,
                                "size": 151
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500a8": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol|Address",
                        "declaringContract": "Address",
                        "method": {
                            "contractName": "Address",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "functionDelegateCall",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol",
                            "paramNames": [
                                "target",
                                "data"
                            ],
                            "returns": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3916,
                                "size": 253
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500a9": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol|Address",
                        "declaringContract": "Address",
                        "method": {
                            "contractName": "Address",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "functionCallWithValue",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol",
                            "paramNames": [
                                "target",
                                "data",
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2975,
                                "size": 407
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500aa": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol|Address",
                        "declaringContract": "Address",
                        "method": {
                            "contractName": "Address",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "functionStaticCall",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol",
                            "paramNames": [
                                "target",
                                "data"
                            ],
                            "returns": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3521,
                                "size": 254
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500ab": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol|Address",
                        "declaringContract": "Address",
                        "method": {
                            "contractName": "Address",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "verifyCallResultFromTarget",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol",
                            "paramNames": [
                                "target",
                                "success",
                                "returndata"
                            ],
                            "returns": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 4437,
                                "size": 582
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500ac": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol|Address",
                        "declaringContract": "Address",
                        "method": {
                            "contractName": "Address",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "verifyCallResult",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol",
                            "paramNames": [
                                "success",
                                "returndata"
                            ],
                            "returns": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 5221,
                                "size": 224
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500ad": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol|Address",
                        "declaringContract": "Address",
                        "method": {
                            "contractName": "Address",
                            "fullArgs": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "_revert",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol",
                            "paramNames": [
                                "returndata"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 5559,
                                "size": 487
                            },
                            "stateMutability": "pure",
                            "visibility": "private"
                        }
                    },
                    "0xf196e500ae": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Context.sol|Context",
                        "declaringContract": "Context",
                        "method": {
                            "contractName": "Context",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_msgSender",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Context.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 656,
                                "size": 96
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500af": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Context.sol|Context",
                        "declaringContract": "Context",
                        "method": {
                            "contractName": "Context",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_msgData",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Context.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "calldata",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 758,
                                "size": 99
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500b0": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Context.sol|Context",
                        "declaringContract": "Context",
                        "method": {
                            "contractName": "Context",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_contextSuffixLength",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Context.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 863,
                                "size": 97
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500b1": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot",
                        "declaringContract": "StorageSlot",
                        "method": {
                            "contractName": "StorageSlot",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "getAddressSlot",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
                            "paramNames": [
                                "slot"
                            ],
                            "returns": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 5750,
                                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot.AddressSlot",
                                        "containingContract": "StorageSlot",
                                        "structMembers": [
                                            {
                                                "name": "value",
                                                "type": {
                                                    "primitiveName": "address",
                                                    "type": "Primitive"
                                                }
                                            }
                                        ],
                                        "structName": "AddressSlot",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1899,
                                "size": 163
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500b2": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot",
                        "declaringContract": "StorageSlot",
                        "method": {
                            "contractName": "StorageSlot",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "getBooleanSlot",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
                            "paramNames": [
                                "slot"
                            ],
                            "returns": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 5753,
                                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot.BooleanSlot",
                                        "containingContract": "StorageSlot",
                                        "structMembers": [
                                            {
                                                "name": "value",
                                                "type": {
                                                    "primitiveName": "bool",
                                                    "type": "Primitive"
                                                }
                                            }
                                        ],
                                        "structName": "BooleanSlot",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2159,
                                "size": 163
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500b3": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot",
                        "declaringContract": "StorageSlot",
                        "method": {
                            "contractName": "StorageSlot",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "getInt256Slot",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
                            "paramNames": [
                                "slot"
                            ],
                            "returns": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 5762,
                                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot.Int256Slot",
                                        "containingContract": "StorageSlot",
                                        "structMembers": [
                                            {
                                                "name": "value",
                                                "type": {
                                                    "primitiveName": "int256",
                                                    "type": "Primitive"
                                                }
                                            }
                                        ],
                                        "structName": "Int256Slot",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2938,
                                "size": 161
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500b4": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot",
                        "declaringContract": "StorageSlot",
                        "method": {
                            "contractName": "StorageSlot",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "getBytes32Slot",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
                            "paramNames": [
                                "slot"
                            ],
                            "returns": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 5756,
                                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot.Bytes32Slot",
                                        "containingContract": "StorageSlot",
                                        "structMembers": [
                                            {
                                                "name": "value",
                                                "type": {
                                                    "primitiveName": "bytes32",
                                                    "type": "Primitive"
                                                }
                                            }
                                        ],
                                        "structName": "Bytes32Slot",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2419,
                                "size": 163
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500b5": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot",
                        "declaringContract": "StorageSlot",
                        "method": {
                            "contractName": "StorageSlot",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "getUint256Slot",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
                            "paramNames": [
                                "slot"
                            ],
                            "returns": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 5759,
                                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot.Uint256Slot",
                                        "containingContract": "StorageSlot",
                                        "structMembers": [
                                            {
                                                "name": "value",
                                                "type": {
                                                    "primitiveName": "uint256",
                                                    "type": "Primitive"
                                                }
                                            }
                                        ],
                                        "structName": "Uint256Slot",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2679,
                                "size": 163
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500b6": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot",
                        "declaringContract": "StorageSlot",
                        "method": {
                            "contractName": "StorageSlot",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "getStringSlot",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
                            "paramNames": [
                                "slot"
                            ],
                            "returns": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 5765,
                                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot.StringSlot",
                                        "containingContract": "StorageSlot",
                                        "structMembers": [
                                            {
                                                "name": "value",
                                                "type": {
                                                    "type": "StringType"
                                                }
                                            }
                                        ],
                                        "structName": "StringSlot",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3195,
                                "size": 161
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500b7": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot",
                        "declaringContract": "StorageSlot",
                        "method": {
                            "contractName": "StorageSlot",
                            "fullArgs": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "type": "StringType"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "getStringSlot",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
                            "paramNames": [
                                "store"
                            ],
                            "returns": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 5765,
                                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot.StringSlot",
                                        "containingContract": "StorageSlot",
                                        "structMembers": [
                                            {
                                                "name": "value",
                                                "type": {
                                                    "type": "StringType"
                                                }
                                            }
                                        ],
                                        "structName": "StringSlot",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3468,
                                "size": 175
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500b8": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot",
                        "declaringContract": "StorageSlot",
                        "method": {
                            "contractName": "StorageSlot",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "getBytesSlot",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
                            "paramNames": [
                                "slot"
                            ],
                            "returns": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 5768,
                                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot.BytesSlot",
                                        "containingContract": "StorageSlot",
                                        "structMembers": [
                                            {
                                                "name": "value",
                                                "type": {
                                                    "type": "PackedBytes"
                                                }
                                            }
                                        ],
                                        "structName": "BytesSlot",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3738,
                                "size": 159
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500b9": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot",
                        "declaringContract": "StorageSlot",
                        "method": {
                            "contractName": "StorageSlot",
                            "fullArgs": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "getBytesSlot",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
                            "paramNames": [
                                "store"
                            ],
                            "returns": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 5768,
                                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot.BytesSlot",
                                        "containingContract": "StorageSlot",
                                        "structMembers": [
                                            {
                                                "name": "value",
                                                "type": {
                                                    "type": "PackedBytes"
                                                }
                                            }
                                        ],
                                        "structName": "BytesSlot",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 4007,
                                "size": 172
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    }
                },
                "is_static_address": false,
                "lang": "Solidity",
                "localAssignments": {
                    "1": {
                        "lhs": "lastRewardTimestamp",
                        "sourceLoc": {
                            "begin": "5484",
                            "len": "121",
                            "source": "1"
                        }
                    },
                    "10": {
                        "lhs": "poolInfo",
                        "sourceLoc": {
                            "begin": "8825",
                            "len": "40",
                            "source": "1"
                        }
                    },
                    "11": {
                        "lhs": "userInfo",
                        "sourceLoc": {
                            "begin": "8875",
                            "len": "52",
                            "source": "1"
                        }
                    },
                    "12": {
                        "lhs": "pendingRewards",
                        "sourceLoc": {
                            "begin": "9073",
                            "len": "172",
                            "source": "1"
                        }
                    },
                    "13": {
                        "lhs": "poolInfo",
                        "sourceLoc": {
                            "begin": "9861",
                            "len": "40",
                            "source": "1"
                        }
                    },
                    "14": {
                        "lhs": "userInfo",
                        "sourceLoc": {
                            "begin": "9911",
                            "len": "52",
                            "source": "1"
                        }
                    },
                    "15": {
                        "lhs": "poolInfo",
                        "sourceLoc": {
                            "begin": "10312",
                            "len": "40",
                            "source": "1"
                        }
                    },
                    "16": {
                        "lhs": "userInfo",
                        "sourceLoc": {
                            "begin": "10362",
                            "len": "52",
                            "source": "1"
                        }
                    },
                    "17": {
                        "lhs": "pendingAmount",
                        "sourceLoc": {
                            "begin": "10493",
                            "len": "171",
                            "source": "1"
                        }
                    },
                    "18": {
                        "lhs": "userInfo",
                        "sourceLoc": {
                            "begin": "11498",
                            "len": "47",
                            "source": "1"
                        }
                    },
                    "19": {
                        "lhs": "deposits",
                        "sourceLoc": {
                            "begin": "13032",
                            "len": "55",
                            "source": "1"
                        }
                    },
                    "2": {
                        "lhs": "length",
                        "sourceLoc": {
                            "begin": "6483",
                            "len": "31",
                            "source": "1"
                        }
                    },
                    "20": {
                        "lhs": "earnings",
                        "sourceLoc": {
                            "begin": "13097",
                            "len": "55",
                            "source": "1"
                        }
                    },
                    "21": {
                        "lhs": "userInfo",
                        "sourceLoc": {
                            "begin": "13668",
                            "len": "47",
                            "source": "1"
                        }
                    },
                    "22": {
                        "lhs": "userInfo",
                        "sourceLoc": {
                            "begin": "13976",
                            "len": "46",
                            "source": "1"
                        }
                    },
                    "23": {
                        "lhs": "poolInfo",
                        "sourceLoc": {
                            "begin": "14218",
                            "len": "40",
                            "source": "1"
                        }
                    },
                    "24": {
                        "lhs": "userInfo",
                        "sourceLoc": {
                            "begin": "14268",
                            "len": "47",
                            "source": "1"
                        }
                    },
                    "25": {
                        "lhs": "accERC20PerShare",
                        "sourceLoc": {
                            "begin": "14326",
                            "len": "52",
                            "source": "1"
                        }
                    },
                    "26": {
                        "lhs": "lpSupply",
                        "sourceLoc": {
                            "begin": "14389",
                            "len": "41",
                            "source": "1"
                        }
                    },
                    "27": {
                        "lhs": "pendingRewards",
                        "sourceLoc": {
                            "begin": "15657",
                            "len": "163",
                            "source": "1"
                        }
                    },
                    "28": {
                        "lhs": "lastTimestamp",
                        "sourceLoc": {
                            "begin": "16066",
                            "len": "111",
                            "source": "1"
                        }
                    },
                    "29": {
                        "lhs": "stakingDuration",
                        "sourceLoc": {
                            "begin": "16188",
                            "len": "56",
                            "source": "1"
                        }
                    },
                    "3": {
                        "lhs": "poolInfo",
                        "sourceLoc": {
                            "begin": "6735",
                            "len": "37",
                            "source": "1"
                        }
                    },
                    "30": {
                        "lhs": "poolInfo.accERC20PerShare",
                        "sourceLoc": {
                            "begin": "7384",
                            "len": "165",
                            "source": "1"
                        }
                    },
                    "31": {
                        "lhs": "poolInfo.lastRewardTimestamp",
                        "sourceLoc": {
                            "begin": "7560",
                            "len": "46",
                            "source": "1"
                        }
                    },
                    "32": {
                        "lhs": "poolInfo.totalDeposits",
                        "sourceLoc": {
                            "begin": "8343",
                            "len": "57",
                            "source": "1"
                        }
                    },
                    "33": {
                        "lhs": "userInfo.amount",
                        "sourceLoc": {
                            "begin": "8411",
                            "len": "43",
                            "source": "1"
                        }
                    },
                    "34": {
                        "lhs": "userInfo.rewardDebt",
                        "sourceLoc": {
                            "begin": "8465",
                            "len": "135",
                            "source": "1"
                        }
                    },
                    "35": {
                        "lhs": "userInfo.amount",
                        "sourceLoc": {
                            "begin": "9345",
                            "len": "43",
                            "source": "1"
                        }
                    },
                    "36": {
                        "lhs": "userInfo.rewardDebt",
                        "sourceLoc": {
                            "begin": "9399",
                            "len": "135",
                            "source": "1"
                        }
                    },
                    "37": {
                        "lhs": "poolInfo.totalDeposits",
                        "sourceLoc": {
                            "begin": "9641",
                            "len": "57",
                            "source": "1"
                        }
                    },
                    "38": {
                        "lhs": "poolInfo.totalDeposits",
                        "sourceLoc": {
                            "begin": "10050",
                            "len": "65",
                            "source": "1"
                        }
                    },
                    "39": {
                        "lhs": "userInfo.amount",
                        "sourceLoc": {
                            "begin": "10195",
                            "len": "19",
                            "source": "1"
                        }
                    },
                    "4": {
                        "lhs": "lastTimestamp",
                        "sourceLoc": {
                            "begin": "6783",
                            "len": "111",
                            "source": "1"
                        }
                    },
                    "40": {
                        "lhs": "userInfo.rewardDebt",
                        "sourceLoc": {
                            "begin": "10224",
                            "len": "23",
                            "source": "1"
                        }
                    },
                    "41": {
                        "lhs": "userInfo.amount",
                        "sourceLoc": {
                            "begin": "10675",
                            "len": "49",
                            "source": "1"
                        }
                    },
                    "42": {
                        "lhs": "userInfo.rewardDebt",
                        "sourceLoc": {
                            "begin": "10735",
                            "len": "135",
                            "source": "1"
                        }
                    },
                    "43": {
                        "lhs": "poolInfo.totalDeposits",
                        "sourceLoc": {
                            "begin": "10881",
                            "len": "63",
                            "source": "1"
                        }
                    },
                    "44": {
                        "lhs": "userInfo.tokensUnlockTime",
                        "sourceLoc": {
                            "begin": "11720",
                            "len": "45",
                            "source": "1"
                        }
                    },
                    "45": {
                        "lhs": "deposits[i]",
                        "sourceLoc": {
                            "begin": "13265",
                            "len": "44",
                            "source": "1"
                        }
                    },
                    "46": {
                        "lhs": "earnings[i]",
                        "sourceLoc": {
                            "begin": "13323",
                            "len": "48",
                            "source": "1"
                        }
                    },
                    "47": {
                        "lhs": "sale",
                        "sourceLoc": {
                            "begin": "635",
                            "len": "51",
                            "source": "3"
                        }
                    },
                    "48": {
                        "lhs": "sales",
                        "sourceLoc": {
                            "begin": "1515",
                            "len": "61",
                            "source": "3"
                        }
                    },
                    "49": {
                        "lhs": "index",
                        "sourceLoc": {
                            "begin": "1586",
                            "len": "14",
                            "source": "3"
                        }
                    },
                    "5": {
                        "lhs": "lpSupply",
                        "sourceLoc": {
                            "begin": "6996",
                            "len": "41",
                            "source": "1"
                        }
                    },
                    "50": {
                        "lhs": "sales[index]",
                        "sourceLoc": {
                            "begin": "1673",
                            "len": "26",
                            "source": "3"
                        }
                    },
                    "51": {
                        "lhs": "$",
                        "sourceLoc": {
                            "begin": "2506",
                            "len": "47",
                            "source": "4"
                        }
                    },
                    "52": {
                        "lhs": "$",
                        "sourceLoc": {
                            "begin": "3847",
                            "len": "47",
                            "source": "4"
                        }
                    },
                    "53": {
                        "lhs": "oldOwner",
                        "sourceLoc": {
                            "begin": "3904",
                            "len": "27",
                            "source": "4"
                        }
                    },
                    "54": {
                        "lhs": "$._owner",
                        "sourceLoc": {
                            "begin": "3941",
                            "len": "19",
                            "source": "4"
                        }
                    },
                    "55": {
                        "lhs": "$",
                        "sourceLoc": {
                            "begin": "4158",
                            "len": "59",
                            "source": "5"
                        }
                    },
                    "56": {
                        "lhs": "isTopLevelCall",
                        "sourceLoc": {
                            "begin": "4279",
                            "len": "38",
                            "source": "5"
                        }
                    },
                    "57": {
                        "lhs": "initialized",
                        "sourceLoc": {
                            "begin": "4327",
                            "len": "35",
                            "source": "5"
                        }
                    },
                    "58": {
                        "lhs": "initialSetup",
                        "sourceLoc": {
                            "begin": "4706",
                            "len": "54",
                            "source": "5"
                        }
                    },
                    "59": {
                        "lhs": "construction",
                        "sourceLoc": {
                            "begin": "4770",
                            "len": "70",
                            "source": "5"
                        }
                    },
                    "6": {
                        "lhs": "stakingDuration",
                        "sourceLoc": {
                            "begin": "7166",
                            "len": "70",
                            "source": "1"
                        }
                    },
                    "60": {
                        "lhs": "$",
                        "sourceLoc": {
                            "begin": "6357",
                            "len": "59",
                            "source": "5"
                        }
                    },
                    "61": {
                        "lhs": "$",
                        "sourceLoc": {
                            "begin": "7826",
                            "len": "59",
                            "source": "5"
                        }
                    },
                    "62": {
                        "lhs": "$._initialized",
                        "sourceLoc": {
                            "begin": "4951",
                            "len": "18",
                            "source": "5"
                        }
                    },
                    "63": {
                        "lhs": "$._initialized",
                        "sourceLoc": {
                            "begin": "6541",
                            "len": "24",
                            "source": "5"
                        }
                    },
                    "64": {
                        "lhs": "$._initializing",
                        "sourceLoc": {
                            "begin": "6575",
                            "len": "22",
                            "source": "5"
                        }
                    },
                    "65": {
                        "lhs": "$._initializing",
                        "sourceLoc": {
                            "begin": "6618",
                            "len": "23",
                            "source": "5"
                        }
                    },
                    "66": {
                        "lhs": "oldOwner",
                        "sourceLoc": {
                            "begin": "2985",
                            "len": "25",
                            "source": "8"
                        }
                    },
                    "67": {
                        "lhs": "beaconImplementation",
                        "sourceLoc": {
                            "begin": "4850",
                            "len": "66",
                            "source": "14"
                        }
                    },
                    "68": {
                        "lhs": "oldAllowance",
                        "sourceLoc": {
                            "begin": "3242",
                            "len": "62",
                            "source": "17"
                        }
                    },
                    "69": {
                        "lhs": "approvalCall",
                        "sourceLoc": {
                            "begin": "5171",
                            "len": "75",
                            "source": "17"
                        }
                    },
                    "7": {
                        "lhs": "erc20Reward",
                        "sourceLoc": {
                            "begin": "7246",
                            "len": "127",
                            "source": "1"
                        }
                    },
                    "70": {
                        "lhs": "returnSize",
                        "sourceLoc": {
                            "begin": "8450",
                            "len": "18",
                            "source": "17"
                        }
                    },
                    "71": {
                        "lhs": "returnValue",
                        "sourceLoc": {
                            "begin": "8478",
                            "len": "19",
                            "source": "17"
                        }
                    },
                    "72": {
                        "lhs": "success",
                        "sourceLoc": {
                            "begin": "9691",
                            "len": "12",
                            "source": "17"
                        }
                    },
                    "73": {
                        "lhs": "returnSize",
                        "sourceLoc": {
                            "begin": "9713",
                            "len": "18",
                            "source": "17"
                        }
                    },
                    "74": {
                        "lhs": "returnValue",
                        "sourceLoc": {
                            "begin": "9741",
                            "len": "19",
                            "source": "17"
                        }
                    },
                    "75": {
                        "lhs": "success,returndata",
                        "sourceLoc": {
                            "begin": "1506",
                            "len": "75",
                            "source": "18"
                        }
                    },
                    "76": {
                        "lhs": "success,returndata",
                        "sourceLoc": {
                            "begin": "3230",
                            "len": "73",
                            "source": "18"
                        }
                    },
                    "77": {
                        "lhs": "success,returndata",
                        "sourceLoc": {
                            "begin": "3631",
                            "len": "65",
                            "source": "18"
                        }
                    },
                    "78": {
                        "lhs": "success,returndata",
                        "sourceLoc": {
                            "begin": "4023",
                            "len": "67",
                            "source": "18"
                        }
                    },
                    "8": {
                        "lhs": "poolInfo",
                        "sourceLoc": {
                            "begin": "7721",
                            "len": "40",
                            "source": "1"
                        }
                    },
                    "9": {
                        "lhs": "userInfo",
                        "sourceLoc": {
                            "begin": "7771",
                            "len": "52",
                            "source": "1"
                        }
                    }
                },
                "methods": [
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "constructor",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [],
                        "returns": [],
                        "sighash": "0",
                        "sourceBytes": {
                            "begin": 4120,
                            "size": 53
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getTotalPending",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "3bd05400",
                        "sourceBytes": {
                            "begin": 15915,
                            "size": 427
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getRewardPerSec",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "e0d41c02",
                        "sourceBytes": {
                            "begin": 11967,
                            "size": 98
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "PackedBytes"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "upgradeToAndCall",
                        "notpayable": false,
                        "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
                        "paramNames": [
                            "newImplementation",
                            "data"
                        ],
                        "returns": [],
                        "sighash": "4f1ef286",
                        "sourceBytes": {
                            "begin": 4161,
                            "size": 214
                        },
                        "stateMutability": "payable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "transferOwnership",
                        "notpayable": true,
                        "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
                        "paramNames": [
                            "newOwner"
                        ],
                        "returns": [],
                        "sighash": "f2fde38b",
                        "sourceBytes": {
                            "begin": 3405,
                            "size": 215
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getPoolNum",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "212af18d",
                        "sourceBytes": {
                            "begin": 13454,
                            "size": 92
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "emergencyWithdraw",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [
                            "_poolId"
                        ],
                        "returns": [],
                        "sighash": "5312ea8e",
                        "sourceBytes": {
                            "begin": 9800,
                            "size": 454
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "dynamicArrayBaseType": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    },
                                    "type": "Array"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "getPendingAndDepositedForUsers",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [
                            "users",
                            "poolId"
                        ],
                        "returns": [
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "dynamicArrayBaseType": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    },
                                    "type": "Array"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "dynamicArrayBaseType": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    },
                                    "type": "Array"
                                }
                            }
                        ],
                        "sighash": "fcfc1b14",
                        "sourceBytes": {
                            "begin": 12864,
                            "size": 562
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getTotalAllocPoint",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "3a58b91a",
                        "sourceBytes": {
                            "begin": 12264,
                            "size": 101
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "getUserInfoInPool",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [
                            "_poolId",
                            "_user"
                        ],
                        "returns": [
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "astId": 43,
                                    "canonicalId": "src/StakingMining.sol|StakingMining.User",
                                    "containingContract": "StakingMining",
                                    "structMembers": [
                                        {
                                            "name": "amount",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "rewardDebt",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "tokensUnlockTime",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "salesRegistered",
                                            "type": {
                                                "dynamicArrayBaseType": {
                                                    "primitiveName": "address",
                                                    "type": "Primitive"
                                                },
                                                "type": "Array"
                                            }
                                        }
                                    ],
                                    "structName": "User",
                                    "type": "UserDefinedStruct"
                                }
                            }
                        ],
                        "sighash": "f70fd81c",
                        "sourceBytes": {
                            "begin": 13851,
                            "size": 203
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "fund",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [
                            "_amount"
                        ],
                        "returns": [],
                        "sighash": "ca1d209d",
                        "sourceBytes": {
                            "begin": 4804,
                            "size": 328
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "massUpdatePools",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [],
                        "returns": [],
                        "sighash": "630b5ba1",
                        "sourceBytes": {
                            "begin": 6439,
                            "size": 186
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "updatePool",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [
                            "_pid"
                        ],
                        "returns": [],
                        "sighash": "51eb05a6",
                        "sourceBytes": {
                            "begin": 6684,
                            "size": 929
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "compound",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [
                            "_poolId"
                        ],
                        "returns": [],
                        "sighash": "aa5f7e26",
                        "sourceBytes": {
                            "begin": 10260,
                            "size": 835
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "renounceOwnership",
                        "notpayable": true,
                        "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
                        "paramNames": [],
                        "returns": [],
                        "sighash": "715018a6",
                        "sourceBytes": {
                            "begin": 3155,
                            "size": 101
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "proxiableUUID",
                        "notpayable": true,
                        "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "bytes32",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "52d1902d",
                        "sourceBytes": {
                            "begin": 3708,
                            "size": 134
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "getPoolInfo",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [
                            "poolId"
                        ],
                        "returns": [
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "astId": 55,
                                    "canonicalId": "src/StakingMining.sol|StakingMining.Pool",
                                    "containingContract": "StakingMining",
                                    "structMembers": [
                                        {
                                            "name": "lpToken",
                                            "type": {
                                                "contractName": "IERC20",
                                                "type": "Contract"
                                            }
                                        },
                                        {
                                            "name": "allocPoint",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "lastRewardTimestamp",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "accERC20PerShare",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "totalDeposits",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        }
                                    ],
                                    "structName": "Pool",
                                    "type": "UserDefinedStruct"
                                }
                            }
                        ],
                        "sighash": "2f380b35",
                        "sourceBytes": {
                            "begin": 12746,
                            "size": 112
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "getPendingReward",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [
                            "_poolId",
                            "_user"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "c59b1f3c",
                        "sourceBytes": {
                            "begin": 14098,
                            "size": 1761
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "contractName": "IERC20",
                                    "type": "Contract"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "add",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [
                            "_allocPoint",
                            "_lpToken",
                            "_withUpdate"
                        ],
                        "returns": [],
                        "sighash": "1eaaa045",
                        "sourceBytes": {
                            "begin": 5290,
                            "size": 652
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "getDeposited",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [
                            "_poolId",
                            "_user"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "e86facc5",
                        "sourceBytes": {
                            "begin": 13552,
                            "size": 202
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getPaidOut",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "b3458b4b",
                        "sourceBytes": {
                            "begin": 13760,
                            "size": 85
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setTokensUnlockTime",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [
                            "_poolId",
                            "_user",
                            "_tokensUnlockTime"
                        ],
                        "returns": [],
                        "sighash": "e6f04acc",
                        "sourceBytes": {
                            "begin": 11343,
                            "size": 536
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "contractName": "IERC20",
                                    "type": "Contract"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "initialize",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [
                            "_erc20",
                            "_rewardPerSecond",
                            "_startTimestamp",
                            "_salesFactory"
                        ],
                        "returns": [],
                        "sighash": "9e3d87cd",
                        "sourceBytes": {
                            "begin": 4199,
                            "size": 445
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "UPGRADE_INTERFACE_VERSION",
                        "notpayable": true,
                        "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            }
                        ],
                        "sighash": "ad3cb1cc",
                        "sourceBytes": {
                            "begin": 1819,
                            "size": 58
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "version",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "54fd4d50",
                        "sourceBytes": {
                            "begin": 11885,
                            "size": 76
                        },
                        "stateMutability": "pure",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "deposit",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [
                            "_poolId",
                            "_amount"
                        ],
                        "returns": [],
                        "sighash": "e2bbb158",
                        "sourceBytes": {
                            "begin": 7653,
                            "size": 1007
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "set",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [
                            "_poolId",
                            "_allocPoint",
                            "_withUpdate"
                        ],
                        "returns": [],
                        "sighash": "64482f79",
                        "sourceBytes": {
                            "begin": 5988,
                            "size": 366
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getTotalRewards",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "e627f2db",
                        "sourceBytes": {
                            "begin": 12163,
                            "size": 95
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "owner",
                        "notpayable": true,
                        "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "8da5cb5b",
                        "sourceBytes": {
                            "begin": 2441,
                            "size": 144
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getStartTimestamp",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "1f89f25e",
                        "sourceBytes": {
                            "begin": 12413,
                            "size": 99
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setSalesFactory",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [
                            "_salesFactory"
                        ],
                        "returns": [],
                        "sighash": "3dfcb861",
                        "sourceBytes": {
                            "begin": 11101,
                            "size": 236
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getEndTimestamp",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "74e94deb",
                        "sourceBytes": {
                            "begin": 12518,
                            "size": 95
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "withdraw",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [
                            "_poolId",
                            "_amount"
                        ],
                        "returns": [],
                        "sighash": "441a3e70",
                        "sourceBytes": {
                            "begin": 8756,
                            "size": 1003
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getRewardToken",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "contractName": "IERC20",
                                    "type": "Contract"
                                }
                            }
                        ],
                        "sighash": "69940d79",
                        "sourceBytes": {
                            "begin": 12071,
                            "size": 86
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getStakingMiningDuration",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "a242057a",
                        "sourceBytes": {
                            "begin": 12619,
                            "size": 121
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    }
                ],
                "name": "StakingMining",
                "original_file": "src/StakingMining.sol",
                "solidityTypes": [
                    {
                        "astId": 1734,
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol|OwnableUpgradeable.OwnableStorage",
                        "containingContract": "OwnableUpgradeable",
                        "structMembers": [
                            {
                                "name": "_owner",
                                "type": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "OwnableStorage",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 5412,
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol|ECDSA.RecoverError",
                        "containingContract": "ECDSA",
                        "enumMembers": [
                            {
                                "name": "NoError"
                            },
                            {
                                "name": "InvalidSignature"
                            },
                            {
                                "name": "InvalidSignatureLength"
                            },
                            {
                                "name": "InvalidSignatureS"
                            }
                        ],
                        "enumName": "RecoverError",
                        "type": "UserDefinedEnum"
                    },
                    {
                        "astId": 7549,
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/math/Math.sol|Math.Rounding",
                        "containingContract": "Math",
                        "enumMembers": [
                            {
                                "name": "Floor"
                            },
                            {
                                "name": "Ceil"
                            },
                            {
                                "name": "Trunc"
                            },
                            {
                                "name": "Expand"
                            }
                        ],
                        "enumName": "Rounding",
                        "type": "UserDefinedEnum"
                    },
                    {
                        "astId": 1975,
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol|Initializable.InitializableStorage",
                        "containingContract": "Initializable",
                        "structMembers": [
                            {
                                "name": "_initialized",
                                "type": {
                                    "primitiveName": "uint64",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "_initializing",
                                "type": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "InitializableStorage",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 43,
                        "canonicalId": "src/StakingMining.sol|StakingMining.User",
                        "containingContract": "StakingMining",
                        "structMembers": [
                            {
                                "name": "amount",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "rewardDebt",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "tokensUnlockTime",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "salesRegistered",
                                "type": {
                                    "dynamicArrayBaseType": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    },
                                    "type": "Array"
                                }
                            }
                        ],
                        "structName": "User",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 55,
                        "canonicalId": "src/StakingMining.sol|StakingMining.Pool",
                        "containingContract": "StakingMining",
                        "structMembers": [
                            {
                                "name": "lpToken",
                                "type": {
                                    "contractName": "IERC20",
                                    "type": "Contract"
                                }
                            },
                            {
                                "name": "allocPoint",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "lastRewardTimestamp",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "accERC20PerShare",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "totalDeposits",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "Pool",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 3163,
                        "canonicalId": "src/sale/IceFrogSale.sol|IceFrogSale.Sale",
                        "containingContract": "IceFrogSale",
                        "structMembers": [
                            {
                                "name": "token",
                                "type": {
                                    "contractName": "IERC20",
                                    "type": "Contract"
                                }
                            },
                            {
                                "name": "isCreated",
                                "type": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "earningsWithdrawn",
                                "type": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "leftoverWithdrawn",
                                "type": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "saleOwner",
                                "type": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "tokenPriceInETH",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "amountOfTokensToSell",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "totalTokensSold",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "totalETHRaised",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "saleStart",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "saleEnd",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "tokensUnlockTime",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "maxParticipation",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "Sale",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 3173,
                        "canonicalId": "src/sale/IceFrogSale.sol|IceFrogSale.Participation",
                        "containingContract": "IceFrogSale",
                        "structMembers": [
                            {
                                "name": "amountBought",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "amountETHPaid",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "timeParticipated",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "isPortionWithdrawn",
                                "type": {
                                    "dynamicArrayBaseType": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    },
                                    "type": "Array"
                                }
                            }
                        ],
                        "structName": "Participation",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 3180,
                        "canonicalId": "src/sale/IceFrogSale.sol|IceFrogSale.Registration",
                        "containingContract": "IceFrogSale",
                        "structMembers": [
                            {
                                "name": "registrationTimeStarts",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "registrationTimeEnds",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "numberOfRegistrants",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "Registration",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 6168,
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot.AddressSlot",
                        "containingContract": "StorageSlot",
                        "structMembers": [
                            {
                                "name": "value",
                                "type": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "AddressSlot",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 6171,
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot.BooleanSlot",
                        "containingContract": "StorageSlot",
                        "structMembers": [
                            {
                                "name": "value",
                                "type": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "BooleanSlot",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 6174,
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot.Bytes32Slot",
                        "containingContract": "StorageSlot",
                        "structMembers": [
                            {
                                "name": "value",
                                "type": {
                                    "primitiveName": "bytes32",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "Bytes32Slot",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 6177,
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot.Uint256Slot",
                        "containingContract": "StorageSlot",
                        "structMembers": [
                            {
                                "name": "value",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "Uint256Slot",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 6180,
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot.Int256Slot",
                        "containingContract": "StorageSlot",
                        "structMembers": [
                            {
                                "name": "value",
                                "type": {
                                    "primitiveName": "int256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "Int256Slot",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 6183,
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot.StringSlot",
                        "containingContract": "StorageSlot",
                        "structMembers": [
                            {
                                "name": "value",
                                "type": {
                                    "type": "StringType"
                                }
                            }
                        ],
                        "structName": "StringSlot",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 6186,
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot.BytesSlot",
                        "containingContract": "StorageSlot",
                        "structMembers": [
                            {
                                "name": "value",
                                "type": {
                                    "type": "PackedBytes"
                                }
                            }
                        ],
                        "structName": "BytesSlot",
                        "type": "UserDefinedStruct"
                    }
                ],
                "sourceBytes": {
                    "begin": 1189,
                    "size": 15155
                },
                "srcmap": "1189:26442:1:-:0;;;;;;;;;-1:-1:-1;1189:26442:1;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;;;;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;:::o;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::o;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;;;;;;;;;:::i;:::-;;;:::o;:::-;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;:::i;:::-;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::o;:::-;;:::i;:::-;;;;;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;;;:::o;:::-;;;;:::i;:::-;;;;;;;:::i;:::-;:::o;:::-;;;:::i;:::-;;:::o;1819:58:6:-;1870:7;;:::i;:::-;1819:58;:::o;:::-;;;:::i;:::-;;:::o;1189:26442:1:-;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;:::o;:::-;;;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;:::i;:::-;;;:::o;:::-;;;;:::o;:::-;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;:::i;:::-;;;:::o;:::-;;;;;;;:::o;:::-;;;;:::o;:::-;;;;;;;:::i;:::-;;;:::o;:::-;;;;:::o;:::-;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;7508:541;;8045:1;7508:541;;6809:11;6821:8;6830:11;7587:457;;;;;;;;;;;;;8045:1;:::i;:::-;7508:541::o;3231:62:4:-;;3285:1;3231:62;;;;:::i;:::-;3285:1;:::i;:::-;3231:62::o;1189:26442:1:-;;;;:::o;:::-;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::o;:::-;;:::i;:::-;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;;:::o;:::-;;;;;:::i;:::-;;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;:::i;:::-;:::o;:::-;;;;;;;;:::i;:::-;:::o;:::-;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;:::o;:::-;;:::i;6689:819::-;;7266:225;;;6689:819;7240:261;6689:819;6862:59;;6689:819;6960:15;:32;;6978:14;;;:::i;:::-;6960:32;:::i;:::-;;;:::i;:::-;;:91;;;;7266:225;;7007:15;6960:91;7052:120;;;7182:47;7200:29;:15;;;:::i;:::-;7218:11;7200:29;;:::i;:::-;7182:47;;:::i;:::-;7266:225;7240:12;:7;:12;:::i;:::-;7298:8;7336:11;7386:19;7266:225;7441:1;7475;7266:225;7475:1;7266:225;;;:::i;:::-;;;;;:::i;:::-;;;;;:::i;:::-;;;;;:::i;:::-;;:::i;:::-;;;;;:::i;:::-;;:::i;:::-;;;;;:::i;:::-;7240:261;:::i;:::-;6689:819::o;6960:91::-;7266:225;;7037:14;;;:::i;:::-;6960:91;;6862:59;;;:::i;:::-;;;6689:819;;;;;;:::i;:::-;:::o;1189:26442::-;;;:::o;21123:99::-;21175:7;;:::i;:::-;21201:14;;;;:::i;:::-;21194:21;:::o;1189:26442::-;;;:::o;22676:92::-;22721:7;;:::i;:::-;22747;:14;:7;:14;:::i;:::-;22740:21;:::o;1189:26442::-;;;;:::i;:::-;;:::o;:::-;;;:::o;:::-;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;:::o;:::-;;;:::i;:::-;;:::o;:::-;;;;;;;:::o;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;:::o;:::-;;;;:::i;:::-;;:::o;21456:112::-;21546:15;21539:22;21456:112;21516:11;;:::i;:::-;21546:7;;:15;:::i;:::-;;21539:22;:::i;:::-;;:::o;20974:101::-;21027:7;;:::i;:::-;21053:15;;;;:::i;:::-;21046:22;:::o;1189:26442::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;:::i;26972:657::-;27022:7;;:::i;:::-;27045:15;;:33;;27064:14;;;:::i;:::-;27045:33;:::i;:::-;;;:::i;:::-;;;27041:72;;27147:15;:30;;27165:12;;;:::i;:::-;27147:30;:::i;:::-;;;:::i;:::-;;:87;;;;27579:43;:33;27385:30;27192:15;27147:87;27235:114;;;27401:14;;;:::i;:::-;27385:30;;:::i;:::-;27416:116;;;27579:15;;;:::i;:::-;:33;:::i;:::-;27615:7;;;:::i;:::-;27579:43;;:::i;:::-;27572:50;:::o;27147:87::-;27579:43;:33;27385:30;27222:12;;;:::i;:::-;27147:87;;27041:72;27094:8;27101:1;27094:8;:::i;:::-;;:::o;3231:62:4:-;3285:1;3231:62;;;:::i;:::-;3285:1;:::i;:::-;3231:62::o;1189:26442:1:-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;19541:236::-;19622:13;:27;;19639:10;19647:1;19639:10;:::i;:::-;19622:27;:::i;:::-;;;:::i;:::-;;19618:100;;19743:27;19728:42;19756:13;19743:27;:::i;:::-;19728:42;;:::i;:::-;19541:236::o;19618:100::-;19672:35;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;19541:236;;;;:::i;:::-;:::o;1189:26442::-;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;:::o;:::-;;;;:::o;:::-;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;;:::i;:::-;;;;;;;;13976:2171;;14036:364;;;;;;;;;;;;14409:40;14433:16;:7;14441;14433:16;;:::i;:::-;;14409:40;:::i;:::-;14450:102;;;14561:52;14585:28;:16;:7;14593;14585:16;;:::i;:::-;14602:10;14585:28;;:::i;:::-;14561:52;:::i;:::-;14614:102;;;;14730:15;;:8;:15;;:::i;:::-;:25;;14748:7;14730:25;:::i;:::-;;;:::i;:::-;;14726:95;;14842:7;;;:::i;:::-;14886:147;14936:15;;:8;:15;;:::i;:::-;14965:25;;:8;:25;;:::i;:::-;15004:19;;:8;:19;;:::i;:::-;14886:147;;:::i;:::-;15034:115;;;;15159:14;:5;;;:::i;:::-;:14;:::i;:::-;;:42;:14;15174:10;;15186:14;15159:42;;15186:14;15159:42;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;15948:22;15159:42;15212:25;;15622:19;15159:42;15948:22;15159:42;15622:19;15159:42;;;13976:2171;15223:14;15212:25;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;15248:43;15266:25;:15;;:8;:15;;:::i;:::-;15284:7;15266:25;;:::i;:::-;15248:15;:8;:15;:43;:::i;:::-;15318:15;;:8;:15;;:::i;:::-;15334:116;;15460:135;15482:113;15531:15;;:8;:15;;:::i;:::-;15560:25;;:8;:25;;:::i;:::-;15482:113;;:::i;:::-;15460:8;;:19;:135;:::i;:::-;15622:19;;:::i;:::-;15642:116;;15846:7;15795:16;;:8;:16;;:::i;:::-;15833:10;15846:7;;;:::i;:::-;15864:57;15889:32;:22;:8;;:22;;:::i;:::-;15914:7;15889:32;;:::i;:::-;15864:8;;:22;:57;:::i;:::-;15948:22;;:::i;:::-;15971:116;;16111:10;16123:7;16132;16102:38;;;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;:::i;:::-;;;;13976:2171::o;15159:42::-;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;:::i;14726:95::-;14778:32;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;4903:447:6;;5346:1;4903:447;4761:17;4779:4;4974:371;;;;;;;;;;;5346:1;:::i;:::-;4903:447::o;2624:62::-;;2678:1;2624:62;;;:::i;:::-;2678:1;:::i;:::-;2624:62::o;4651:252::-;;4891:4;4651:252;4822:17;;;:::i;:::-;4891:4;:::i;:::-;4651:252::o;:::-;;;;;:::i;:::-;:::o;1189:26442:1:-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::o;:::-;;:::i;9682:2098::-;10034:13;10010:37;9682:2098;9724:277;;;;;;;;;10034:7;:13;:::i;:::-;;10010:37;:::i;:::-;10048:102;;;10184:15;:30;;10202:12;;;:::i;:::-;10184:30;:::i;:::-;;;:::i;:::-;;:87;;;;10229:15;10184:87;10272:114;;;;10400:13;:45;;10417:28;;:8;:28;;:::i;:::-;10400:45;:::i;:::-;;;:::i;:::-;;;10396:82;;10506:22;;:8;:22;;:::i;:::-;10529:109;;;10652:8;:13;;10664:1;10652:13;:::i;:::-;;;:::i;:::-;;10648:108;;10792:13;11212:165;11240:137;11629:28;10792:13;10984:105;10985:97;10986:33;10792:44;11629:28;10792:13;10808:28;:8;;:28;;:::i;:::-;10792:44;;:::i;:::-;10837:116;;;11004:15;;;:::i;:::-;10986:33;;:::i;:::-;11036:45;11037:25;:19;;:8;:19;;:::i;:::-;:25;11059:3;11037:25;:::i;:::-;;;:::i;:::-;11066:15;;;:::i;:::-;11036:45;;:::i;:::-;10985:97;;:::i;:::-;10984:105;11086:3;10984:105;:::i;:::-;;;:::i;:::-;11090:112;;;;11295:25;;:8;:25;;:::i;:::-;11334:11;11359:8;11240:137;;:::i;:::-;11212:25;:8;:25;:165;:::i;:::-;11404:25;;:8;:25;;:::i;:::-;11430:116;;11556:46;11587:15;11556:8;;:28;:46;:::i;:::-;11629:28;;:::i;:::-;11658:116;;9682:2098::o;10648:108::-;10712:13;10681:28;:44;10712:13;10681:8;:28;:44;:::i;:::-;10739:7::o;10396:82::-;10461:7;;:::o;10184:87::-;10259:12;;;:::i;:::-;10184:87;;1189:26442;;;:::o;2892:72:6:-;2956:1;2892:72;;;:::i;:::-;2956:1;:::i;:::-;2892:72;:::o;1189:26442:1:-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;763:114:14:-;811:66;;;:::i;:::-;763:114;:::o;4198:134:6:-;4293:32;;;:::i;:::-;4286:39;:::o;4198:134::-;4267:7;;;:::i;:::-;;:::i;:::-;4198:134;:::o;16188:1423:1:-;17469:19;;16188:1423;16240:280;;;;;;;;;16529:40;16553:16;:7;16561;16553:16;;:::i;:::-;;16529:40;:::i;:::-;16570:102;;;;17014:22;;16681:52;16705:28;:16;:7;16713;16705:16;;:::i;:::-;16722:10;16705:28;;:::i;:::-;16681:52;:::i;:::-;16734:102;;;;16896:15;16845:16;;:8;:16;;:::i;:::-;16883:10;16896:15;;:8;:15;;:::i;:::-;;;:::i;:::-;16922:65;16947:40;:22;:8;;:22;;:::i;:::-;16972:15;;:8;:15;;:::i;:::-;16947:40;;:::i;:::-;16922:8;;:22;:65;:::i;:::-;17014:22;;:::i;:::-;17037:116;;17185:10;17197:7;17206:15;;:8;:15;;:::i;:::-;17167:55;;;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;:::i;:::-;;;;17232:19;;17250:1;17232:19;:::i;:::-;:15;:8;:15;:19;:::i;:::-;17278:15;;:8;:15;;:::i;:::-;17294:116;;17419:23;;17441:1;17419:23;:::i;:::-;:8;;:19;:23;:::i;:::-;17469:19;;:::i;:::-;17489:116;;16188:1423::o;1189:26442::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;20595:76::-;20637:7;;:::i;:::-;20663:1;20656:8;20663:1;20656:8;:::i;:::-;;:::o;1189:26442::-;;;;;;:::i;:::-;;:::o;9134:489::-;9169:196;;;;;;9391:14;:7;:14;:::i;:::-;9406:107;;;9527:18;9544:1;9527:18;:::i;:::-;9564:8;9547:6;:15;;9556:6;9547:15;:::i;:::-;;;:::i;:::-;;;;;9599:6;;9564:8;9599:6;;:::i;:::-;9564:8;:::i;:::-;9527:18;;9547:15;;;9134:489::o;8508:541::-;;9045:1;8508:541;;8216:7;8224:11;8236;8588:456;;;;;;;;;;;;;9045:1;:::i;:::-;8508:541::o;3231:62:4:-;;3285:1;3231:62;;;;:::i;:::-;3285:1;:::i;:::-;3231:62::o;8095:413:1:-;;8460:16;:27;8095:413;8460:41;8095:413;8268:59;;8095:413;8337:113;8367:83;:57;:15;;;:::i;:::-;8397:27;:7;:16;:7;8405;8397:16;;:::i;:::-;;:27;;:::i;:::-;8367:57;;:::i;:::-;8439:11;8367:83;;:::i;:::-;8337:113;;:::i;:::-;8460:7;;:16;:::i;:::-;;:27;:41;:::i;:::-;8095:413::o;8268:59::-;;;:::i;:::-;;;8095:413;;;;;;:::i;:::-;:::o;1189:26442::-;;;:::o;20781:86::-;20830:6;;:::i;:::-;20855:5;;;;:::i;:::-;20848:12;:::o;4694:229:4:-;4722:196;;;;;;4919:1;;:::i;:::-;4694:229::o;3231:62::-;;;:::i;:::-;3285:1;;:::i;:::-;3231:62::o;4577:117::-;4676:10;;4684:1;4676:10;:::i;:::-;;:::i;:::-;4577:117::o;:::-;;;:::i;:::-;:::o;21228:95:1:-;21278:7;;:::i;:::-;21304:12;;;;:::i;:::-;21297:19;:::o;1189:26442::-;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;3369:442:4:-;3415:7;;:::i;:::-;3425:196;;;;;;;3796:8;;3657:20;;:::i;:::-;3678:102;;;3796:8;;:::i;:::-;3789:15;:::o;4713:671:1:-;;5380:1;4713:671;;;4368:6;4375:16;4392:15;4408:13;;4825:554;;;;;;;;;;;;;;;5380:1;:::i;:::-;4713:671::o;1189:26442::-;;;;:::o;:::-;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;:::o;:::-;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;4069:1815:5:-;;;;4191:26;;:::i;:::-;4218:102;;;;4403:16;4404:15;;:1;:15;;:::i;:::-;4403:16;;:::i;:::-;4420:115;;;;4565:14;;:1;:14;;:::i;:::-;4580:112;;;5055:11;:16;;5070:1;5055:16;:::i;:::-;;;:::i;:::-;;:34;;;4069:1815;5090:113;;;;5232:16;;5247:1;5232:16;:::i;:::-;;;:::i;:::-;;:50;;;4069:1815;5410:13;5212:70;5283:113;;;;5410:13;;:::i;:::-;:30;;;;4069:1815;5406:91;;;5766:1;5523;5506:18;;5523:1;5506:18;:::i;:::-;:14;:1;:14;:18;:::i;:::-;5550:14;;:1;:14;;:::i;:::-;5565:116;;5694:14;5690:67;;4069:1815;5766:1;:::i;:::-;5777:101;;4069:1815;;:::o;5777:101::-;5811:23;5829:5;5811:15;5829:5;5811:1;:15;:23;:::i;:::-;5865:1;5853:14;;;;;:::i;:::-;;;;;;:::i;:::-;;;;5777:101;;;5690:67;5724:22;5742:4;5724:15;:1;:15;:22;:::i;:::-;5690:67;;5406:91;5463:23;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;5410:30;5427:13;5428:12;;5427:13;;:::i;:::-;5410:30;;;5232:50;5260:4;5410:13;5252;5260:4;5252:13;:::i;:::-;:25;:30;;5281:1;5252:30;:::i;:::-;;;:::i;:::-;;5232:50;;;;5055:34;5075:14;;5055:34;;4199:514:1;4679:27;4199:514;4538:34;4664:42;4199:514;;4514:14;4624:30;4199:514;4459:10;;;:::i;:::-;;;:::i;:::-;4514:14;;:::i;:::-;4538:34;;:::i;:::-;4582:32;4599:15;4582:32;;:::i;:::-;4624:30;;:::i;:::-;4679:27;:::i;:::-;4664:42;;:::i;:::-;4199:514::o;:::-;;;;;;;:::i;:::-;:::o;21329:121::-;21388:7;;:::i;:::-;21414:12;:29;:12;;;:::i;:::-;21429:14;;;:::i;:::-;21414:29;;:::i;:::-;21407:36;:::o;1189:26442::-;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;:::o;17617:1918::-;17660:280;;;;;;;;;17949:40;17973:16;:7;17981;17973:16;;:::i;:::-;;17949:40;:::i;:::-;17990:102;;;18101:52;18125:28;:16;:7;18133;18125:16;;:::i;:::-;18142:10;18125:28;;:::i;:::-;18101:52;:::i;:::-;18154:102;;;;18265:28;18272:15;;:8;:15;;:::i;:::-;:20;;18291:1;18272:20;:::i;:::-;;;:::i;:::-;;;18265:28;:::i;:::-;18315:7;;;:::i;:::-;19246:22;;18358:147;18408:15;;:8;:15;;:::i;:::-;18437:25;;:8;:25;;:::i;:::-;18476:19;;:8;:19;;:::i;:::-;18358:147;;:::i;:::-;18506:114;;;;18630:49;18648:31;:15;;:8;:15;;:::i;:::-;18666:13;18648:31;;:::i;:::-;18630:15;:8;:15;:49;:::i;:::-;18706:15;;:8;:15;;:::i;:::-;18722:116;;18848:135;18870:113;18919:15;;:8;:15;;:::i;:::-;18948:25;;:8;:25;;:::i;:::-;18870:113;;:::i;:::-;18848:19;:8;:19;:135;:::i;:::-;19010:19;;:8;:19;;:::i;:::-;19030:116;;19156:63;19181:38;:22;:8;;:22;;:::i;:::-;19206:13;19181:38;;:::i;:::-;19156:8;;:22;:63;:::i;:::-;19246:22;;:::i;:::-;19269:116;;19503:15;;19431:10;19455:7;19476:13;19503:8;:15;;:::i;:::-;19399:129;;;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;17617:1918::o;23446:85::-;23491:7;;:::i;:::-;23517;;;;:::i;:::-;23510:14;:::o;24248:2668::-;24882:47;24906:23;26624:138;24248:2668;24349:7;;:::i;:::-;24359:362;;;;;;;;;;;;;24906:16;24730:40;24754:16;:7;24762;24754:16;;:::i;:::-;;24730:40;:::i;:::-;24771:102;;;;24906:7;:16;:::i;:::-;:23;:::i;:::-;24882:47;:::i;:::-;24930:102;;;25069:25;;:8;:25;;:::i;:::-;25095:117;;;;25241:22;;:8;:22;;:::i;:::-;25264:109;;;;25387:15;:46;;25405:28;;:8;:28;;:::i;:::-;25387:46;:::i;:::-;;;:::i;:::-;;:63;;;24248:2668;25383:1206;;24248:2668;26674:8;;26733:19;;26674:15;;:8;:15;;:::i;:::-;26703:16;26733:8;:19;;:::i;:::-;26624:138;;:::i;:::-;26763:115;;;26888:21;:::o;25383:1206::-;25490:15;25927:109;25928:101;26240:144;25490:15;;;;:30;;25508:12;;;:::i;:::-;25490:30;:::i;:::-;;;:::i;:::-;;:95;;;;25983:45;25984:25;:19;;25929:33;25805:34;25539:15;25490:95;25628:28;;:8;:28;;:::i;:::-;:59;;25675:12;;;:::i;:::-;25628:59;:::i;:::-;;;:::i;:::-;;:137;;;;25706:28;;:8;:28;;:::i;:::-;25628:137;25805:34;;:::i;:::-;25947:15;;;:::i;:::-;25929:33;;:::i;:::-;25984:8;:19;;:::i;:::-;:25;26006:3;25984:25;:::i;:::-;;;:::i;:::-;26013:15;;;:::i;:::-;25983:45;;:::i;:::-;25928:101;;:::i;:::-;25927:109;26033:3;25927:109;:::i;:::-;;;:::i;:::-;26362:8;26240:144;;:::i;:::-;25383:1206;;;;;25628:137;25753:12;;;:::i;:::-;25628:137;;25490:95;25983:45;25984:25;:19;;25929:33;25805:34;25573:12;;;:::i;:::-;25490:95;;25387:63;25437:8;;:13;;25449:1;25437:13;:::i;:::-;;;:::i;:::-;;;25387:63;;1189:26442;;;;:::i;:::-;;:::o;5923:608::-;5962:280;;;;;;;;;6255:15;:31;;6274:12;;;:::i;:::-;6255:31;:::i;:::-;;;:::i;:::-;;;6251:98;;6502:22;6487:37;6359:5;6418:7;6359:5;;;:::i;:::-;6390:10;6403:13;6411:4;6403:13;:::i;:::-;6418:7;;;;:::i;:::-;6436:41;;6452:25;:7;6462:15;;;:::i;:::-;6452:25;;:::i;:::-;6436:41;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;6502:12;;;:::i;:::-;:22;:::i;:::-;6487:37;;:::i;:::-;5923:608::o;6251:98::-;6309:29;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;20677:98;20727:7;;:::i;:::-;20753:15;;;;:::i;:::-;20746:22;:::o;11820:2060::-;;11879:364;;;;;;;;;;;;12252:40;12276:16;:7;12284;12276:16;;:::i;:::-;;12252:40;:::i;:::-;12293:102;;;12404:52;12428:28;:16;:7;12436;12428:16;;:::i;:::-;12445:10;12428:28;;:::i;:::-;12404:52;:::i;:::-;12457:102;;;12580:7;;;:::i;:::-;12603:15;;:8;:15;;:::i;:::-;:19;;12621:1;12603:19;:::i;:::-;;;:::i;:::-;;12599:335;;11820:2060;13685:19;12944:8;13523:135;13545:113;12944:8;13051:7;12944:16;;13685:19;12944:8;:16;;:::i;:::-;12999:10;13024:13;13032:4;13024:13;:::i;:::-;13051:7;;;;:::i;:::-;13078:57;13103:32;:22;;:8;:22;;:::i;:::-;13128:7;13103:32;;:::i;:::-;13078:22;:8;:22;:57;:::i;:::-;13162:22;;:8;:22;;:::i;:::-;13185:116;;13311:43;13329:25;:15;;:8;:15;;:::i;:::-;13347:7;13329:25;;:::i;:::-;13311:15;:8;:15;:43;:::i;:::-;13381:15;;:8;:15;;:::i;:::-;13397:116;;13623:25;;13594:15;;:8;:15;;:::i;:::-;13623:8;:25;;:::i;:::-;13545:113;;:::i;:::-;13523:8;;:19;:135;:::i;:::-;13685:19;;:::i;:::-;13705:116;;13844:10;13856:7;13865;13836:37;;;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;:::i;:::-;;;;11820:2060::o;12599:335::-;12663:163;12717:15;;:8;:15;;:::i;:::-;12750:25;;:8;:25;;:::i;:::-;12793:19;;:8;:19;;:::i;:::-;12663:163;;:::i;:::-;12841:5;:14;:5;;;:::i;:::-;:14;:::i;:::-;;:42;:14;12856:10;;12868:14;12841:42;;12868:14;12841:42;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;13685:19;12841:42;12898:25;;13545:113;12841:42;13685:19;12841:42;13523:135;12841:42;;;12599:335;12909:14;12898:25;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;12599:335;;;;;;;;12841:42;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;:::i;20873:95::-;20923:7;;:::i;:::-;20949:12;;;;:::i;:::-;20942:19;:::o;1189:26442::-;;;;;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;3883:178::-;;;3927:52;;:40;:12;;;:::i;:::-;:40;:::i;:::-;;3968:10;3927:52;3968:10;3927:52;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;3926:53;3927:52;;;;;3883:178;3926:53;;;:::i;:::-;3922:122;;4053:1;;;:::i;:::-;3883:178::o;3922:122::-;4002:31;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;3927:52;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;1189:26442::-;;:::o;:::-;;;;;;;:::o;:::-;;;:::o;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;:::o;:::-;;:::o;:::-;;;;;;;;:::i;:::-;;:::i;:::-;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;:::o;:::-;;:::i;19783:806::-;19938:47;19783:806;19962:16;:23;19783:806;19962:7;:16;:::i;:::-;:23;:::i;:::-;19938:47;:::i;:::-;19986:102;;;20143:25;;:8;:25;;:::i;:::-;:43;;20171:15;20143:43;:::i;:::-;;;:::i;:::-;;20139:114;;20541:24;:29;20290:17;20262:45;20541:41;20290:17;20262:25;:8;:25;:45;:::i;:::-;20334:25;;:8;:25;;:::i;:::-;20360:116;;20541:24;:29;:::i;:::-;20571:10;20541:41;;:::i;:::-;19783:806::o;20139:114::-;20209:33;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;19783:806;;;;;;:::i;:::-;:::o;22774:666::-;23252:47;23276:23;23418:15;22774:666;23276:16;23418:15;22774:666;22871:7;;:::i;:::-;22881:362;;;;;;;;;;;;;23276:7;:16;:::i;:::-;:23;:::i;:::-;23252:47;:::i;:::-;23300:102;;;23418:15;;:::i;:::-;23411:22;:::o;5311:330:4:-;5637:1;5311:330;5147:8;5355:281;;;;;;;;5637:1;:::i;:::-;5311:330::o;3231:62::-;3285:1;3231:62;;;:::i;:::-;3285:1;:::i;:::-;3231:62::o;5072:239::-;5180:8;:22;;5192:10;5200:1;5192:10;:::i;:::-;5180:22;:::i;:::-;;;:::i;:::-;;5176:91;;5295:8;;;:::i;:::-;5072:239::o;5176:91::-;5225:31;5245:10;5253:1;5245:10;:::i;:::-;5225:31;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;5072:239;;;;:::i;:::-;:::o;1189:26442:1:-;;;;:::i;:::-;;:::o;:::-;;;:::o;:::-;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;:::o;:::-;;;:::i;:::-;;:::o;:::-;;;:::o;:::-;;;;;;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;:::o;:::-;;;;:::i;:::-;;:::o;23537:667::-;24024:46;23537:667;24047:16;:23;23537:667;23639:11;;:::i;:::-;23653:362;;;;;;;;;;;;;24047:7;:16;:::i;:::-;:23;:::i;:::-;24024:46;:::i;:::-;24071:102;;;24182:15;:::o;1189:26442::-;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;:::o;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;;;;:::o;:::-;;:::i;21574:1074::-;;;;21696:16;;:::i;:::-;21714;;;:::i;:::-;21784:5;21770:27;21784:12;:5;:12;:::i;:::-;21770:27;:::i;:::-;21798:102;;;;21937:27;21951:12;:5;:12;:::i;:::-;21937:27;:::i;:::-;21965:102;;;;22130:10;22139:1;22130:10;:::i;:::-;22160:3;22142:1;:16;;22146:12;:5;:12;:::i;:::-;22142:16;:::i;:::-;;;:::i;:::-;;;;;22160:3;22206:6;22179:44;22193:30;22206:6;22214:8;;:5;22220:1;22214:8;;:::i;:::-;;:::i;:::-;22193:30;;:::i;:::-;22179:44;:8;22188:1;;22179:44;;;:::i;:::-;;:::i;:::-;22250:11;;:8;22259:1;22250:11;;:::i;:::-;;:::i;:::-;22262:116;;22391:48;22405:34;22422:6;22430:8;;:5;22436:1;22430:8;;:::i;:::-;;:::i;:::-;22405:34;;:::i;:::-;22391:48;:8;22400:1;;22391:48;;;:::i;:::-;;:::i;:::-;22466:11;;:8;22475:1;22466:11;;:::i;:::-;;:::i;:::-;22478:116;;22160:3;:::i;:::-;22130:10;;22142:16;;;;;22614:27;;:::o;3884:358:4:-;3930:196;;;;;;4139:7;;:::i;:::-;:23;;4150:12;;:::i;:::-;4139:23;:::i;:::-;;;:::i;:::-;;4135:101;;3884:358::o;4135:101::-;4185:40;4212:12;;:::i;:::-;4185:40;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;1189:26442:1;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;91:690:0:-;725:27;724:50;91:690;;724:36;91:690;236:7;;:::i;:::-;246:462;;;;;;;;;;;;;;;;725:27;:::i;:::-;724:36;756:4;724:36;:::i;:::-;;;:::i;:::-;:50;:::i;:::-;717:57;:::o;787:729::-;1473:36;787:729;1474:27;787:729;902:7;;:::i;:::-;912:374;;;;;;;;;;;;;1474:27;:::i;:::-;1473:36;1505:4;1473:36;:::i;:::-;;;:::i;:::-;1466:43;:::o;1189:26442:1:-;;;;:::o;:::-;7052:120;1189:26442;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;1219:599:17:-;;1767:43;;1219:599;1767:43;;1219:599;1292:439;;;;;;;;;;;;;;;1782:14;1767:43;1782:14;1799:2;1803:5;1767:43;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;:::i;:::-;1219:599::o;1189:26442:1:-;;;;:::i;:::-;;:::o;5553:508:6:-;5599:196;;;;;;5821:13;5829:4;5821:13;:::i;:::-;:23;;5838:6;5821:23;:::i;:::-;;;:::i;:::-;;:120;;;;5553:508;5804:251;;5553:508::o;5804:251::-;6015:29;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;5821:120;5899:32;;;:::i;:::-;:42;;5935:6;5899:42;:::i;:::-;;;:::i;:::-;;;5821:120;;5520:347:1;5863:1;5520:347;5490:17;5572:290;;;;;;;;5863:1;:::i;:::-;5520:347::o;3231:62:4:-;;;;:::i;:::-;:::o;5390:130:1:-;;;;:::i;:::-;:::o;1189:26442::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;7399:909:6:-;;;7485:371;;;;;;;;;;;;7869:52;;:50;:36;7887:17;7869:36;:::i;:::-;:50;:::i;:::-;;:52;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;7399:909;7865:437;;;;;;;;;;;;;;7399:909::o;7865:437::-;8231:60;8273:17;8231:60;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;7865:437;7963:4;;:40;;7971:32;;:::i;:::-;7963:40;:::i;:::-;;;:::i;:::-;;7959:120;;8141:4;8122:17;;;8141:4;:::i;:::-;7865:437;;7959:120;8030:34;8059:4;8030:34;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;7869:52;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;1522:860:0;2258:117;1522:860;2293:44;2292:83;1522:860;1715:7;;:::i;:::-;1725:505;;;;;;;;;;;;;;;;2293:37;:44;2333:4;2293:44;:::i;:::-;;;:::i;:::-;2292:83;:::i;:::-;2258:117;;:::i;:::-;2239:136;:::o;6178:409:6:-;6231:196;;;;;;6440:13;6448:4;6440:13;:::i;:::-;:23;;6457:6;6440:23;:::i;:::-;;;:::i;:::-;;6436:145;;6178:409::o;6436:145::-;6541:29;;:::i;:::-;6015;;;6541;;;;;;;;:::i;:::-;;;;1189:26442:1;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;5795:891:4:-;5859:281;;;;;;;;;6176:20;;:::i;:::-;6197:102;;;6500:8;;6327;:1;;:8;;:::i;:::-;6336:109;;;;6454:19;6465:8;6454:1;;:8;:19;:::i;:::-;6500:8;;:::i;:::-;6509:116;;6670:8;6639:40;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;;5795:891::o;1192:355::-;1271:196;;;;;;1476:65;1192:355;:::o;10902:366:5:-;10993:196;;;;;;11198:64;10902:366;:::o;2198:338:4:-;2532:1;2198:338;2113:12;2246:285;;;;;;;;2532:1;:::i;:::-;2198:338::o;8172:76:5:-;8240:1;8172:76;;;:::i;:::-;8240:1;:::i;:::-;8172:76::o;2043:155:4:-;2178:12;2043:155;2178:12;:::i;:::-;2043:155::o;:::-;;;;:::i;:::-;:::o;3053:229:6:-;3081:196;;;;;;3278:1;;:::i;:::-;3053:229::o;8172:76:5:-;;;:::i;:::-;:::o;2970:83:6:-;;;:::i;:::-;:::o;1189:26442:1:-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;:::o;2057:708:17:-;2704:53;2057:708;2704:53;;2057:708;;2704:53;2057:708;2148:520;;;;;;;;;;;;;;;;;;2719:18;2704:53;2719:18;2740:4;2746:2;2750:5;2704:53;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;:::i;:::-;2057:708::o;1377:292:7:-;1430:7;;:::i;:::-;1440:196;;;;;;;1652:10;1645:17;:::o;13488:1302:17:-;;14207:421;;13488:1302;13559:359;;;;;;;;;;;;13927:18;;:::i;:::-;13946:111;;14066:19;;:::i;:::-;14086:112;;14207:421;;;;;;;;;;;;;;;14642:10;:15;;14656:1;14642:15;:::i;:::-;;;:::i;:::-;;:68;;;;14668:5;14660:14;14668:5;14660:14;:::i;:::-;:26;:31;;14690:1;14660:31;:::i;:::-;;;:::i;:::-;;14642:68;14638:146;;13488:1302;:::o;14638:146::-;14758:14;14733:40;14766:5;14758:14;:::i;:::-;14733:40;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;14642:68;14694:16;;14709:1;14694:16;:::i;:::-;;;:::i;:::-;;;14642:68;;14207:421;;;;;;;;;;1441:334:14;1493:7;;:::i;:::-;1503:196;;;;;;;1715:53;;:47;1742:19;;:::i;:::-;1715:47;:::i;:::-;:53;;:::i;:::-;1708:60;:::o;1189:26442:1:-;;;:::o;2750:715:14:-;;2832:371;;;;;;;;;;;;3231:17;;;:::i;:::-;3282;3264:36;;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;;3315:11;:4;:11;:::i;:::-;:15;;3329:1;3315:15;:::i;:::-;;;:::i;:::-;;3311:148;;;;3346:53;3375:17;3346:53;:::i;:::-;;3311:148;2750:715::o;3311:148::-;;;;;:::i;:::-;;;8363:337:5;8416:196;;;;;;8625:18;8626:17;;:::i;:::-;8625:18;;:::i;:::-;8621:73;;8363:337::o;8621:73::-;8666:17;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;2805:338:4;3139:1;2805:338;2622:12;2853:285;;;;;;;;3139:1;:::i;:::-;2805:338::o;8172:76:5:-;8240:1;8172:76;;;:::i;:::-;8240:1;:::i;:::-;8172:76::o;2542:263:4:-;2666:12;:26;;2682:10;2690:1;2682:10;:::i;:::-;2666:26;:::i;:::-;;;:::i;:::-;;2662:95;;2785:12;;;:::i;:::-;2542:263::o;2662:95::-;2715:31;2735:10;2743:1;2735:10;:::i;:::-;2715:31;;:::i;:::-;5225;;;;;;2715;;;;;;:::i;:::-;;;;2542:263;;;;:::i;:::-;:::o;1899:440:23:-;1984:277;;;;;;;;;1899:440;:::o;1867:571:14:-;1931:290;;;;;;;;;2234:17;:29;:34;;2267:1;2234:34;:::i;:::-;;;:::i;:::-;;2230:119;;2358:73;2414:17;2358:53;:47;2385:19;;:::i;:::-;2358:47;:::i;:::-;:53;:73;:::i;:::-;1867:571::o;2230:119::-;2291:47;2320:17;2291:47;;:::i;:::-;8231:60:6;;;;;;2291:47:14;;;;;;:::i;:::-;;;;8690:318;8727:196;;;;;;8936:9;:13;;8948:1;8936:13;:::i;:::-;;;:::i;:::-;;8932:70;;8690:318::o;8932:70::-;8972:19;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;1189:26442:1;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;5749:715:18;6258:25;5749:715;6402:55;5749:715;5832:12;;:::i;:::-;5847:360;;;;;;;;;;;;;6258:6;6278:4;6258:25;;;;;;;;;;;:::i;:::-;6284:102;;;;6437:7;6446:10;6402:55;;:::i;:::-;6395:62;:::o;1189:26442:1:-;;;:::o;10456:316:5:-;10506:4;;:::i;:::-;10513:196;;;;;;;10725:40;;:26;;:::i;:::-;:40;;:::i;:::-;10718:47;:::o;6732:1032:18:-;;7354:8;6732:1032;6876:12;;:::i;:::-;6891:450;;;;;;;;;;;;;;;;7354:8;;:::i;:::-;7350:408;;;;7386:10;;:::i;7350:408::-;7602:17;:10;:17;:::i;:::-;:22;;7623:1;7602:22;:::i;:::-;;;:::i;:::-;;:49;;;7350:408;7598:119;;7737:10;7730:17;:::o;7598:119::-;7678:24;7695:6;7678:24;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;7602:49;7628:6;;:18;:23;;7650:1;7628:23;:::i;:::-;;;:::i;:::-;;7602:49;;8671:770;8727:283;;;;;;;;;9085:17;:10;:17;:::i;:::-;:21;;9105:1;9085:21;:::i;:::-;;;:::i;:::-;;9081:354;;;;9210:158;;;;;;9081:354;9405:19;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;",
                "storageLayout": {
                    "storage": [
                        {
                            "astId": 58,
                            "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_31_44_283/.certora_sources/src/StakingMining.sol:StakingMining",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "20",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "contractName": "IERC20",
                                "type": "Contract"
                            },
                            "label": "erc20",
                            "offset": 0,
                            "slot": "0",
                            "type": "t_contract(IERC20)2544"
                        },
                        {
                            "astId": 60,
                            "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_31_44_283/.certora_sources/src/StakingMining.sol:StakingMining",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint256",
                                "type": "Primitive"
                            },
                            "label": "rewardPerSecond",
                            "offset": 0,
                            "slot": "1",
                            "type": "t_uint256"
                        },
                        {
                            "astId": 62,
                            "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_31_44_283/.certora_sources/src/StakingMining.sol:StakingMining",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint256",
                                "type": "Primitive"
                            },
                            "label": "startTimestamp",
                            "offset": 0,
                            "slot": "2",
                            "type": "t_uint256"
                        },
                        {
                            "astId": 64,
                            "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_31_44_283/.certora_sources/src/StakingMining.sol:StakingMining",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint256",
                                "type": "Primitive"
                            },
                            "label": "endTimestamp",
                            "offset": 0,
                            "slot": "3",
                            "type": "t_uint256"
                        },
                        {
                            "astId": 67,
                            "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_31_44_283/.certora_sources/src/StakingMining.sol:StakingMining",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "20",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "contractName": "SalesFactory",
                                "type": "Contract"
                            },
                            "label": "salesFactory",
                            "offset": 0,
                            "slot": "4",
                            "type": "t_contract(SalesFactory)1719"
                        },
                        {
                            "astId": 69,
                            "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_31_44_283/.certora_sources/src/StakingMining.sol:StakingMining",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint256",
                                "type": "Primitive"
                            },
                            "label": "paidOut",
                            "offset": 0,
                            "slot": "5",
                            "type": "t_uint256"
                        },
                        {
                            "astId": 71,
                            "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_31_44_283/.certora_sources/src/StakingMining.sol:StakingMining",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint256",
                                "type": "Primitive"
                            },
                            "label": "totalRewards",
                            "offset": 0,
                            "slot": "6",
                            "type": "t_uint256"
                        },
                        {
                            "astId": 75,
                            "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_31_44_283/.certora_sources/src/StakingMining.sol:StakingMining",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "dynamicArrayBaseType": {
                                    "annotations": [
                                        {
                                            "numberOfBytes": "160",
                                            "type": "StorageAnnotation"
                                        }
                                    ],
                                    "astId": 55,
                                    "canonicalId": "src/StakingMining.sol|StakingMining.Pool",
                                    "containingContract": "StakingMining",
                                    "structMembers": [
                                        {
                                            "name": "lpToken",
                                            "type": {
                                                "annotations": [
                                                    {
                                                        "numberOfBytes": "20",
                                                        "offset": 0,
                                                        "slot": "0",
                                                        "type": "StorageAnnotation"
                                                    }
                                                ],
                                                "contractName": "IERC20",
                                                "type": "Contract"
                                            }
                                        },
                                        {
                                            "name": "allocPoint",
                                            "type": {
                                                "annotations": [
                                                    {
                                                        "numberOfBytes": "32",
                                                        "offset": 0,
                                                        "slot": "1",
                                                        "type": "StorageAnnotation"
                                                    }
                                                ],
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "lastRewardTimestamp",
                                            "type": {
                                                "annotations": [
                                                    {
                                                        "numberOfBytes": "32",
                                                        "offset": 0,
                                                        "slot": "2",
                                                        "type": "StorageAnnotation"
                                                    }
                                                ],
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "accERC20PerShare",
                                            "type": {
                                                "annotations": [
                                                    {
                                                        "numberOfBytes": "32",
                                                        "offset": 0,
                                                        "slot": "3",
                                                        "type": "StorageAnnotation"
                                                    }
                                                ],
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "totalDeposits",
                                            "type": {
                                                "annotations": [
                                                    {
                                                        "numberOfBytes": "32",
                                                        "offset": 0,
                                                        "slot": "4",
                                                        "type": "StorageAnnotation"
                                                    }
                                                ],
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        }
                                    ],
                                    "structName": "Pool",
                                    "type": "UserDefinedStruct"
                                },
                                "type": "Array"
                            },
                            "label": "poolArr",
                            "offset": 0,
                            "slot": "7",
                            "type": "t_array(t_struct(Pool)55_storage)dyn_storage"
                        },
                        {
                            "astId": 82,
                            "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_31_44_283/.certora_sources/src/StakingMining.sol:StakingMining",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "mappingKeyType": {
                                    "annotations": [
                                        {
                                            "numberOfBytes": "32",
                                            "type": "StorageAnnotation"
                                        }
                                    ],
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                },
                                "mappingValueType": {
                                    "annotations": [
                                        {
                                            "numberOfBytes": "32",
                                            "type": "StorageAnnotation"
                                        }
                                    ],
                                    "mappingKeyType": {
                                        "annotations": [
                                            {
                                                "numberOfBytes": "20",
                                                "type": "StorageAnnotation"
                                            }
                                        ],
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    },
                                    "mappingValueType": {
                                        "annotations": [
                                            {
                                                "numberOfBytes": "128",
                                                "type": "StorageAnnotation"
                                            }
                                        ],
                                        "astId": 43,
                                        "canonicalId": "src/StakingMining.sol|StakingMining.User",
                                        "containingContract": "StakingMining",
                                        "structMembers": [
                                            {
                                                "name": "amount",
                                                "type": {
                                                    "annotations": [
                                                        {
                                                            "numberOfBytes": "32",
                                                            "offset": 0,
                                                            "slot": "0",
                                                            "type": "StorageAnnotation"
                                                        }
                                                    ],
                                                    "primitiveName": "uint256",
                                                    "type": "Primitive"
                                                }
                                            },
                                            {
                                                "name": "rewardDebt",
                                                "type": {
                                                    "annotations": [
                                                        {
                                                            "numberOfBytes": "32",
                                                            "offset": 0,
                                                            "slot": "1",
                                                            "type": "StorageAnnotation"
                                                        }
                                                    ],
                                                    "primitiveName": "uint256",
                                                    "type": "Primitive"
                                                }
                                            },
                                            {
                                                "name": "tokensUnlockTime",
                                                "type": {
                                                    "annotations": [
                                                        {
                                                            "numberOfBytes": "32",
                                                            "offset": 0,
                                                            "slot": "2",
                                                            "type": "StorageAnnotation"
                                                        }
                                                    ],
                                                    "primitiveName": "uint256",
                                                    "type": "Primitive"
                                                }
                                            },
                                            {
                                                "name": "salesRegistered",
                                                "type": {
                                                    "annotations": [
                                                        {
                                                            "numberOfBytes": "32",
                                                            "offset": 0,
                                                            "slot": "3",
                                                            "type": "StorageAnnotation"
                                                        }
                                                    ],
                                                    "dynamicArrayBaseType": {
                                                        "annotations": [
                                                            {
                                                                "numberOfBytes": "20",
                                                                "type": "StorageAnnotation"
                                                            }
                                                        ],
                                                        "primitiveName": "address",
                                                        "type": "Primitive"
                                                    },
                                                    "type": "Array"
                                                }
                                            }
                                        ],
                                        "structName": "User",
                                        "type": "UserDefinedStruct"
                                    },
                                    "type": "Mapping"
                                },
                                "type": "Mapping"
                            },
                            "label": "userMap",
                            "offset": 0,
                            "slot": "8",
                            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(User)43_storage))"
                        },
                        {
                            "astId": 84,
                            "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_31_44_283/.certora_sources/src/StakingMining.sol:StakingMining",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint256",
                                "type": "Primitive"
                            },
                            "label": "totalAllocPoint",
                            "offset": 0,
                            "slot": "9",
                            "type": "t_uint256"
                        }
                    ],
                    "types": {
                        "t_address": {
                            "encoding": "inplace",
                            "label": "address",
                            "numberOfBytes": "20"
                        },
                        "t_array(t_address)dyn_storage": {
                            "base": "t_address",
                            "encoding": "dynamic_array",
                            "label": "address[]",
                            "numberOfBytes": "32"
                        },
                        "t_array(t_struct(Pool)55_storage)dyn_storage": {
                            "base": "t_struct(Pool)55_storage",
                            "encoding": "dynamic_array",
                            "label": "struct StakingMining.Pool[]",
                            "numberOfBytes": "32"
                        },
                        "t_contract(IERC20)2544": {
                            "encoding": "inplace",
                            "label": "contract IERC20",
                            "numberOfBytes": "20"
                        },
                        "t_contract(SalesFactory)1719": {
                            "encoding": "inplace",
                            "label": "contract SalesFactory",
                            "numberOfBytes": "20"
                        },
                        "t_mapping(t_address,t_struct(User)43_storage)": {
                            "encoding": "mapping",
                            "key": "t_address",
                            "label": "mapping(address => struct StakingMining.User)",
                            "numberOfBytes": "32",
                            "value": "t_struct(User)43_storage"
                        },
                        "t_mapping(t_uint256,t_mapping(t_address,t_struct(User)43_storage))": {
                            "encoding": "mapping",
                            "key": "t_uint256",
                            "label": "mapping(uint256 => mapping(address => struct StakingMining.User))",
                            "numberOfBytes": "32",
                            "value": "t_mapping(t_address,t_struct(User)43_storage)"
                        },
                        "t_struct(Pool)55_storage": {
                            "encoding": "inplace",
                            "label": "struct StakingMining.Pool",
                            "members": [
                                {
                                    "astId": 46,
                                    "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_31_44_283/.certora_sources/src/StakingMining.sol:StakingMining",
                                    "label": "lpToken",
                                    "offset": 0,
                                    "slot": "0",
                                    "type": "t_contract(IERC20)2544"
                                },
                                {
                                    "astId": 48,
                                    "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_31_44_283/.certora_sources/src/StakingMining.sol:StakingMining",
                                    "label": "allocPoint",
                                    "offset": 0,
                                    "slot": "1",
                                    "type": "t_uint256"
                                },
                                {
                                    "astId": 50,
                                    "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_31_44_283/.certora_sources/src/StakingMining.sol:StakingMining",
                                    "label": "lastRewardTimestamp",
                                    "offset": 0,
                                    "slot": "2",
                                    "type": "t_uint256"
                                },
                                {
                                    "astId": 52,
                                    "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_31_44_283/.certora_sources/src/StakingMining.sol:StakingMining",
                                    "label": "accERC20PerShare",
                                    "offset": 0,
                                    "slot": "3",
                                    "type": "t_uint256"
                                },
                                {
                                    "astId": 54,
                                    "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_31_44_283/.certora_sources/src/StakingMining.sol:StakingMining",
                                    "label": "totalDeposits",
                                    "offset": 0,
                                    "slot": "4",
                                    "type": "t_uint256"
                                }
                            ],
                            "numberOfBytes": "160"
                        },
                        "t_struct(User)43_storage": {
                            "encoding": "inplace",
                            "label": "struct StakingMining.User",
                            "members": [
                                {
                                    "astId": 35,
                                    "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_31_44_283/.certora_sources/src/StakingMining.sol:StakingMining",
                                    "label": "amount",
                                    "offset": 0,
                                    "slot": "0",
                                    "type": "t_uint256"
                                },
                                {
                                    "astId": 37,
                                    "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_31_44_283/.certora_sources/src/StakingMining.sol:StakingMining",
                                    "label": "rewardDebt",
                                    "offset": 0,
                                    "slot": "1",
                                    "type": "t_uint256"
                                },
                                {
                                    "astId": 39,
                                    "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_31_44_283/.certora_sources/src/StakingMining.sol:StakingMining",
                                    "label": "tokensUnlockTime",
                                    "offset": 0,
                                    "slot": "2",
                                    "type": "t_uint256"
                                },
                                {
                                    "astId": 42,
                                    "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_31_44_283/.certora_sources/src/StakingMining.sol:StakingMining",
                                    "label": "salesRegistered",
                                    "offset": 0,
                                    "slot": "3",
                                    "type": "t_array(t_address)dyn_storage"
                                }
                            ],
                            "numberOfBytes": "128"
                        },
                        "t_uint256": {
                            "encoding": "inplace",
                            "label": "uint256",
                            "numberOfBytes": "32"
                        }
                    }
                },
                "transientStorageLayout": null,
                "varmap": ""
            }
        ],
        "legacyStructLinking": {},
        "library_addresses": [],
        "origSourceDir": ".pre_autofinders.1",
        "primary_contract": "StakingMining",
        "primary_contract_address": "00000000ce4604a000000000000000000000003d",
        "prototypeFor": [],
        "sdc_name": "StakingMining.sol_1",
        "sourceDir": ".post_autofinders.1",
        "srclist": {
            "0": "src/LibCalReward.sol",
            "1": "src/StakingMining.sol",
            "2": "src/sale/IceFrogSale.sol",
            "3": "src/sale/SalesFactory.sol",
            "4": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
            "5": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
            "6": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
            "7": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
            "8": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol",
            "9": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol",
            "10": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol",
            "11": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol",
            "12": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol",
            "13": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
            "14": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
            "15": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
            "16": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
            "17": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
            "18": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol",
            "19": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Context.sol",
            "20": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Errors.sol",
            "21": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Panic.sol",
            "22": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol",
            "23": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
            "24": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
            "25": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
            "26": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol",
            "27": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
            "28": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
            "29": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol",
            "30": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol"
        },
        "state": {},
        "structLinkingInfo": {}
    }
}