{
    "GasBadStakingMining_00000000ce4604a0000000000000000000000014": {
        "contracts": [
            {
                "address": "00000000ce4604a0000000000000000000000014",
                "allMethods": [
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "UPGRADE_INTERFACE_VERSION",
                        "notpayable": true,
                        "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            }
                        ],
                        "sighash": "ad3cb1cc",
                        "sourceBytes": {
                            "begin": 1819,
                            "size": 58
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "_authorizeUpgrade",
                        "notpayable": true,
                        "originalFile": null,
                        "paramNames": [
                            "newImplementation"
                        ],
                        "returns": [],
                        "sighash": "0",
                        "sourceBytes": null,
                        "stateMutability": "nonpayable",
                        "visibility": "internal"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "contractName": "IERC20",
                                    "type": "Contract"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "add",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [
                            "_allocPoint",
                            "_lpToken",
                            "_withUpdate"
                        ],
                        "returns": [],
                        "sighash": "1eaaa045",
                        "sourceBytes": {
                            "begin": 4838,
                            "size": 652
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "compound",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [
                            "_poolId"
                        ],
                        "returns": [],
                        "sighash": "aa5f7e26",
                        "sourceBytes": {
                            "begin": 11406,
                            "size": 1520
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "constructor",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [],
                        "returns": [],
                        "sighash": "0",
                        "sourceBytes": {
                            "begin": 3668,
                            "size": 53
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "deposit",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [
                            "_poolId",
                            "_amount"
                        ],
                        "returns": [],
                        "sighash": "e2bbb158",
                        "sourceBytes": {
                            "begin": 7201,
                            "size": 1424
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "emergencyWithdraw",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [
                            "_poolId"
                        ],
                        "returns": [],
                        "sighash": "5312ea8e",
                        "sourceBytes": {
                            "begin": 10180,
                            "size": 1220
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "fund",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [
                            "_amount"
                        ],
                        "returns": [],
                        "sighash": "ca1d209d",
                        "sourceBytes": {
                            "begin": 4352,
                            "size": 328
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "getDeposited",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [
                            "_poolId",
                            "_user"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "e86facc5",
                        "sourceBytes": {
                            "begin": 15383,
                            "size": 202
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getEndTimestamp",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "74e94deb",
                        "sourceBytes": {
                            "begin": 14349,
                            "size": 95
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getPaidOut",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "b3458b4b",
                        "sourceBytes": {
                            "begin": 15591,
                            "size": 85
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "dynamicArrayBaseType": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    },
                                    "type": "Array"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "getPendingAndDepositedForUsers",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [
                            "users",
                            "poolId"
                        ],
                        "returns": [
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "dynamicArrayBaseType": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    },
                                    "type": "Array"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "dynamicArrayBaseType": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    },
                                    "type": "Array"
                                }
                            }
                        ],
                        "sighash": "fcfc1b14",
                        "sourceBytes": {
                            "begin": 14695,
                            "size": 562
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "getPendingReward",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [
                            "_poolId",
                            "_user"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "c59b1f3c",
                        "sourceBytes": {
                            "begin": 15929,
                            "size": 1761
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "getPoolInfo",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [
                            "poolId"
                        ],
                        "returns": [
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "astId": 55,
                                    "canonicalId": "src/GasBadStakingMining.sol|GasBadStakingMining.Pool",
                                    "containingContract": "GasBadStakingMining",
                                    "structMembers": [
                                        {
                                            "name": "lpToken",
                                            "type": {
                                                "contractName": "IERC20",
                                                "type": "Contract"
                                            }
                                        },
                                        {
                                            "name": "allocPoint",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "lastRewardTimestamp",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "accERC20PerShare",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "totalDeposits",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        }
                                    ],
                                    "structName": "Pool",
                                    "type": "UserDefinedStruct"
                                }
                            }
                        ],
                        "sighash": "2f380b35",
                        "sourceBytes": {
                            "begin": 14577,
                            "size": 112
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getPoolNum",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "212af18d",
                        "sourceBytes": {
                            "begin": 15285,
                            "size": 92
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getRewardPerSec",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "e0d41c02",
                        "sourceBytes": {
                            "begin": 13798,
                            "size": 98
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getRewardToken",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "contractName": "IERC20",
                                    "type": "Contract"
                                }
                            }
                        ],
                        "sighash": "69940d79",
                        "sourceBytes": {
                            "begin": 13902,
                            "size": 86
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getStakingMiningDuration",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "a242057a",
                        "sourceBytes": {
                            "begin": 14450,
                            "size": 121
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getStartTimestamp",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "1f89f25e",
                        "sourceBytes": {
                            "begin": 14244,
                            "size": 99
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getTotalAllocPoint",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "3a58b91a",
                        "sourceBytes": {
                            "begin": 14095,
                            "size": 101
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getTotalPending",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "3bd05400",
                        "sourceBytes": {
                            "begin": 17746,
                            "size": 427
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getTotalRewards",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "e627f2db",
                        "sourceBytes": {
                            "begin": 13994,
                            "size": 95
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "getUserInfoInPool",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [
                            "_poolId",
                            "_user"
                        ],
                        "returns": [
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "astId": 43,
                                    "canonicalId": "src/GasBadStakingMining.sol|GasBadStakingMining.User",
                                    "containingContract": "GasBadStakingMining",
                                    "structMembers": [
                                        {
                                            "name": "amount",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "rewardDebt",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "tokensUnlockTime",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "salesRegistered",
                                            "type": {
                                                "dynamicArrayBaseType": {
                                                    "primitiveName": "address",
                                                    "type": "Primitive"
                                                },
                                                "type": "Array"
                                            }
                                        }
                                    ],
                                    "structName": "User",
                                    "type": "UserDefinedStruct"
                                }
                            }
                        ],
                        "sighash": "f70fd81c",
                        "sourceBytes": {
                            "begin": 15682,
                            "size": 203
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "contractName": "IERC20",
                                    "type": "Contract"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "initialize",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [
                            "_erc20",
                            "_rewardPerSecond",
                            "_startTimestamp",
                            "_salesFactory"
                        ],
                        "returns": [],
                        "sighash": "9e3d87cd",
                        "sourceBytes": {
                            "begin": 3747,
                            "size": 445
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "massUpdatePools",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [],
                        "returns": [],
                        "sighash": "630b5ba1",
                        "sourceBytes": {
                            "begin": 5987,
                            "size": 186
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "owner",
                        "notpayable": true,
                        "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "8da5cb5b",
                        "sourceBytes": {
                            "begin": 2441,
                            "size": 144
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "proxiableUUID",
                        "notpayable": true,
                        "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "bytes32",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "52d1902d",
                        "sourceBytes": {
                            "begin": 3708,
                            "size": 134
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "renounceOwnership",
                        "notpayable": true,
                        "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
                        "paramNames": [],
                        "returns": [],
                        "sighash": "715018a6",
                        "sourceBytes": {
                            "begin": 3155,
                            "size": 101
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "set",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [
                            "_poolId",
                            "_allocPoint",
                            "_withUpdate"
                        ],
                        "returns": [],
                        "sighash": "64482f79",
                        "sourceBytes": {
                            "begin": 5536,
                            "size": 366
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setSalesFactory",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [
                            "_salesFactory"
                        ],
                        "returns": [],
                        "sighash": "3dfcb861",
                        "sourceBytes": {
                            "begin": 12932,
                            "size": 236
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setTokensUnlockTime",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [
                            "_poolId",
                            "_user",
                            "_tokensUnlockTime"
                        ],
                        "returns": [],
                        "sighash": "e6f04acc",
                        "sourceBytes": {
                            "begin": 13174,
                            "size": 536
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "transferOwnership",
                        "notpayable": true,
                        "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
                        "paramNames": [
                            "newOwner"
                        ],
                        "returns": [],
                        "sighash": "f2fde38b",
                        "sourceBytes": {
                            "begin": 3405,
                            "size": 215
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "updatePool",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [
                            "_pid"
                        ],
                        "returns": [],
                        "sighash": "51eb05a6",
                        "sourceBytes": {
                            "begin": 6232,
                            "size": 929
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "PackedBytes"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "upgradeToAndCall",
                        "notpayable": false,
                        "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
                        "paramNames": [
                            "newImplementation",
                            "data"
                        ],
                        "returns": [],
                        "sighash": "4f1ef286",
                        "sourceBytes": {
                            "begin": 4161,
                            "size": 214
                        },
                        "stateMutability": "payable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "version",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "54fd4d50",
                        "sourceBytes": {
                            "begin": 13716,
                            "size": 76
                        },
                        "stateMutability": "pure",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "withdraw",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [
                            "_poolId",
                            "_amount"
                        ],
                        "returns": [],
                        "sighash": "441a3e70",
                        "sourceBytes": {
                            "begin": 8721,
                            "size": 1418
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    }
                ],
                "bytecode": "",
                "compilerName": "solc",
                "compilerParameters": {
                    "optimizerOn": false,
                    "optimizerRuns": null,
                    "type": "SolcParameters",
                    "viaIR": true
                },
                "compilerVersion": "0.8.24",
                "constructorBytecode": "",
                "constructorSrcmap": "719:28844:0:-:0;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;3668:53;;;:::i;:::-;;;:::i;:::-;:::o;719:28844::-;;;;;;;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;986:7318:7:-;1163:13;1171:4;1163:13;:::i;:::-;;;986:7318::o;719:28844:0:-;;;;:::o;:::-;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;;;;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;9186:720:6:-;9236:196;;;;;;;;9530:26;;:::i;:::-;9557:102;;;;9673:15;;:1;:15;;:::i;:::-;9669:76;;9758:14;;:1;:14;;:::i;:::-;:34;;719:28844:0;;;;;9758:34:6;:::i;:::-;;;:::i;:::-;;9754:146;;9186:720;;:::o;9754:146::-;9808:33;719:28844:0;9808:14:6;719:28844:0;;;;;9808:1:6;:14;:33;:::i;:::-;719:28844:0;;;;;9860:29:6;;;;;:::i;:::-;;;;;;:::i;:::-;;;;9754:146;;;9669:76;9711:23;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;10902:366;10993:196;;;;;;;;11198:64;10902:366;:::o",
                "extensionContracts": [],
                "file": "src/GasBadStakingMining.sol",
                "immutables": [
                    {
                        "length": 32,
                        "offset": 17872,
                        "type": {
                            "location": "stack",
                            "typeDesc": {
                                "primitiveName": "address",
                                "type": "Primitive"
                            }
                        },
                        "varname": "__self"
                    },
                    {
                        "length": 32,
                        "offset": 17980,
                        "type": {
                            "location": "stack",
                            "typeDesc": {
                                "primitiveName": "address",
                                "type": "Primitive"
                            }
                        },
                        "varname": "__self"
                    },
                    {
                        "length": 32,
                        "offset": 19026,
                        "type": {
                            "location": "stack",
                            "typeDesc": {
                                "primitiveName": "address",
                                "type": "Primitive"
                            }
                        },
                        "varname": "__self"
                    }
                ],
                "internalFunctions": {
                    "0xf196e50000": {
                        "canonicalId": "src/GasBadStakingMining.sol|GasBadStakingMining",
                        "declaringContract": "GasBadStakingMining",
                        "method": {
                            "contractName": "GasBadStakingMining",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_authorizeUpgrade",
                            "notpayable": true,
                            "originalFile": "src/GasBadStakingMining.sol",
                            "paramNames": [
                                "newImplementation"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 4198,
                                "size": 98
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50001": {
                        "canonicalId": "src/GasBadStakingMining.sol|GasBadStakingMining",
                        "declaringContract": "GasBadStakingMining",
                        "method": {
                            "contractName": "GasBadStakingMining",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC20",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "add",
                            "notpayable": true,
                            "originalFile": "src/GasBadStakingMining.sol",
                            "paramNames": [
                                "_allocPoint",
                                "_lpToken",
                                "_withUpdate"
                            ],
                            "returns": [],
                            "sighash": "1eaaa045",
                            "sourceBytes": {
                                "begin": 4838,
                                "size": 652
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50002": {
                        "canonicalId": "src/GasBadStakingMining.sol|GasBadStakingMining",
                        "declaringContract": "GasBadStakingMining",
                        "method": {
                            "contractName": "GasBadStakingMining",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "getDeposited",
                            "notpayable": true,
                            "originalFile": "src/GasBadStakingMining.sol",
                            "paramNames": [
                                "_poolId",
                                "_user"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "e86facc5",
                            "sourceBytes": {
                                "begin": 15383,
                                "size": 202
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50003": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol|GasBadStakingMining",
                        "declaringContract": "GasBadStakingMining",
                        "method": {
                            "contractName": "GasBadStakingMining",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "upgradeToAndCall",
                            "notpayable": false,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
                            "paramNames": [
                                "newImplementation",
                                "data"
                            ],
                            "returns": [],
                            "sighash": "4f1ef286",
                            "sourceBytes": {
                                "begin": 4161,
                                "size": 214
                            },
                            "stateMutability": "payable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50004": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol|GasBadStakingMining",
                        "declaringContract": "GasBadStakingMining",
                        "method": {
                            "contractName": "GasBadStakingMining",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "transferOwnership",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
                            "paramNames": [
                                "newOwner"
                            ],
                            "returns": [],
                            "sighash": "f2fde38b",
                            "sourceBytes": {
                                "begin": 3405,
                                "size": 215
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50005": {
                        "canonicalId": "src/GasBadStakingMining.sol|GasBadStakingMining",
                        "declaringContract": "GasBadStakingMining",
                        "method": {
                            "contractName": "GasBadStakingMining",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC20",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "initialize",
                            "notpayable": true,
                            "originalFile": "src/GasBadStakingMining.sol",
                            "paramNames": [
                                "_erc20",
                                "_rewardPerSecond",
                                "_startTimestamp",
                                "_salesFactory"
                            ],
                            "returns": [],
                            "sighash": "9e3d87cd",
                            "sourceBytes": {
                                "begin": 3747,
                                "size": 445
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50006": {
                        "canonicalId": "src/GasBadStakingMining.sol|GasBadStakingMining",
                        "declaringContract": "GasBadStakingMining",
                        "method": {
                            "contractName": "GasBadStakingMining",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "emergencyWithdraw",
                            "notpayable": true,
                            "originalFile": "src/GasBadStakingMining.sol",
                            "paramNames": [
                                "_poolId"
                            ],
                            "returns": [],
                            "sighash": "5312ea8e",
                            "sourceBytes": {
                                "begin": 10180,
                                "size": 1220
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50007": {
                        "canonicalId": "src/GasBadStakingMining.sol|GasBadStakingMining",
                        "declaringContract": "GasBadStakingMining",
                        "method": {
                            "contractName": "GasBadStakingMining",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "deposit",
                            "notpayable": true,
                            "originalFile": "src/GasBadStakingMining.sol",
                            "paramNames": [
                                "_poolId",
                                "_amount"
                            ],
                            "returns": [],
                            "sighash": "e2bbb158",
                            "sourceBytes": {
                                "begin": 7201,
                                "size": 1424
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50008": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol|GasBadStakingMining",
                        "declaringContract": "GasBadStakingMining",
                        "method": {
                            "contractName": "GasBadStakingMining",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "owner",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "8da5cb5b",
                            "sourceBytes": {
                                "begin": 2441,
                                "size": 144
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50009": {
                        "canonicalId": "src/GasBadStakingMining.sol|GasBadStakingMining",
                        "declaringContract": "GasBadStakingMining",
                        "method": {
                            "contractName": "GasBadStakingMining",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "getUserInfoInPool",
                            "notpayable": true,
                            "originalFile": "src/GasBadStakingMining.sol",
                            "paramNames": [
                                "_poolId",
                                "_user"
                            ],
                            "returns": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "astId": 43,
                                        "canonicalId": "src/GasBadStakingMining.sol|GasBadStakingMining.User",
                                        "containingContract": "GasBadStakingMining",
                                        "structMembers": [
                                            {
                                                "name": "amount",
                                                "type": {
                                                    "primitiveName": "uint256",
                                                    "type": "Primitive"
                                                }
                                            },
                                            {
                                                "name": "rewardDebt",
                                                "type": {
                                                    "primitiveName": "uint256",
                                                    "type": "Primitive"
                                                }
                                            },
                                            {
                                                "name": "tokensUnlockTime",
                                                "type": {
                                                    "primitiveName": "uint256",
                                                    "type": "Primitive"
                                                }
                                            },
                                            {
                                                "name": "salesRegistered",
                                                "type": {
                                                    "dynamicArrayBaseType": {
                                                        "primitiveName": "address",
                                                        "type": "Primitive"
                                                    },
                                                    "type": "Array"
                                                }
                                            }
                                        ],
                                        "structName": "User",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "f70fd81c",
                            "sourceBytes": {
                                "begin": 15682,
                                "size": 203
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e5000a": {
                        "canonicalId": "src/GasBadStakingMining.sol|GasBadStakingMining",
                        "declaringContract": "GasBadStakingMining",
                        "method": {
                            "contractName": "GasBadStakingMining",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "fund",
                            "notpayable": true,
                            "originalFile": "src/GasBadStakingMining.sol",
                            "paramNames": [
                                "_amount"
                            ],
                            "returns": [],
                            "sighash": "ca1d209d",
                            "sourceBytes": {
                                "begin": 4352,
                                "size": 328
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e5000b": {
                        "canonicalId": "src/GasBadStakingMining.sol|GasBadStakingMining",
                        "declaringContract": "GasBadStakingMining",
                        "method": {
                            "contractName": "GasBadStakingMining",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "massUpdatePools",
                            "notpayable": true,
                            "originalFile": "src/GasBadStakingMining.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "630b5ba1",
                            "sourceBytes": {
                                "begin": 5987,
                                "size": 186
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e5000c": {
                        "canonicalId": "src/GasBadStakingMining.sol|GasBadStakingMining",
                        "declaringContract": "GasBadStakingMining",
                        "method": {
                            "contractName": "GasBadStakingMining",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "updatePool",
                            "notpayable": true,
                            "originalFile": "src/GasBadStakingMining.sol",
                            "paramNames": [
                                "_pid"
                            ],
                            "returns": [],
                            "sighash": "51eb05a6",
                            "sourceBytes": {
                                "begin": 6232,
                                "size": 929
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e5000d": {
                        "canonicalId": "src/GasBadStakingMining.sol|GasBadStakingMining",
                        "declaringContract": "GasBadStakingMining",
                        "method": {
                            "contractName": "GasBadStakingMining",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "compound",
                            "notpayable": true,
                            "originalFile": "src/GasBadStakingMining.sol",
                            "paramNames": [
                                "_poolId"
                            ],
                            "returns": [],
                            "sighash": "aa5f7e26",
                            "sourceBytes": {
                                "begin": 11406,
                                "size": 1520
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e5000e": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol|GasBadStakingMining",
                        "declaringContract": "GasBadStakingMining",
                        "method": {
                            "contractName": "GasBadStakingMining",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "renounceOwnership",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "715018a6",
                            "sourceBytes": {
                                "begin": 3155,
                                "size": 101
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e5000f": {
                        "canonicalId": "src/GasBadStakingMining.sol|GasBadStakingMining",
                        "declaringContract": "GasBadStakingMining",
                        "method": {
                            "contractName": "GasBadStakingMining",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "withdraw",
                            "notpayable": true,
                            "originalFile": "src/GasBadStakingMining.sol",
                            "paramNames": [
                                "_poolId",
                                "_amount"
                            ],
                            "returns": [],
                            "sighash": "441a3e70",
                            "sourceBytes": {
                                "begin": 8721,
                                "size": 1418
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50010": {
                        "canonicalId": "src/GasBadStakingMining.sol|GasBadStakingMining",
                        "declaringContract": "GasBadStakingMining",
                        "method": {
                            "contractName": "GasBadStakingMining",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "set",
                            "notpayable": true,
                            "originalFile": "src/GasBadStakingMining.sol",
                            "paramNames": [
                                "_poolId",
                                "_allocPoint",
                                "_withUpdate"
                            ],
                            "returns": [],
                            "sighash": "64482f79",
                            "sourceBytes": {
                                "begin": 5536,
                                "size": 366
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50011": {
                        "canonicalId": "src/GasBadStakingMining.sol|GasBadStakingMining",
                        "declaringContract": "GasBadStakingMining",
                        "method": {
                            "contractName": "GasBadStakingMining",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "getPendingReward",
                            "notpayable": true,
                            "originalFile": "src/GasBadStakingMining.sol",
                            "paramNames": [
                                "_poolId",
                                "_user"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "c59b1f3c",
                            "sourceBytes": {
                                "begin": 15929,
                                "size": 1761
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50012": {
                        "canonicalId": "src/LibCalReward.sol|CalculatingRewards",
                        "declaringContract": "CalculatingRewards",
                        "method": {
                            "contractName": "CalculatingRewards",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "getPendingRewards",
                            "notpayable": true,
                            "originalFile": "src/LibCalReward.sol",
                            "paramNames": [
                                "_amount",
                                "_accERC20PerShare",
                                "_rewardDebt"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 91,
                                "size": 228
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50013": {
                        "canonicalId": "src/LibCalReward.sol|CalculatingRewards",
                        "declaringContract": "CalculatingRewards",
                        "method": {
                            "contractName": "CalculatingRewards",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "updateRewardDebt",
                            "notpayable": true,
                            "originalFile": "src/LibCalReward.sol",
                            "paramNames": [
                                "_amount",
                                "_accERC20PerShare"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 325,
                                "size": 355
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50014": {
                        "canonicalId": "src/LibCalReward.sol|CalculatingRewards",
                        "declaringContract": "CalculatingRewards",
                        "method": {
                            "contractName": "CalculatingRewards",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "updateAccERC20PerShare",
                            "notpayable": true,
                            "originalFile": "src/LibCalReward.sol",
                            "paramNames": [
                                "oldAccERC20PerShare",
                                "totalAmountOfRewardsDuringTheDuration",
                                "amountOfStakeInThePool"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 686,
                                "size": 355
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50015": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol|SalesFactory",
                        "declaringContract": "SalesFactory",
                        "method": {
                            "contractName": "SalesFactory",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "owner",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "8da5cb5b",
                            "sourceBytes": {
                                "begin": 1638,
                                "size": 85
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50016": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol|SalesFactory",
                        "declaringContract": "SalesFactory",
                        "method": {
                            "contractName": "SalesFactory",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "transferOwnership",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol",
                            "paramNames": [
                                "newOwner"
                            ],
                            "returns": [],
                            "sighash": "f2fde38b",
                            "sourceBytes": {
                                "begin": 2543,
                                "size": 215
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50017": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol|SalesFactory",
                        "declaringContract": "SalesFactory",
                        "method": {
                            "contractName": "SalesFactory",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "renounceOwnership",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "715018a6",
                            "sourceBytes": {
                                "begin": 2293,
                                "size": 101
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50018": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol|OwnableUpgradeable",
                        "declaringContract": "OwnableUpgradeable",
                        "method": {
                            "contractName": "OwnableUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_getOwnableStorage",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 1501,
                                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol|OwnableUpgradeable.OwnableStorage",
                                        "containingContract": "OwnableUpgradeable",
                                        "structMembers": [
                                            {
                                                "name": "_owner",
                                                "type": {
                                                    "primitiveName": "address",
                                                    "type": "Primitive"
                                                }
                                            }
                                        ],
                                        "structName": "OwnableStorage",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1192,
                                "size": 159
                            },
                            "stateMutability": "pure",
                            "visibility": "private"
                        }
                    },
                    "0xf196e50019": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol|OwnableUpgradeable",
                        "declaringContract": "OwnableUpgradeable",
                        "method": {
                            "contractName": "OwnableUpgradeable",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "__Ownable_init",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
                            "paramNames": [
                                "initialOwner"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1847,
                                "size": 127
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5001a": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol|OwnableUpgradeable",
                        "declaringContract": "OwnableUpgradeable",
                        "method": {
                            "contractName": "OwnableUpgradeable",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_transferOwnership",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
                            "paramNames": [
                                "newOwner"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3774,
                                "size": 248
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5001b": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol|OwnableUpgradeable",
                        "declaringContract": "OwnableUpgradeable",
                        "method": {
                            "contractName": "OwnableUpgradeable",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "__Ownable_init_unchained",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
                            "paramNames": [
                                "initialOwner"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1980,
                                "size": 235
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5001c": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol|OwnableUpgradeable",
                        "declaringContract": "OwnableUpgradeable",
                        "method": {
                            "contractName": "OwnableUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_checkOwner",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2658,
                                "size": 162
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5001d": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol|OwnableUpgradeable",
                        "declaringContract": "OwnableUpgradeable",
                        "method": {
                            "contractName": "OwnableUpgradeable",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "transferOwnership",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
                            "paramNames": [
                                "newOwner"
                            ],
                            "returns": [],
                            "sighash": "f2fde38b",
                            "sourceBytes": {
                                "begin": 3405,
                                "size": 215
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e5001e": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol|OwnableUpgradeable",
                        "declaringContract": "OwnableUpgradeable",
                        "method": {
                            "contractName": "OwnableUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "renounceOwnership",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "715018a6",
                            "sourceBytes": {
                                "begin": 3155,
                                "size": 101
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e5001f": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol|Initializable",
                        "declaringContract": "Initializable",
                        "method": {
                            "contractName": "Initializable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_checkInitializing",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 7084,
                                "size": 141
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50020": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol|Initializable",
                        "declaringContract": "Initializable",
                        "method": {
                            "contractName": "Initializable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_disableInitializers",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 7711,
                                "size": 422
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50021": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol|Initializable",
                        "declaringContract": "Initializable",
                        "method": {
                            "contractName": "Initializable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_getInitializableStorage",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 1692,
                                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol|Initializable.InitializableStorage",
                                        "containingContract": "Initializable",
                                        "structMembers": [
                                            {
                                                "name": "_initialized",
                                                "type": {
                                                    "primitiveName": "uint64",
                                                    "type": "Primitive"
                                                }
                                            },
                                            {
                                                "name": "_initializing",
                                                "type": {
                                                    "primitiveName": "bool",
                                                    "type": "Primitive"
                                                }
                                            }
                                        ],
                                        "structName": "InitializableStorage",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 8737,
                                "size": 170
                            },
                            "stateMutability": "pure",
                            "visibility": "private"
                        }
                    },
                    "0xf196e50022": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol|Initializable",
                        "declaringContract": "Initializable",
                        "method": {
                            "contractName": "Initializable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_getInitializedVersion",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint64",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 8243,
                                "size": 128
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50023": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol|Initializable",
                        "declaringContract": "Initializable",
                        "method": {
                            "contractName": "Initializable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_isInitializing",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 8487,
                                "size": 120
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50024": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol|UUPSUpgradeable",
                        "declaringContract": "UUPSUpgradeable",
                        "method": {
                            "contractName": "UUPSUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "__UUPSUpgradeable_init",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2970,
                                "size": 67
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50025": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol|UUPSUpgradeable",
                        "declaringContract": "UUPSUpgradeable",
                        "method": {
                            "contractName": "UUPSUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "__UUPSUpgradeable_init_unchained",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3043,
                                "size": 77
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50026": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol|UUPSUpgradeable",
                        "declaringContract": "UUPSUpgradeable",
                        "method": {
                            "contractName": "UUPSUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_checkProxy",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 4578,
                                "size": 312
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50027": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol|UUPSUpgradeable",
                        "declaringContract": "UUPSUpgradeable",
                        "method": {
                            "contractName": "UUPSUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_checkNotDelegated",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 5007,
                                "size": 213
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50028": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol|UUPSUpgradeable",
                        "declaringContract": "UUPSUpgradeable",
                        "method": {
                            "contractName": "UUPSUpgradeable",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_upgradeToAndCallUUPS",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
                            "paramNames": [
                                "newImplementation",
                                "data"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 6032,
                                "size": 538
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "private"
                        }
                    },
                    "0xf196e50029": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol|UUPSUpgradeable",
                        "declaringContract": "UUPSUpgradeable",
                        "method": {
                            "contractName": "UUPSUpgradeable",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "upgradeToAndCall",
                            "notpayable": false,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
                            "paramNames": [
                                "newImplementation",
                                "data"
                            ],
                            "returns": [],
                            "sighash": "4f1ef286",
                            "sourceBytes": {
                                "begin": 4161,
                                "size": 214
                            },
                            "stateMutability": "payable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e5002a": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol|ContextUpgradeable",
                        "declaringContract": "ContextUpgradeable",
                        "method": {
                            "contractName": "ContextUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "__Context_init",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 748,
                                "size": 59
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5002b": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol|ContextUpgradeable",
                        "declaringContract": "ContextUpgradeable",
                        "method": {
                            "contractName": "ContextUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "__Context_init_unchained",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 813,
                                "size": 69
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5002c": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol|ContextUpgradeable",
                        "declaringContract": "ContextUpgradeable",
                        "method": {
                            "contractName": "ContextUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_contextSuffixLength",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1094,
                                "size": 97
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5002d": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol|ContextUpgradeable",
                        "declaringContract": "ContextUpgradeable",
                        "method": {
                            "contractName": "ContextUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_msgSender",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 887,
                                "size": 96
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5002e": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol|ContextUpgradeable",
                        "declaringContract": "ContextUpgradeable",
                        "method": {
                            "contractName": "ContextUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_msgData",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "calldata",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 989,
                                "size": 99
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5002f": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol|Ownable",
                        "declaringContract": "Ownable",
                        "method": {
                            "contractName": "Ownable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_checkOwner",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1796,
                                "size": 162
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50030": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol|Ownable",
                        "declaringContract": "Ownable",
                        "method": {
                            "contractName": "Ownable",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_transferOwnership",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol",
                            "paramNames": [
                                "newOwner"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2912,
                                "size": 187
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50031": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol|Ownable",
                        "declaringContract": "Ownable",
                        "method": {
                            "contractName": "Ownable",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "transferOwnership",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol",
                            "paramNames": [
                                "newOwner"
                            ],
                            "returns": [],
                            "sighash": "f2fde38b",
                            "sourceBytes": {
                                "begin": 2543,
                                "size": 215
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50032": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol|Ownable",
                        "declaringContract": "Ownable",
                        "method": {
                            "contractName": "Ownable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "renounceOwnership",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "715018a6",
                            "sourceBytes": {
                                "begin": 2293,
                                "size": 101
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50033": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol|ERC1967Utils",
                        "declaringContract": "ERC1967Utils",
                        "method": {
                            "contractName": "ERC1967Utils",
                            "fullArgs": [],
                            "isLibrary": true,
                            "name": "getImplementation",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1441,
                                "size": 138
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50034": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol|ERC1967Utils",
                        "declaringContract": "ERC1967Utils",
                        "method": {
                            "contractName": "ERC1967Utils",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "_setImplementation",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
                            "paramNames": [
                                "newImplementation"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1671,
                                "size": 281
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "private"
                        }
                    },
                    "0xf196e50035": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol|ERC1967Utils",
                        "declaringContract": "ERC1967Utils",
                        "method": {
                            "contractName": "ERC1967Utils",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "_setAdmin",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
                            "paramNames": [
                                "newAdmin"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3490,
                                "size": 217
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "private"
                        }
                    },
                    "0xf196e50036": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol|ERC1967Utils",
                        "declaringContract": "ERC1967Utils",
                        "method": {
                            "contractName": "ERC1967Utils",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "upgradeToAndCall",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
                            "paramNames": [
                                "newImplementation",
                                "data"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2264,
                                "size": 344
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50037": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol|ERC1967Utils",
                        "declaringContract": "ERC1967Utils",
                        "method": {
                            "contractName": "ERC1967Utils",
                            "fullArgs": [],
                            "isLibrary": true,
                            "name": "getAdmin",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3287,
                                "size": 120
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50038": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol|ERC1967Utils",
                        "declaringContract": "ERC1967Utils",
                        "method": {
                            "contractName": "ERC1967Utils",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "changeAdmin",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
                            "paramNames": [
                                "newAdmin"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3827,
                                "size": 142
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50039": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol|ERC1967Utils",
                        "declaringContract": "ERC1967Utils",
                        "method": {
                            "contractName": "ERC1967Utils",
                            "fullArgs": [],
                            "isLibrary": true,
                            "name": "getBeacon",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 4415,
                                "size": 122
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5003a": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol|ERC1967Utils",
                        "declaringContract": "ERC1967Utils",
                        "method": {
                            "contractName": "ERC1967Utils",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "_setBeacon",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
                            "paramNames": [
                                "newBeacon"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 4620,
                                "size": 437
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "private"
                        }
                    },
                    "0xf196e5003b": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol|ERC1967Utils",
                        "declaringContract": "ERC1967Utils",
                        "method": {
                            "contractName": "ERC1967Utils",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "upgradeBeaconToAndCall",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
                            "paramNames": [
                                "newBeacon",
                                "data"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 5582,
                                "size": 342
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5003c": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol|ERC1967Utils",
                        "declaringContract": "ERC1967Utils",
                        "method": {
                            "contractName": "ERC1967Utils",
                            "fullArgs": [],
                            "isLibrary": true,
                            "name": "_checkNonPayable",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 6113,
                                "size": 122
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "private"
                        }
                    },
                    "0xf196e5003d": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC20",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "safeTransfer",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "to",
                                "value"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1219,
                                "size": 160
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5003e": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC20",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "safeTransferFrom",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "from",
                                "to",
                                "value"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1618,
                                "size": 188
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5003f": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC20",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "safeIncreaseAllowance",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "spender",
                                "value"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3146,
                                "size": 225
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50040": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC20",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "trySafeTransfer",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "to",
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1943,
                                "size": 189
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50041": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC20",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "trySafeTransferFrom",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "from",
                                "to",
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2273,
                                "size": 217
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50042": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC20",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "safeDecreaseAllowance",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "spender",
                                "requestedDecrease"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 4039,
                                "size": 468
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50043": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC20",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "forceApprove",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "spender",
                                "value"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 5084,
                                "size": 380
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50044": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC1363",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "transferAndCallRelaxed",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "to",
                                "value",
                                "data"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 5808,
                                "size": 322
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50045": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC1363",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "transferFromAndCallRelaxed",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "from",
                                "to",
                                "value",
                                "data"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 6482,
                                "size": 406
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50046": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC1363",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "approveAndCallRelaxed",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "to",
                                "value",
                                "data"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 7553,
                                "size": 320
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50047": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC20",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "_callOptionalReturn",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "data"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 8370,
                                "size": 720
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "private"
                        }
                    },
                    "0xf196e50048": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC20",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "_callOptionalReturnBool",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "data"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 9592,
                                "size": 480
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "private"
                        }
                    },
                    "0xf196e50049": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol|Address",
                        "declaringContract": "Address",
                        "method": {
                            "contractName": "Address",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "sendValue",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol",
                            "paramNames": [
                                "recipient",
                                "amount"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1290,
                                "size": 365
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5004a": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol|Address",
                        "declaringContract": "Address",
                        "method": {
                            "contractName": "Address",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "functionCall",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol",
                            "paramNames": [
                                "target",
                                "data"
                            ],
                            "returns": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2500,
                                "size": 151
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5004b": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol|Address",
                        "declaringContract": "Address",
                        "method": {
                            "contractName": "Address",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "functionDelegateCall",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol",
                            "paramNames": [
                                "target",
                                "data"
                            ],
                            "returns": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3916,
                                "size": 253
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5004c": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol|Address",
                        "declaringContract": "Address",
                        "method": {
                            "contractName": "Address",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "functionCallWithValue",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol",
                            "paramNames": [
                                "target",
                                "data",
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2975,
                                "size": 407
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5004d": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol|Address",
                        "declaringContract": "Address",
                        "method": {
                            "contractName": "Address",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "functionStaticCall",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol",
                            "paramNames": [
                                "target",
                                "data"
                            ],
                            "returns": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3521,
                                "size": 254
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5004e": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol|Address",
                        "declaringContract": "Address",
                        "method": {
                            "contractName": "Address",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "verifyCallResultFromTarget",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol",
                            "paramNames": [
                                "target",
                                "success",
                                "returndata"
                            ],
                            "returns": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 4437,
                                "size": 582
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5004f": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol|Address",
                        "declaringContract": "Address",
                        "method": {
                            "contractName": "Address",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "verifyCallResult",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol",
                            "paramNames": [
                                "success",
                                "returndata"
                            ],
                            "returns": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 5221,
                                "size": 224
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50050": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol|Address",
                        "declaringContract": "Address",
                        "method": {
                            "contractName": "Address",
                            "fullArgs": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "_revert",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol",
                            "paramNames": [
                                "returndata"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 5559,
                                "size": 487
                            },
                            "stateMutability": "pure",
                            "visibility": "private"
                        }
                    },
                    "0xf196e50051": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Context.sol|Context",
                        "declaringContract": "Context",
                        "method": {
                            "contractName": "Context",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_msgSender",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Context.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 656,
                                "size": 96
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50052": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Context.sol|Context",
                        "declaringContract": "Context",
                        "method": {
                            "contractName": "Context",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_msgData",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Context.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "calldata",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 758,
                                "size": 99
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50053": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Context.sol|Context",
                        "declaringContract": "Context",
                        "method": {
                            "contractName": "Context",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_contextSuffixLength",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Context.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 863,
                                "size": 97
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50054": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot",
                        "declaringContract": "StorageSlot",
                        "method": {
                            "contractName": "StorageSlot",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "getAddressSlot",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
                            "paramNames": [
                                "slot"
                            ],
                            "returns": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 7005,
                                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot.AddressSlot",
                                        "containingContract": "StorageSlot",
                                        "structMembers": [
                                            {
                                                "name": "value",
                                                "type": {
                                                    "primitiveName": "address",
                                                    "type": "Primitive"
                                                }
                                            }
                                        ],
                                        "structName": "AddressSlot",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1899,
                                "size": 163
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50055": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot",
                        "declaringContract": "StorageSlot",
                        "method": {
                            "contractName": "StorageSlot",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "getBooleanSlot",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
                            "paramNames": [
                                "slot"
                            ],
                            "returns": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 7008,
                                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot.BooleanSlot",
                                        "containingContract": "StorageSlot",
                                        "structMembers": [
                                            {
                                                "name": "value",
                                                "type": {
                                                    "primitiveName": "bool",
                                                    "type": "Primitive"
                                                }
                                            }
                                        ],
                                        "structName": "BooleanSlot",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2159,
                                "size": 163
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50056": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot",
                        "declaringContract": "StorageSlot",
                        "method": {
                            "contractName": "StorageSlot",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "getInt256Slot",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
                            "paramNames": [
                                "slot"
                            ],
                            "returns": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 7017,
                                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot.Int256Slot",
                                        "containingContract": "StorageSlot",
                                        "structMembers": [
                                            {
                                                "name": "value",
                                                "type": {
                                                    "primitiveName": "int256",
                                                    "type": "Primitive"
                                                }
                                            }
                                        ],
                                        "structName": "Int256Slot",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2938,
                                "size": 161
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50057": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot",
                        "declaringContract": "StorageSlot",
                        "method": {
                            "contractName": "StorageSlot",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "getBytes32Slot",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
                            "paramNames": [
                                "slot"
                            ],
                            "returns": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 7011,
                                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot.Bytes32Slot",
                                        "containingContract": "StorageSlot",
                                        "structMembers": [
                                            {
                                                "name": "value",
                                                "type": {
                                                    "primitiveName": "bytes32",
                                                    "type": "Primitive"
                                                }
                                            }
                                        ],
                                        "structName": "Bytes32Slot",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2419,
                                "size": 163
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50058": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot",
                        "declaringContract": "StorageSlot",
                        "method": {
                            "contractName": "StorageSlot",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "getUint256Slot",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
                            "paramNames": [
                                "slot"
                            ],
                            "returns": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 7014,
                                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot.Uint256Slot",
                                        "containingContract": "StorageSlot",
                                        "structMembers": [
                                            {
                                                "name": "value",
                                                "type": {
                                                    "primitiveName": "uint256",
                                                    "type": "Primitive"
                                                }
                                            }
                                        ],
                                        "structName": "Uint256Slot",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2679,
                                "size": 163
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50059": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot",
                        "declaringContract": "StorageSlot",
                        "method": {
                            "contractName": "StorageSlot",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "getStringSlot",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
                            "paramNames": [
                                "slot"
                            ],
                            "returns": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 7020,
                                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot.StringSlot",
                                        "containingContract": "StorageSlot",
                                        "structMembers": [
                                            {
                                                "name": "value",
                                                "type": {
                                                    "type": "StringType"
                                                }
                                            }
                                        ],
                                        "structName": "StringSlot",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3195,
                                "size": 161
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5005a": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot",
                        "declaringContract": "StorageSlot",
                        "method": {
                            "contractName": "StorageSlot",
                            "fullArgs": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "type": "StringType"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "getStringSlot",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
                            "paramNames": [
                                "store"
                            ],
                            "returns": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 7020,
                                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot.StringSlot",
                                        "containingContract": "StorageSlot",
                                        "structMembers": [
                                            {
                                                "name": "value",
                                                "type": {
                                                    "type": "StringType"
                                                }
                                            }
                                        ],
                                        "structName": "StringSlot",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3468,
                                "size": 175
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5005b": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot",
                        "declaringContract": "StorageSlot",
                        "method": {
                            "contractName": "StorageSlot",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "getBytesSlot",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
                            "paramNames": [
                                "slot"
                            ],
                            "returns": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 7023,
                                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot.BytesSlot",
                                        "containingContract": "StorageSlot",
                                        "structMembers": [
                                            {
                                                "name": "value",
                                                "type": {
                                                    "type": "PackedBytes"
                                                }
                                            }
                                        ],
                                        "structName": "BytesSlot",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3738,
                                "size": 159
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5005c": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot",
                        "declaringContract": "StorageSlot",
                        "method": {
                            "contractName": "StorageSlot",
                            "fullArgs": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "getBytesSlot",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
                            "paramNames": [
                                "store"
                            ],
                            "returns": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 7023,
                                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot.BytesSlot",
                                        "containingContract": "StorageSlot",
                                        "structMembers": [
                                            {
                                                "name": "value",
                                                "type": {
                                                    "type": "PackedBytes"
                                                }
                                            }
                                        ],
                                        "structName": "BytesSlot",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 4007,
                                "size": 172
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    }
                },
                "is_static_address": false,
                "lang": "Solidity",
                "localAssignments": {
                    "1": {
                        "lhs": "lastRewardTimestamp",
                        "sourceLoc": {
                            "begin": "5032",
                            "len": "121",
                            "source": "0"
                        }
                    },
                    "10": {
                        "lhs": "poolInfo",
                        "sourceLoc": {
                            "begin": "8790",
                            "len": "40",
                            "source": "0"
                        }
                    },
                    "11": {
                        "lhs": "userInfo",
                        "sourceLoc": {
                            "begin": "8840",
                            "len": "52",
                            "source": "0"
                        }
                    },
                    "12": {
                        "lhs": "pendingRewards",
                        "sourceLoc": {
                            "begin": "9038",
                            "len": "172",
                            "source": "0"
                        }
                    },
                    "13": {
                        "lhs": "poolInfo",
                        "sourceLoc": {
                            "begin": "10241",
                            "len": "40",
                            "source": "0"
                        }
                    },
                    "14": {
                        "lhs": "userInfo",
                        "sourceLoc": {
                            "begin": "10291",
                            "len": "52",
                            "source": "0"
                        }
                    },
                    "15": {
                        "lhs": "userAmount",
                        "sourceLoc": {
                            "begin": "10578",
                            "len": "36",
                            "source": "0"
                        }
                    },
                    "16": {
                        "lhs": "poolInfo",
                        "sourceLoc": {
                            "begin": "11458",
                            "len": "40",
                            "source": "0"
                        }
                    },
                    "17": {
                        "lhs": "userInfo",
                        "sourceLoc": {
                            "begin": "11508",
                            "len": "52",
                            "source": "0"
                        }
                    },
                    "18": {
                        "lhs": "pendingAmount",
                        "sourceLoc": {
                            "begin": "11639",
                            "len": "171",
                            "source": "0"
                        }
                    },
                    "19": {
                        "lhs": "userInfo",
                        "sourceLoc": {
                            "begin": "13329",
                            "len": "47",
                            "source": "0"
                        }
                    },
                    "2": {
                        "lhs": "length",
                        "sourceLoc": {
                            "begin": "6031",
                            "len": "31",
                            "source": "0"
                        }
                    },
                    "20": {
                        "lhs": "deposits",
                        "sourceLoc": {
                            "begin": "14863",
                            "len": "55",
                            "source": "0"
                        }
                    },
                    "21": {
                        "lhs": "earnings",
                        "sourceLoc": {
                            "begin": "14928",
                            "len": "55",
                            "source": "0"
                        }
                    },
                    "22": {
                        "lhs": "userInfo",
                        "sourceLoc": {
                            "begin": "15499",
                            "len": "47",
                            "source": "0"
                        }
                    },
                    "23": {
                        "lhs": "userInfo",
                        "sourceLoc": {
                            "begin": "15807",
                            "len": "46",
                            "source": "0"
                        }
                    },
                    "24": {
                        "lhs": "poolInfo",
                        "sourceLoc": {
                            "begin": "16049",
                            "len": "40",
                            "source": "0"
                        }
                    },
                    "25": {
                        "lhs": "userInfo",
                        "sourceLoc": {
                            "begin": "16099",
                            "len": "47",
                            "source": "0"
                        }
                    },
                    "26": {
                        "lhs": "accERC20PerShare",
                        "sourceLoc": {
                            "begin": "16157",
                            "len": "52",
                            "source": "0"
                        }
                    },
                    "27": {
                        "lhs": "lpSupply",
                        "sourceLoc": {
                            "begin": "16220",
                            "len": "41",
                            "source": "0"
                        }
                    },
                    "28": {
                        "lhs": "pendingRewards",
                        "sourceLoc": {
                            "begin": "17488",
                            "len": "163",
                            "source": "0"
                        }
                    },
                    "29": {
                        "lhs": "lastTimestamp",
                        "sourceLoc": {
                            "begin": "17897",
                            "len": "111",
                            "source": "0"
                        }
                    },
                    "3": {
                        "lhs": "poolInfo",
                        "sourceLoc": {
                            "begin": "6283",
                            "len": "37",
                            "source": "0"
                        }
                    },
                    "30": {
                        "lhs": "stakingDuration",
                        "sourceLoc": {
                            "begin": "18019",
                            "len": "56",
                            "source": "0"
                        }
                    },
                    "31": {
                        "lhs": "poolInfo.accERC20PerShare",
                        "sourceLoc": {
                            "begin": "6932",
                            "len": "165",
                            "source": "0"
                        }
                    },
                    "32": {
                        "lhs": "poolInfo.lastRewardTimestamp",
                        "sourceLoc": {
                            "begin": "7108",
                            "len": "46",
                            "source": "0"
                        }
                    },
                    "33": {
                        "lhs": "poolInfo.totalDeposits",
                        "sourceLoc": {
                            "begin": "7966",
                            "len": "57",
                            "source": "0"
                        }
                    },
                    "34": {
                        "lhs": "userInfo.amount",
                        "sourceLoc": {
                            "begin": "8034",
                            "len": "43",
                            "source": "0"
                        }
                    },
                    "35": {
                        "lhs": "userInfo.rewardDebt",
                        "sourceLoc": {
                            "begin": "8088",
                            "len": "135",
                            "source": "0"
                        }
                    },
                    "36": {
                        "lhs": "userInfo.amount",
                        "sourceLoc": {
                            "begin": "9382",
                            "len": "43",
                            "source": "0"
                        }
                    },
                    "37": {
                        "lhs": "userInfo.rewardDebt",
                        "sourceLoc": {
                            "begin": "9436",
                            "len": "135",
                            "source": "0"
                        }
                    },
                    "38": {
                        "lhs": "poolInfo.totalDeposits",
                        "sourceLoc": {
                            "begin": "9678",
                            "len": "57",
                            "source": "0"
                        }
                    },
                    "39": {
                        "lhs": "poolInfo.totalDeposits",
                        "sourceLoc": {
                            "begin": "10430",
                            "len": "65",
                            "source": "0"
                        }
                    },
                    "4": {
                        "lhs": "lastTimestamp",
                        "sourceLoc": {
                            "begin": "6331",
                            "len": "111",
                            "source": "0"
                        }
                    },
                    "40": {
                        "lhs": "userInfo.amount",
                        "sourceLoc": {
                            "begin": "11341",
                            "len": "19",
                            "source": "0"
                        }
                    },
                    "41": {
                        "lhs": "userInfo.rewardDebt",
                        "sourceLoc": {
                            "begin": "11370",
                            "len": "23",
                            "source": "0"
                        }
                    },
                    "42": {
                        "lhs": "userInfo.amount",
                        "sourceLoc": {
                            "begin": "11821",
                            "len": "49",
                            "source": "0"
                        }
                    },
                    "43": {
                        "lhs": "userInfo.rewardDebt",
                        "sourceLoc": {
                            "begin": "11881",
                            "len": "135",
                            "source": "0"
                        }
                    },
                    "44": {
                        "lhs": "poolInfo.totalDeposits",
                        "sourceLoc": {
                            "begin": "12027",
                            "len": "63",
                            "source": "0"
                        }
                    },
                    "45": {
                        "lhs": "userInfo.tokensUnlockTime",
                        "sourceLoc": {
                            "begin": "13551",
                            "len": "45",
                            "source": "0"
                        }
                    },
                    "46": {
                        "lhs": "deposits[i]",
                        "sourceLoc": {
                            "begin": "15096",
                            "len": "44",
                            "source": "0"
                        }
                    },
                    "47": {
                        "lhs": "earnings[i]",
                        "sourceLoc": {
                            "begin": "15154",
                            "len": "48",
                            "source": "0"
                        }
                    },
                    "48": {
                        "lhs": "sale",
                        "sourceLoc": {
                            "begin": "635",
                            "len": "51",
                            "source": "4"
                        }
                    },
                    "49": {
                        "lhs": "sales",
                        "sourceLoc": {
                            "begin": "1515",
                            "len": "61",
                            "source": "4"
                        }
                    },
                    "5": {
                        "lhs": "lpSupply",
                        "sourceLoc": {
                            "begin": "6544",
                            "len": "41",
                            "source": "0"
                        }
                    },
                    "50": {
                        "lhs": "index",
                        "sourceLoc": {
                            "begin": "1586",
                            "len": "14",
                            "source": "4"
                        }
                    },
                    "51": {
                        "lhs": "sales[index]",
                        "sourceLoc": {
                            "begin": "1673",
                            "len": "26",
                            "source": "4"
                        }
                    },
                    "52": {
                        "lhs": "$",
                        "sourceLoc": {
                            "begin": "2506",
                            "len": "47",
                            "source": "5"
                        }
                    },
                    "53": {
                        "lhs": "$",
                        "sourceLoc": {
                            "begin": "3847",
                            "len": "47",
                            "source": "5"
                        }
                    },
                    "54": {
                        "lhs": "oldOwner",
                        "sourceLoc": {
                            "begin": "3904",
                            "len": "27",
                            "source": "5"
                        }
                    },
                    "55": {
                        "lhs": "$._owner",
                        "sourceLoc": {
                            "begin": "3941",
                            "len": "19",
                            "source": "5"
                        }
                    },
                    "56": {
                        "lhs": "$",
                        "sourceLoc": {
                            "begin": "4158",
                            "len": "59",
                            "source": "6"
                        }
                    },
                    "57": {
                        "lhs": "isTopLevelCall",
                        "sourceLoc": {
                            "begin": "4279",
                            "len": "38",
                            "source": "6"
                        }
                    },
                    "58": {
                        "lhs": "initialized",
                        "sourceLoc": {
                            "begin": "4327",
                            "len": "35",
                            "source": "6"
                        }
                    },
                    "59": {
                        "lhs": "initialSetup",
                        "sourceLoc": {
                            "begin": "4706",
                            "len": "54",
                            "source": "6"
                        }
                    },
                    "6": {
                        "lhs": "stakingDuration",
                        "sourceLoc": {
                            "begin": "6714",
                            "len": "70",
                            "source": "0"
                        }
                    },
                    "60": {
                        "lhs": "construction",
                        "sourceLoc": {
                            "begin": "4770",
                            "len": "70",
                            "source": "6"
                        }
                    },
                    "61": {
                        "lhs": "$",
                        "sourceLoc": {
                            "begin": "6357",
                            "len": "59",
                            "source": "6"
                        }
                    },
                    "62": {
                        "lhs": "$",
                        "sourceLoc": {
                            "begin": "7826",
                            "len": "59",
                            "source": "6"
                        }
                    },
                    "63": {
                        "lhs": "$._initialized",
                        "sourceLoc": {
                            "begin": "4951",
                            "len": "18",
                            "source": "6"
                        }
                    },
                    "64": {
                        "lhs": "$._initialized",
                        "sourceLoc": {
                            "begin": "6541",
                            "len": "24",
                            "source": "6"
                        }
                    },
                    "65": {
                        "lhs": "$._initializing",
                        "sourceLoc": {
                            "begin": "6575",
                            "len": "22",
                            "source": "6"
                        }
                    },
                    "66": {
                        "lhs": "$._initializing",
                        "sourceLoc": {
                            "begin": "6618",
                            "len": "23",
                            "source": "6"
                        }
                    },
                    "67": {
                        "lhs": "oldOwner",
                        "sourceLoc": {
                            "begin": "2985",
                            "len": "25",
                            "source": "9"
                        }
                    },
                    "68": {
                        "lhs": "beaconImplementation",
                        "sourceLoc": {
                            "begin": "4850",
                            "len": "66",
                            "source": "15"
                        }
                    },
                    "69": {
                        "lhs": "oldAllowance",
                        "sourceLoc": {
                            "begin": "3242",
                            "len": "62",
                            "source": "18"
                        }
                    },
                    "7": {
                        "lhs": "erc20Reward",
                        "sourceLoc": {
                            "begin": "6794",
                            "len": "127",
                            "source": "0"
                        }
                    },
                    "70": {
                        "lhs": "approvalCall",
                        "sourceLoc": {
                            "begin": "5171",
                            "len": "75",
                            "source": "18"
                        }
                    },
                    "71": {
                        "lhs": "returnSize",
                        "sourceLoc": {
                            "begin": "8450",
                            "len": "18",
                            "source": "18"
                        }
                    },
                    "72": {
                        "lhs": "returnValue",
                        "sourceLoc": {
                            "begin": "8478",
                            "len": "19",
                            "source": "18"
                        }
                    },
                    "73": {
                        "lhs": "success",
                        "sourceLoc": {
                            "begin": "9691",
                            "len": "12",
                            "source": "18"
                        }
                    },
                    "74": {
                        "lhs": "returnSize",
                        "sourceLoc": {
                            "begin": "9713",
                            "len": "18",
                            "source": "18"
                        }
                    },
                    "75": {
                        "lhs": "returnValue",
                        "sourceLoc": {
                            "begin": "9741",
                            "len": "19",
                            "source": "18"
                        }
                    },
                    "76": {
                        "lhs": "success,returndata",
                        "sourceLoc": {
                            "begin": "1506",
                            "len": "75",
                            "source": "19"
                        }
                    },
                    "77": {
                        "lhs": "success,returndata",
                        "sourceLoc": {
                            "begin": "3230",
                            "len": "73",
                            "source": "19"
                        }
                    },
                    "78": {
                        "lhs": "success,returndata",
                        "sourceLoc": {
                            "begin": "3631",
                            "len": "65",
                            "source": "19"
                        }
                    },
                    "79": {
                        "lhs": "success,returndata",
                        "sourceLoc": {
                            "begin": "4023",
                            "len": "67",
                            "source": "19"
                        }
                    },
                    "8": {
                        "lhs": "poolInfo",
                        "sourceLoc": {
                            "begin": "7269",
                            "len": "40",
                            "source": "0"
                        }
                    },
                    "9": {
                        "lhs": "userInfo",
                        "sourceLoc": {
                            "begin": "7319",
                            "len": "52",
                            "source": "0"
                        }
                    }
                },
                "methods": [
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "constructor",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [],
                        "returns": [],
                        "sighash": "0",
                        "sourceBytes": {
                            "begin": 3668,
                            "size": 53
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getTotalPending",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "3bd05400",
                        "sourceBytes": {
                            "begin": 17746,
                            "size": 427
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getRewardPerSec",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "e0d41c02",
                        "sourceBytes": {
                            "begin": 13798,
                            "size": 98
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "PackedBytes"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "upgradeToAndCall",
                        "notpayable": false,
                        "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
                        "paramNames": [
                            "newImplementation",
                            "data"
                        ],
                        "returns": [],
                        "sighash": "4f1ef286",
                        "sourceBytes": {
                            "begin": 4161,
                            "size": 214
                        },
                        "stateMutability": "payable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "transferOwnership",
                        "notpayable": true,
                        "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
                        "paramNames": [
                            "newOwner"
                        ],
                        "returns": [],
                        "sighash": "f2fde38b",
                        "sourceBytes": {
                            "begin": 3405,
                            "size": 215
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getPoolNum",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "212af18d",
                        "sourceBytes": {
                            "begin": 15285,
                            "size": 92
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "emergencyWithdraw",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [
                            "_poolId"
                        ],
                        "returns": [],
                        "sighash": "5312ea8e",
                        "sourceBytes": {
                            "begin": 10180,
                            "size": 1220
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "dynamicArrayBaseType": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    },
                                    "type": "Array"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "getPendingAndDepositedForUsers",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [
                            "users",
                            "poolId"
                        ],
                        "returns": [
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "dynamicArrayBaseType": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    },
                                    "type": "Array"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "dynamicArrayBaseType": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    },
                                    "type": "Array"
                                }
                            }
                        ],
                        "sighash": "fcfc1b14",
                        "sourceBytes": {
                            "begin": 14695,
                            "size": 562
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getTotalAllocPoint",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "3a58b91a",
                        "sourceBytes": {
                            "begin": 14095,
                            "size": 101
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "getUserInfoInPool",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [
                            "_poolId",
                            "_user"
                        ],
                        "returns": [
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "astId": 43,
                                    "canonicalId": "src/GasBadStakingMining.sol|GasBadStakingMining.User",
                                    "containingContract": "GasBadStakingMining",
                                    "structMembers": [
                                        {
                                            "name": "amount",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "rewardDebt",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "tokensUnlockTime",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "salesRegistered",
                                            "type": {
                                                "dynamicArrayBaseType": {
                                                    "primitiveName": "address",
                                                    "type": "Primitive"
                                                },
                                                "type": "Array"
                                            }
                                        }
                                    ],
                                    "structName": "User",
                                    "type": "UserDefinedStruct"
                                }
                            }
                        ],
                        "sighash": "f70fd81c",
                        "sourceBytes": {
                            "begin": 15682,
                            "size": 203
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "fund",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [
                            "_amount"
                        ],
                        "returns": [],
                        "sighash": "ca1d209d",
                        "sourceBytes": {
                            "begin": 4352,
                            "size": 328
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "massUpdatePools",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [],
                        "returns": [],
                        "sighash": "630b5ba1",
                        "sourceBytes": {
                            "begin": 5987,
                            "size": 186
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "updatePool",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [
                            "_pid"
                        ],
                        "returns": [],
                        "sighash": "51eb05a6",
                        "sourceBytes": {
                            "begin": 6232,
                            "size": 929
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "compound",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [
                            "_poolId"
                        ],
                        "returns": [],
                        "sighash": "aa5f7e26",
                        "sourceBytes": {
                            "begin": 11406,
                            "size": 1520
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "renounceOwnership",
                        "notpayable": true,
                        "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
                        "paramNames": [],
                        "returns": [],
                        "sighash": "715018a6",
                        "sourceBytes": {
                            "begin": 3155,
                            "size": 101
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "proxiableUUID",
                        "notpayable": true,
                        "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "bytes32",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "52d1902d",
                        "sourceBytes": {
                            "begin": 3708,
                            "size": 134
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "getPoolInfo",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [
                            "poolId"
                        ],
                        "returns": [
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "astId": 55,
                                    "canonicalId": "src/GasBadStakingMining.sol|GasBadStakingMining.Pool",
                                    "containingContract": "GasBadStakingMining",
                                    "structMembers": [
                                        {
                                            "name": "lpToken",
                                            "type": {
                                                "contractName": "IERC20",
                                                "type": "Contract"
                                            }
                                        },
                                        {
                                            "name": "allocPoint",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "lastRewardTimestamp",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "accERC20PerShare",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "totalDeposits",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        }
                                    ],
                                    "structName": "Pool",
                                    "type": "UserDefinedStruct"
                                }
                            }
                        ],
                        "sighash": "2f380b35",
                        "sourceBytes": {
                            "begin": 14577,
                            "size": 112
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "getPendingReward",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [
                            "_poolId",
                            "_user"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "c59b1f3c",
                        "sourceBytes": {
                            "begin": 15929,
                            "size": 1761
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "contractName": "IERC20",
                                    "type": "Contract"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "add",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [
                            "_allocPoint",
                            "_lpToken",
                            "_withUpdate"
                        ],
                        "returns": [],
                        "sighash": "1eaaa045",
                        "sourceBytes": {
                            "begin": 4838,
                            "size": 652
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "getDeposited",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [
                            "_poolId",
                            "_user"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "e86facc5",
                        "sourceBytes": {
                            "begin": 15383,
                            "size": 202
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getPaidOut",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "b3458b4b",
                        "sourceBytes": {
                            "begin": 15591,
                            "size": 85
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setTokensUnlockTime",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [
                            "_poolId",
                            "_user",
                            "_tokensUnlockTime"
                        ],
                        "returns": [],
                        "sighash": "e6f04acc",
                        "sourceBytes": {
                            "begin": 13174,
                            "size": 536
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "contractName": "IERC20",
                                    "type": "Contract"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "initialize",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [
                            "_erc20",
                            "_rewardPerSecond",
                            "_startTimestamp",
                            "_salesFactory"
                        ],
                        "returns": [],
                        "sighash": "9e3d87cd",
                        "sourceBytes": {
                            "begin": 3747,
                            "size": 445
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "UPGRADE_INTERFACE_VERSION",
                        "notpayable": true,
                        "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            }
                        ],
                        "sighash": "ad3cb1cc",
                        "sourceBytes": {
                            "begin": 1819,
                            "size": 58
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "version",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "54fd4d50",
                        "sourceBytes": {
                            "begin": 13716,
                            "size": 76
                        },
                        "stateMutability": "pure",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "deposit",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [
                            "_poolId",
                            "_amount"
                        ],
                        "returns": [],
                        "sighash": "e2bbb158",
                        "sourceBytes": {
                            "begin": 7201,
                            "size": 1424
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "set",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [
                            "_poolId",
                            "_allocPoint",
                            "_withUpdate"
                        ],
                        "returns": [],
                        "sighash": "64482f79",
                        "sourceBytes": {
                            "begin": 5536,
                            "size": 366
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getTotalRewards",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "e627f2db",
                        "sourceBytes": {
                            "begin": 13994,
                            "size": 95
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "owner",
                        "notpayable": true,
                        "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "8da5cb5b",
                        "sourceBytes": {
                            "begin": 2441,
                            "size": 144
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getStartTimestamp",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "1f89f25e",
                        "sourceBytes": {
                            "begin": 14244,
                            "size": 99
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setSalesFactory",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [
                            "_salesFactory"
                        ],
                        "returns": [],
                        "sighash": "3dfcb861",
                        "sourceBytes": {
                            "begin": 12932,
                            "size": 236
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getEndTimestamp",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "74e94deb",
                        "sourceBytes": {
                            "begin": 14349,
                            "size": 95
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "withdraw",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [
                            "_poolId",
                            "_amount"
                        ],
                        "returns": [],
                        "sighash": "441a3e70",
                        "sourceBytes": {
                            "begin": 8721,
                            "size": 1418
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getRewardToken",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "contractName": "IERC20",
                                    "type": "Contract"
                                }
                            }
                        ],
                        "sighash": "69940d79",
                        "sourceBytes": {
                            "begin": 13902,
                            "size": 86
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "GasBadStakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getStakingMiningDuration",
                        "notpayable": true,
                        "originalFile": "src/GasBadStakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "a242057a",
                        "sourceBytes": {
                            "begin": 14450,
                            "size": 121
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    }
                ],
                "name": "GasBadStakingMining",
                "original_file": "src/GasBadStakingMining.sol",
                "solidityTypes": [
                    {
                        "astId": 3150,
                        "canonicalId": "src/sale/IceFrogSale.sol|IceFrogSale.Sale",
                        "containingContract": "IceFrogSale",
                        "structMembers": [
                            {
                                "name": "token",
                                "type": {
                                    "contractName": "IERC20",
                                    "type": "Contract"
                                }
                            },
                            {
                                "name": "isCreated",
                                "type": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "earningsWithdrawn",
                                "type": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "leftoverWithdrawn",
                                "type": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "saleOwner",
                                "type": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "tokenPriceInETH",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "amountOfTokensToSell",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "totalTokensSold",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "totalETHRaised",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "saleStart",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "saleEnd",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "tokensUnlockTime",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "maxParticipation",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "Sale",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 3160,
                        "canonicalId": "src/sale/IceFrogSale.sol|IceFrogSale.Participation",
                        "containingContract": "IceFrogSale",
                        "structMembers": [
                            {
                                "name": "amountBought",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "amountETHPaid",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "timeParticipated",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "isPortionWithdrawn",
                                "type": {
                                    "dynamicArrayBaseType": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    },
                                    "type": "Array"
                                }
                            }
                        ],
                        "structName": "Participation",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 3167,
                        "canonicalId": "src/sale/IceFrogSale.sol|IceFrogSale.Registration",
                        "containingContract": "IceFrogSale",
                        "structMembers": [
                            {
                                "name": "registrationTimeStarts",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "registrationTimeEnds",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "numberOfRegistrants",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "Registration",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 5366,
                        "canonicalId": "src/StakingMining.sol|StakingMining.User",
                        "containingContract": "StakingMining",
                        "structMembers": [
                            {
                                "name": "amount",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "rewardDebt",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "tokensUnlockTime",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "salesRegistered",
                                "type": {
                                    "dynamicArrayBaseType": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    },
                                    "type": "Array"
                                }
                            }
                        ],
                        "structName": "User",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 5378,
                        "canonicalId": "src/StakingMining.sol|StakingMining.Pool",
                        "containingContract": "StakingMining",
                        "structMembers": [
                            {
                                "name": "lpToken",
                                "type": {
                                    "contractName": "IERC20",
                                    "type": "Contract"
                                }
                            },
                            {
                                "name": "allocPoint",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "lastRewardTimestamp",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "accERC20PerShare",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "totalDeposits",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "Pool",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 43,
                        "canonicalId": "src/GasBadStakingMining.sol|GasBadStakingMining.User",
                        "containingContract": "GasBadStakingMining",
                        "structMembers": [
                            {
                                "name": "amount",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "rewardDebt",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "tokensUnlockTime",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "salesRegistered",
                                "type": {
                                    "dynamicArrayBaseType": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    },
                                    "type": "Array"
                                }
                            }
                        ],
                        "structName": "User",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 55,
                        "canonicalId": "src/GasBadStakingMining.sol|GasBadStakingMining.Pool",
                        "containingContract": "GasBadStakingMining",
                        "structMembers": [
                            {
                                "name": "lpToken",
                                "type": {
                                    "contractName": "IERC20",
                                    "type": "Contract"
                                }
                            },
                            {
                                "name": "allocPoint",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "lastRewardTimestamp",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "accERC20PerShare",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "totalDeposits",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "Pool",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 6668,
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol|ECDSA.RecoverError",
                        "containingContract": "ECDSA",
                        "enumMembers": [
                            {
                                "name": "NoError"
                            },
                            {
                                "name": "InvalidSignature"
                            },
                            {
                                "name": "InvalidSignatureLength"
                            },
                            {
                                "name": "InvalidSignatureS"
                            }
                        ],
                        "enumName": "RecoverError",
                        "type": "UserDefinedEnum"
                    },
                    {
                        "astId": 7424,
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot.AddressSlot",
                        "containingContract": "StorageSlot",
                        "structMembers": [
                            {
                                "name": "value",
                                "type": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "AddressSlot",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 7427,
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot.BooleanSlot",
                        "containingContract": "StorageSlot",
                        "structMembers": [
                            {
                                "name": "value",
                                "type": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "BooleanSlot",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 7430,
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot.Bytes32Slot",
                        "containingContract": "StorageSlot",
                        "structMembers": [
                            {
                                "name": "value",
                                "type": {
                                    "primitiveName": "bytes32",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "Bytes32Slot",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 7433,
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot.Uint256Slot",
                        "containingContract": "StorageSlot",
                        "structMembers": [
                            {
                                "name": "value",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "Uint256Slot",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 7436,
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot.Int256Slot",
                        "containingContract": "StorageSlot",
                        "structMembers": [
                            {
                                "name": "value",
                                "type": {
                                    "primitiveName": "int256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "Int256Slot",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 7439,
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot.StringSlot",
                        "containingContract": "StorageSlot",
                        "structMembers": [
                            {
                                "name": "value",
                                "type": {
                                    "type": "StringType"
                                }
                            }
                        ],
                        "structName": "StringSlot",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 7442,
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot.BytesSlot",
                        "containingContract": "StorageSlot",
                        "structMembers": [
                            {
                                "name": "value",
                                "type": {
                                    "type": "PackedBytes"
                                }
                            }
                        ],
                        "structName": "BytesSlot",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 1721,
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol|OwnableUpgradeable.OwnableStorage",
                        "containingContract": "OwnableUpgradeable",
                        "structMembers": [
                            {
                                "name": "_owner",
                                "type": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "OwnableStorage",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 8805,
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/math/Math.sol|Math.Rounding",
                        "containingContract": "Math",
                        "enumMembers": [
                            {
                                "name": "Floor"
                            },
                            {
                                "name": "Ceil"
                            },
                            {
                                "name": "Trunc"
                            },
                            {
                                "name": "Expand"
                            }
                        ],
                        "enumName": "Rounding",
                        "type": "UserDefinedEnum"
                    },
                    {
                        "astId": 1962,
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol|Initializable.InitializableStorage",
                        "containingContract": "Initializable",
                        "structMembers": [
                            {
                                "name": "_initialized",
                                "type": {
                                    "primitiveName": "uint64",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "_initializing",
                                "type": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "InitializableStorage",
                        "type": "UserDefinedStruct"
                    }
                ],
                "sourceBytes": {
                    "begin": 719,
                    "size": 17456
                },
                "srcmap": "719:28844:0:-:0;;;;;;;;;-1:-1:-1;719:28844:0;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;;;;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;:::o;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::o;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;;;;;;;;;:::i;:::-;;;:::o;:::-;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;:::i;:::-;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::o;:::-;;:::i;:::-;;;;;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;;;:::o;:::-;;;;:::i;:::-;;;;;;;:::i;:::-;:::o;:::-;;;:::i;:::-;;:::o;1819:58:7:-;1870:7;;:::i;:::-;1819:58;:::o;:::-;;;:::i;:::-;;:::o;719:28844:0:-;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;:::o;:::-;;;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;:::i;:::-;;;:::o;:::-;;;;:::o;:::-;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;:::i;:::-;;;:::o;:::-;;;;;;;:::o;:::-;;;;:::o;:::-;;;;;;;:::i;:::-;;;:::o;:::-;;;;:::o;:::-;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;7049:540;;7585:1;7049:540;;6350:11;6362:8;6371:11;7127:457;;;;;;;;;;;;;7585:1;:::i;:::-;7049:540::o;3227:62:5:-;;3281:1;3227:62;;;;:::i;:::-;3281:1;:::i;:::-;3227:62::o;719:28844:0:-;;;;:::o;:::-;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::o;:::-;;:::i;:::-;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;;:::o;:::-;;;;;:::i;:::-;;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;:::i;:::-;:::o;:::-;;;;;;;;:::i;:::-;:::o;:::-;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;:::o;:::-;;:::i;6231:818::-;;6807:225;;;6231:818;6781:261;6231:818;6403:59;;6231:818;6501:15;:32;;6519:14;;;:::i;:::-;6501:32;:::i;:::-;;;:::i;:::-;;:91;;;;6807:225;;6548:15;6501:91;6593:120;;;6723:47;6741:29;:15;;;:::i;:::-;6759:11;6741:29;;:::i;:::-;6723:47;;:::i;:::-;6807:225;6781:12;:7;:12;:::i;:::-;6839:8;6877:11;6927:19;6807:225;6982:1;7016;6807:225;7016:1;6807:225;;;:::i;:::-;;;;;:::i;:::-;;;;;:::i;:::-;;;;;:::i;:::-;;:::i;:::-;;;;;:::i;:::-;;:::i;:::-;;;;;:::i;:::-;6781:261;:::i;:::-;6231:818::o;6501:91::-;6807:225;;6578:14;;;:::i;:::-;6501:91;;6403:59;;;:::i;:::-;;;6231:818;;;;;;:::i;:::-;:::o;719:28844::-;;;:::o;23055:99::-;23107:7;;:::i;:::-;23133:14;;;;:::i;:::-;23126:21;:::o;719:28844::-;;;:::o;24608:92::-;24653:7;;:::i;:::-;24679;:14;:7;:14;:::i;:::-;24672:21;:::o;719:28844::-;;;;:::i;:::-;;:::o;:::-;;;:::o;:::-;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;:::o;:::-;;;:::i;:::-;;:::o;:::-;;;;;;;:::o;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;:::o;:::-;;;;:::i;:::-;;:::o;23388:112::-;23478:15;23471:22;23388:112;23448:11;;:::i;:::-;23478:7;;:15;:::i;:::-;;23471:22;:::i;:::-;;:::o;22906:101::-;22959:7;;:::i;:::-;22985:15;;;;:::i;:::-;22978:22;:::o;719:28844::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;:::i;28904:657::-;28954:7;;:::i;:::-;28977:15;;:33;;28996:14;;;:::i;:::-;28977:33;:::i;:::-;;;:::i;:::-;;;28973:72;;29079:15;:30;;29097:12;;;:::i;:::-;29079:30;:::i;:::-;;;:::i;:::-;;:87;;;;29511:43;:33;29317:30;29124:15;29079:87;29167:114;;;29333:14;;;:::i;:::-;29317:30;;:::i;:::-;29348:116;;;29511:15;;;:::i;:::-;:33;:::i;:::-;29547:7;;;:::i;:::-;29511:43;;:::i;:::-;29504:50;:::o;29079:87::-;29511:43;:33;29317:30;29154:12;;;:::i;:::-;29079:87;;28973:72;29026:8;29033:1;29026:8;:::i;:::-;;:::o;3227:62:5:-;3281:1;3227:62;;;:::i;:::-;3281:1;:::i;:::-;3227:62::o;719:28844:0:-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;21473:236::-;21554:13;:27;;21571:10;21579:1;21571:10;:::i;:::-;21554:27;:::i;:::-;;;:::i;:::-;;21550:100;;21675:27;21660:42;21688:13;21675:27;:::i;:::-;21660:42;;:::i;:::-;21473:236::o;21550:100::-;21604:35;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;21473:236;;;;:::i;:::-;:::o;719:28844::-;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;;:::i;:::-;;;;;;;;13931:2586;;13991:364;;;;;;;;;;;;14364:40;14388:16;:7;14396;14388:16;;:::i;:::-;;14364:40;:::i;:::-;14405:102;;;14516:52;14540:28;:16;:7;14548;14540:16;;:::i;:::-;14557:10;14540:28;;:::i;:::-;14516:52;:::i;:::-;14569:102;;;;14685:15;;:8;:15;;:::i;:::-;:25;;14703:7;14685:25;:::i;:::-;;;:::i;:::-;;14681:95;;14797:7;;;:::i;:::-;14841:147;14891:15;;:8;:15;;:::i;:::-;14920:25;;:8;:25;;:::i;:::-;14959:19;;:8;:19;;:::i;:::-;14841:147;;:::i;:::-;14989:115;;;;15114:31;:22;15121:14;15129:5;;;:::i;:::-;15121:14;:::i;:::-;15114:22;:::i;:::-;:31;:::i;:::-;;:59;:31;15146:10;;15158:14;15114:59;;15158:14;15114:59;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;15975:22;15114:59;15239:25;;15649:19;15114:59;15975:22;15114:59;15649:19;15114:59;;;13931:2586;15250:14;15239:25;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;15275:43;15293:25;:15;;:8;:15;;:::i;:::-;15311:7;15293:25;;:::i;:::-;15275:15;:8;:15;:43;:::i;:::-;15345:15;;:8;:15;;:::i;:::-;15361:116;;15487:135;15509:113;15558:15;;:8;:15;;:::i;:::-;15587:25;;:8;:25;;:::i;:::-;15509:113;;:::i;:::-;15487:8;;:19;:135;:::i;:::-;15649:19;;:::i;:::-;15669:116;;15873:7;15822:16;;:8;:16;;:::i;:::-;15860:10;15873:7;;;:::i;:::-;15891:57;15916:32;:22;:8;;:22;;:::i;:::-;15941:7;15916:32;;:::i;:::-;15891:8;;:22;:57;:::i;:::-;15975:22;;:::i;:::-;15998:116;;16181:330;;;;;;;13931:2586::o;15114:59::-;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;:::i;14681:95::-;14733:32;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;4898:446:7;;5340:1;4898:446;4756:17;4774:4;4968:371;;;;;;;;;;;5340:1;:::i;:::-;4898:446::o;2624:62::-;;2678:1;2624:62;;;:::i;:::-;2678:1;:::i;:::-;2624:62::o;4647:251::-;;4886:4;4647:251;4817:17;;;:::i;:::-;4886:4;:::i;:::-;4647:251::o;:::-;;;;;:::i;:::-;:::o;719:28844:0:-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::o;:::-;;:::i;9220:2098::-;9572:13;9548:37;9220:2098;9262:277;;;;;;;;;9572:7;:13;:::i;:::-;;9548:37;:::i;:::-;9586:102;;;9722:15;:30;;9740:12;;;:::i;:::-;9722:30;:::i;:::-;;;:::i;:::-;;:87;;;;9767:15;9722:87;9810:114;;;;9938:13;:45;;9955:28;;:8;:28;;:::i;:::-;9938:45;:::i;:::-;;;:::i;:::-;;;9934:82;;10044:22;;:8;:22;;:::i;:::-;10067:109;;;10190:8;:13;;10202:1;10190:13;:::i;:::-;;;:::i;:::-;;10186:108;;10330:13;10750:165;10778:137;11167:28;10330:13;10522:105;10523:97;10524:33;10330:44;11167:28;10330:13;10346:28;:8;;:28;;:::i;:::-;10330:44;;:::i;:::-;10375:116;;;10542:15;;;:::i;:::-;10524:33;;:::i;:::-;10574:45;10575:25;:19;;:8;:19;;:::i;:::-;:25;10597:3;10575:25;:::i;:::-;;;:::i;:::-;10604:15;;;:::i;:::-;10574:45;;:::i;:::-;10523:97;;:::i;:::-;10522:105;10624:3;10522:105;:::i;:::-;;;:::i;:::-;10628:112;;;;10833:25;;:8;:25;;:::i;:::-;10872:11;10897:8;10778:137;;:::i;:::-;10750:25;:8;:25;:165;:::i;:::-;10942:25;;:8;:25;;:::i;:::-;10968:116;;11094:46;11125:15;11094:8;;:28;:46;:::i;:::-;11167:28;;:::i;:::-;11196:116;;9220:2098::o;10186:108::-;10250:13;10219:28;:44;10250:13;10219:8;:28;:44;:::i;:::-;10277:7::o;9934:82::-;9999:7;;:::o;9722:87::-;9797:12;;;:::i;:::-;9722:87;;719:28844;;;:::o;2892:72:7:-;2956:1;2892:72;;;:::i;:::-;2956:1;:::i;:::-;2892:72;:::o;719:28844:0:-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;763:114:15:-;811:66;;;:::i;:::-;763:114;:::o;4194:134:7:-;4289:32;;;:::i;:::-;4282:39;:::o;4194:134::-;4263:7;;;:::i;:::-;;:::i;:::-;4194:134;:::o;16558:2300:0:-;18716:19;;16558:2300;16610:280;;;;;;;;;16899:40;16923:16;:7;16931;16923:16;;:::i;:::-;;16899:40;:::i;:::-;16940:102;;;;17384:22;;17051:52;17075:28;:16;:7;17083;17075:16;;:::i;:::-;17092:10;17075:28;;:::i;:::-;17051:52;:::i;:::-;17104:102;;;;17266:15;17215:16;;:8;:16;;:::i;:::-;17253:10;17266:15;;:8;:15;;:::i;:::-;;;:::i;:::-;17292:65;17317:40;:22;:8;;:22;;:::i;:::-;17342:15;;:8;:15;;:::i;:::-;17317:40;;:::i;:::-;17292:8;;:22;:65;:::i;:::-;17384:22;;:::i;:::-;17407:116;;17626:15;;:8;:15;;:::i;:::-;17642:111;;;17762:708;;;;;;;18479:19;;18497:1;18479:19;:::i;:::-;:15;:8;:15;:19;:::i;:::-;18525:15;;:8;:15;;:::i;:::-;18541:116;;18666:23;;18688:1;18666:23;:::i;:::-;:8;;:19;:23;:::i;:::-;18716:19;;:::i;:::-;18736:116;;16558:2300::o;719:28844::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;22527:76::-;22569:7;;:::i;:::-;22595:1;22588:8;22595:1;22588:8;:::i;:::-;;:::o;719:28844::-;;;;;;:::i;:::-;;:::o;8672:489::-;8707:196;;;;;;8929:14;:7;:14;:::i;:::-;8944:107;;;9065:18;9082:1;9065:18;:::i;:::-;9102:8;9085:6;:15;;9094:6;9085:15;:::i;:::-;;;:::i;:::-;;;;;9137:6;;9102:8;9137:6;;:::i;:::-;9102:8;:::i;:::-;9065:18;;9085:15;;;8672:489::o;8047:540::-;;8583:1;8047:540;;7755:7;7763:11;7775;8126:456;;;;;;;;;;;;;8583:1;:::i;:::-;8047:540::o;3227:62:5:-;;3281:1;3227:62;;;;:::i;:::-;3281:1;:::i;:::-;3227:62::o;7635:412:0:-;;7999:16;:27;7635:412;7999:41;7635:412;7807:59;;7635:412;7876:113;7906:83;:57;:15;;;:::i;:::-;7936:27;:7;:16;:7;7944;7936:16;;:::i;:::-;;:27;;:::i;:::-;7906:57;;:::i;:::-;7978:11;7906:83;;:::i;:::-;7876:113;;:::i;:::-;7999:7;;:16;:::i;:::-;;:27;:41;:::i;:::-;7635:412::o;7807:59::-;;;:::i;:::-;;;7635:412;;;;;;:::i;:::-;:::o;719:28844::-;;;:::o;22713:86::-;22762:6;;:::i;:::-;22787:5;;;;:::i;:::-;22780:12;:::o;4689:228:5:-;4716:196;;;;;;4913:1;;:::i;:::-;4689:228::o;3227:62::-;;;:::i;:::-;3281:1;;:::i;:::-;3227:62::o;4573:116::-;4671:10;;4679:1;4671:10;:::i;:::-;;:::i;:::-;4573:116::o;:::-;;;:::i;:::-;:::o;23160:95:0:-;23210:7;;:::i;:::-;23236:12;;;;:::i;:::-;23229:19;:::o;719:28844::-;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;3365:442:5:-;3411:7;;:::i;:::-;3421:196;;;;;;;3792:8;;3653:20;;:::i;:::-;3674:102;;;3792:8;;:::i;:::-;3785:15;:::o;4259:669:0:-;;4924:1;4259:669;;;3914:6;3921:16;3938:15;3954:13;;4369:554;;;;;;;;;;;;;;;4924:1;:::i;:::-;4259:669::o;719:28844::-;;;;:::o;:::-;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;:::o;:::-;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;4069:1815:6:-;;;;4191:26;;:::i;:::-;4218:102;;;;4403:16;4404:15;;:1;:15;;:::i;:::-;4403:16;;:::i;:::-;4420:115;;;;4565:14;;:1;:14;;:::i;:::-;4580:112;;;5055:11;:16;;5070:1;5055:16;:::i;:::-;;;:::i;:::-;;:34;;;4069:1815;5090:113;;;;5232:16;;5247:1;5232:16;:::i;:::-;;;:::i;:::-;;:50;;;4069:1815;5410:13;5212:70;5283:113;;;;5410:13;;:::i;:::-;:30;;;;4069:1815;5406:91;;;5766:1;5523;5506:18;;5523:1;5506:18;:::i;:::-;:14;:1;:14;:18;:::i;:::-;5550:14;;:1;:14;;:::i;:::-;5565:116;;5694:14;5690:67;;4069:1815;5766:1;:::i;:::-;5777:101;;4069:1815;;:::o;5777:101::-;5811:23;5829:5;5811:15;5829:5;5811:1;:15;:23;:::i;:::-;5865:1;5853:14;;;;;:::i;:::-;;;;;;:::i;:::-;;;;5777:101;;;5690:67;5724:22;5742:4;5724:15;:1;:15;:22;:::i;:::-;5690:67;;5406:91;5463:23;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;5410:30;5427:13;5428:12;;5427:13;;:::i;:::-;5410:30;;;5232:50;5260:4;5410:13;5252;5260:4;5252:13;:::i;:::-;:25;:30;;5281:1;5252:30;:::i;:::-;;;:::i;:::-;;5232:50;;;;5055:34;5075:14;;5055:34;;3747:512:0;4225:27;3747:512;4084:34;4210:42;3747:512;;4060:14;4170:30;3747:512;4005:10;;;:::i;:::-;;;:::i;:::-;4060:14;;:::i;:::-;4084:34;;:::i;:::-;4128:32;4145:15;4128:32;;:::i;:::-;4170:30;;:::i;:::-;4225:27;:::i;:::-;4210:42;;:::i;:::-;3747:512::o;:::-;;;;;;;:::i;:::-;:::o;23261:121::-;23320:7;;:::i;:::-;23346:12;:29;:12;;;:::i;:::-;23361:14;;;:::i;:::-;23346:29;;:::i;:::-;23339:36;:::o;719:28844::-;;;;;;;;;;;;;;;;:::o;:::-;;:::i;18864:2603::-;18907:280;;;;;;;;;19196:40;19220:16;:7;19228;19220:16;;:::i;:::-;;19196:40;:::i;:::-;19237:102;;;20493:22;;19348:52;19372:28;:16;:7;19380;19372:16;;:::i;:::-;19389:10;19372:28;;:::i;:::-;19348:52;:::i;:::-;19401:102;;;;19512:28;19519:15;;:8;:15;;:::i;:::-;:20;;19538:1;19519:20;:::i;:::-;;;:::i;:::-;;;19512:28;:::i;:::-;19562:7;;;:::i;:::-;20257:19;;19605:147;19655:15;;:8;:15;;:::i;:::-;19684:25;;:8;:25;;:::i;:::-;19723:19;:8;;:19;;:::i;:::-;19605:147;;:::i;:::-;19753:114;;;;19877:49;19895:31;:15;;:8;:15;;:::i;:::-;19913:13;19895:31;;:::i;:::-;19877:15;:8;:15;:49;:::i;:::-;19953:15;;:8;:15;;:::i;:::-;19969:116;;20095:135;20117:113;20166:15;;:8;:15;;:::i;:::-;20195:25;;:8;:25;;:::i;:::-;20117:113;;:::i;:::-;20095:8;;:19;:135;:::i;:::-;20257:19;;:::i;:::-;20277:116;;20403:63;20428:38;:22;:8;;:22;;:::i;:::-;20453:13;20428:38;;:::i;:::-;20403:8;;:22;:63;:::i;:::-;20493:22;;:::i;:::-;20516:116;;20803:658;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18864:2603::o;25378:85::-;25423:7;;:::i;:::-;25449;;;;:::i;:::-;25442:14;:::o;26180:2668::-;26814:47;26838:23;28556:138;26180:2668;26281:7;;:::i;:::-;26291:362;;;;;;;;;;;;;26838:16;26662:40;26686:16;:7;26694;26686:16;;:::i;:::-;;26662:40;:::i;:::-;26703:102;;;;26838:7;:16;:::i;:::-;:23;:::i;:::-;26814:47;:::i;:::-;26862:102;;;27001:25;;:8;:25;;:::i;:::-;27027:117;;;;27173:22;;:8;:22;;:::i;:::-;27196:109;;;;27319:15;:46;;27337:28;;:8;:28;;:::i;:::-;27319:46;:::i;:::-;;;:::i;:::-;;:63;;;26180:2668;27315:1206;;26180:2668;28606:8;;28665:19;;28606:15;;:8;:15;;:::i;:::-;28635:16;28665:8;:19;;:::i;:::-;28556:138;;:::i;:::-;28695:115;;;28820:21;:::o;27315:1206::-;27422:15;27859:109;27860:101;28172:144;27422:15;;;;:30;;27440:12;;;:::i;:::-;27422:30;:::i;:::-;;;:::i;:::-;;:95;;;;27915:45;27916:25;:19;;27861:33;27737:34;27471:15;27422:95;27560:28;;:8;:28;;:::i;:::-;:59;;27607:12;;;:::i;:::-;27560:59;:::i;:::-;;;:::i;:::-;;:137;;;;27638:28;;:8;:28;;:::i;:::-;27560:137;27737:34;;:::i;:::-;27879:15;;;:::i;:::-;27861:33;;:::i;:::-;27916:8;:19;;:::i;:::-;:25;27938:3;27916:25;:::i;:::-;;;:::i;:::-;27945:15;;;:::i;:::-;27915:45;;:::i;:::-;27860:101;;:::i;:::-;27859:109;27965:3;27859:109;:::i;:::-;;;:::i;:::-;28294:8;28172:144;;:::i;:::-;27315:1206;;;;;27560:137;27685:12;;;:::i;:::-;27560:137;;27422:95;27915:45;27916:25;:19;;27861:33;27737:34;27505:12;;;:::i;:::-;27422:95;;27319:63;27369:8;;:13;;27381:1;27369:13;:::i;:::-;;;:::i;:::-;;;27319:63;;719:28844;;;;:::i;:::-;;:::o;5465:608::-;5504:280;;;;;;;;;5797:15;:31;;5816:12;;;:::i;:::-;5797:31;:::i;:::-;;;:::i;:::-;;;5793:98;;6044:22;6029:37;5901:5;5960:7;5901:5;;;:::i;:::-;5932:10;5945:13;5953:4;5945:13;:::i;:::-;5960:7;;;;:::i;:::-;5978:41;;5994:25;:7;6004:15;;;:::i;:::-;5994:25;;:::i;:::-;5978:41;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;6044:12;;;:::i;:::-;:22;:::i;:::-;6029:37;;:::i;:::-;5465:608::o;5793:98::-;5851:29;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;22609:98;22659:7;;:::i;:::-;22685:15;;;;:::i;:::-;22678:22;:::o;11358:2477::-;;11417:364;;;;;;;;;;;;11790:40;11814:16;:7;11822;11814:16;;:::i;:::-;;11790:40;:::i;:::-;11831:102;;;11942:52;11966:28;:16;:7;11974;11966:16;;:::i;:::-;11983:10;11966:28;;:::i;:::-;11942:52;:::i;:::-;11995:102;;;12118:7;;;:::i;:::-;12141:15;;:8;:15;;:::i;:::-;:19;;12159:1;12141:19;:::i;:::-;;;:::i;:::-;;12137:410;;11358:2477;13298:19;12557:8;13136:135;13158:113;12557:8;12664:7;12557:16;;13298:19;12557:8;:16;;:::i;:::-;12612:10;12637:13;12645:4;12637:13;:::i;:::-;12664:7;;;;:::i;:::-;12691:57;12716:32;:22;;:8;:22;;:::i;:::-;12741:7;12716:32;;:::i;:::-;12691:22;:8;:22;:57;:::i;:::-;12775:22;;:8;:22;;:::i;:::-;12798:116;;12924:43;12942:25;:15;;:8;:15;;:::i;:::-;12960:7;12942:25;;:::i;:::-;12924:15;:8;:15;:43;:::i;:::-;12994:15;;:8;:15;;:::i;:::-;13010:116;;13236:25;;13207:15;;:8;:15;;:::i;:::-;13236:8;:25;;:::i;:::-;13158:113;;:::i;:::-;13136:8;;:19;:135;:::i;:::-;13298:19;;:::i;:::-;13318:116;;13500:329;;;;;;;11358:2477::o;12137:410::-;12201:163;12255:15;;:8;:15;;:::i;:::-;12288:25;;:8;:25;;:::i;:::-;12331:19;;:8;:19;;:::i;:::-;12201:163;;:::i;:::-;12393:5;12378:31;:22;12385:14;12393:5;;;:::i;:::-;12385:14;:::i;:::-;12378:22;:::i;:::-;:31;:::i;:::-;;:59;:31;12410:10;;12422:14;12378:59;;12422:14;12378:59;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;13298:19;12378:59;12511:25;;13158:113;12378:59;13298:19;12378:59;13136:135;12378:59;;;12137:410;12522:14;12511:25;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;12137:410;;;;;;;;12378:59;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;:::i;22805:95::-;22855:7;;:::i;:::-;22881:12;;;;:::i;:::-;22874:19;:::o;719:28844::-;;;;;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;3431:178::-;;;3475:52;;:40;:12;;;:::i;:::-;:40;:::i;:::-;;3516:10;3475:52;3516:10;3475:52;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;3474:53;3475:52;;;;;3431:178;3474:53;;;:::i;:::-;3470:122;;3601:1;;;:::i;:::-;3431:178::o;3470:122::-;3550:31;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;3475:52;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;719:28844::-;;:::o;:::-;;;;;;;:::o;:::-;;;:::o;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;:::o;:::-;;:::o;:::-;;;;;;;;:::i;:::-;;:::i;:::-;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;:::o;:::-;;:::i;21715:806::-;21870:47;21715:806;21894:16;:23;21715:806;21894:7;:16;:::i;:::-;:23;:::i;:::-;21870:47;:::i;:::-;21918:102;;;22075:25;;:8;:25;;:::i;:::-;:43;;22103:15;22075:43;:::i;:::-;;;:::i;:::-;;22071:114;;22473:24;:29;22222:17;22194:45;22473:41;22222:17;22194:25;:8;:25;:45;:::i;:::-;22266:25;;:8;:25;;:::i;:::-;22292:116;;22473:24;:29;:::i;:::-;22503:10;22473:41;;:::i;:::-;21715:806::o;22071:114::-;22141:33;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;21715:806;;;;;;:::i;:::-;:::o;24706:666::-;25184:47;25208:23;25350:15;24706:666;25208:16;25350:15;24706:666;24803:7;;:::i;:::-;24813:362;;;;;;;;;;;;;25208:7;:16;:::i;:::-;:23;:::i;:::-;25184:47;:::i;:::-;25232:102;;;25350:15;;:::i;:::-;25343:22;:::o;5304:329:5:-;5629:1;5304:329;5140:8;5347:281;;;;;;;;5629:1;:::i;:::-;5304:329::o;3227:62::-;3281:1;3227:62;;;:::i;:::-;3281:1;:::i;:::-;3227:62::o;5066:238::-;5173:8;:22;;5185:10;5193:1;5185:10;:::i;:::-;5173:22;:::i;:::-;;;:::i;:::-;;5169:91;;5288:8;;;:::i;:::-;5066:238::o;5169:91::-;5218:31;5238:10;5246:1;5238:10;:::i;:::-;5218:31;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;5066:238;;;;:::i;:::-;:::o;719:28844:0:-;;;;:::i;:::-;;:::o;:::-;;;:::o;:::-;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;:::o;:::-;;;:::i;:::-;;:::o;:::-;;;:::o;:::-;;;;;;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;:::o;:::-;;;;:::i;:::-;;:::o;25469:667::-;25956:46;25469:667;25979:16;:23;25469:667;25571:11;;:::i;:::-;25585:362;;;;;;;;;;;;;25979:7;:16;:::i;:::-;:23;:::i;:::-;25956:46;:::i;:::-;26003:102;;;26114:15;:::o;719:28844::-;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;:::o;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;;;;:::o;:::-;;:::i;23506:1074::-;;;;23628:16;;:::i;:::-;23646;;;:::i;:::-;23716:5;23702:27;23716:12;:5;:12;:::i;:::-;23702:27;:::i;:::-;23730:102;;;;23869:27;23883:12;:5;:12;:::i;:::-;23869:27;:::i;:::-;23897:102;;;;24062:10;24071:1;24062:10;:::i;:::-;24092:3;24074:1;:16;;24078:12;:5;:12;:::i;:::-;24074:16;:::i;:::-;;;:::i;:::-;;;;;24092:3;24138:6;24111:44;24125:30;24138:6;24146:8;;:5;24152:1;24146:8;;:::i;:::-;;:::i;:::-;24125:30;;:::i;:::-;24111:44;:8;24120:1;;24111:44;;;:::i;:::-;;:::i;:::-;24182:11;;:8;24191:1;24182:11;;:::i;:::-;;:::i;:::-;24194:116;;24323:48;24337:34;24354:6;24362:8;;:5;24368:1;24362:8;;:::i;:::-;;:::i;:::-;24337:34;;:::i;:::-;24323:48;:8;24332:1;;24323:48;;;:::i;:::-;;:::i;:::-;24398:11;;:8;24407:1;24398:11;;:::i;:::-;;:::i;:::-;24410:116;;24092:3;:::i;:::-;24062:10;;24074:16;;;;;24546:27;;:::o;3880:358:5:-;3926:196;;;;;;4135:7;;:::i;:::-;:23;;4146:12;;:::i;:::-;4135:23;:::i;:::-;;;:::i;:::-;;4131:101;;3880:358::o;4131:101::-;4181:40;4208:12;;:::i;:::-;4181:40;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;719:28844:0;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;91:690:1:-;725:27;724:50;91:690;;724:36;91:690;236:7;;:::i;:::-;246:462;;;;;;;;;;;;;;;;725:27;:::i;:::-;724:36;756:4;724:36;:::i;:::-;;;:::i;:::-;:50;:::i;:::-;717:57;:::o;787:729::-;1473:36;787:729;1474:27;787:729;902:7;;:::i;:::-;912:374;;;;;;;;;;;;;1474:27;:::i;:::-;1473:36;1505:4;1473:36;:::i;:::-;;;:::i;:::-;1466:43;:::o;719:28844:0:-;;;;:::o;:::-;6593:120;719:28844;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;1219:599:18:-;;1767:43;;1219:599;1767:43;;1219:599;1292:439;;;;;;;;;;;;;;;1782:14;1767:43;1782:14;1799:2;1803:5;1767:43;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;:::i;:::-;1219:599::o;719:28844:0:-;;;;:::i;:::-;;:::o;5547:508:7:-;5593:196;;;;;;5815:13;5823:4;5815:13;:::i;:::-;:23;;5832:6;5815:23;:::i;:::-;;;:::i;:::-;;:120;;;;5547:508;5798:251;;5547:508::o;5798:251::-;6009:29;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;5815:120;5893:32;;;:::i;:::-;:42;;5929:6;5893:42;:::i;:::-;;;:::i;:::-;;;5815:120;;5063:346:0;5405:1;5063:346;5033:17;5114:290;;;;;;;;5405:1;:::i;:::-;5063:346::o;3227:62:5:-;;;;:::i;:::-;:::o;4934:129:0:-;;;;:::i;:::-;:::o;719:28844::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;7393:909:7:-;;;7479:371;;;;;;;;;;;;7863:52;;:50;:36;7881:17;7863:36;:::i;:::-;:50;:::i;:::-;;:52;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;7393:909;7859:437;;;;;;;;;;;;;;7393:909::o;7859:437::-;8225:60;8267:17;8225:60;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;7859:437;7957:4;;:40;;7965:32;;:::i;:::-;7957:40;:::i;:::-;;;:::i;:::-;;7953:120;;8135:4;8116:17;;;8135:4;:::i;:::-;7859:437;;7953:120;8024:34;8053:4;8024:34;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;7863:52;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;1522:860:1;2258:117;1522:860;2293:44;2292:83;1522:860;1715:7;;:::i;:::-;1725:505;;;;;;;;;;;;;;;;2293:37;:44;2333:4;2293:44;:::i;:::-;;;:::i;:::-;2292:83;:::i;:::-;2258:117;;:::i;:::-;2239:136;:::o;6172:409:7:-;6225:196;;;;;;6434:13;6442:4;6434:13;:::i;:::-;:23;;6451:6;6434:23;:::i;:::-;;;:::i;:::-;;6430:145;;6172:409::o;6430:145::-;6535:29;;:::i;:::-;6009;;;6535;;;;;;;;:::i;:::-;;;;719:28844:0;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;5787:891:5:-;5851:281;;;;;;;;;6168:20;;:::i;:::-;6189:102;;;6492:8;;6319;:1;;:8;;:::i;:::-;6328:109;;;;6446:19;6457:8;6446:1;;:8;:19;:::i;:::-;6492:8;;:::i;:::-;6501:116;;6662:8;6631:40;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;;5787:891::o;1192:355::-;1271:196;;;;;;1476:65;1192:355;:::o;10902:366:6:-;10993:196;;;;;;11198:64;10902:366;:::o;2197:337:5:-;2530:1;2197:337;2112:12;2244:285;;;;;;;;2530:1;:::i;:::-;2197:337::o;8172:76:6:-;8240:1;8172:76;;;:::i;:::-;8240:1;:::i;:::-;8172:76::o;2043:154:5:-;2177:12;2043:154;2177:12;:::i;:::-;2043:154::o;:::-;;;;:::i;:::-;:::o;3052:228:7:-;3079:196;;;;;;3276:1;;:::i;:::-;3052:228::o;8172:76:6:-;;;:::i;:::-;:::o;2970:82:7:-;;;:::i;:::-;:::o;719:28844:0:-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;:::o;2057:708:18:-;2704:53;2057:708;2704:53;;2057:708;;2704:53;2057:708;2148:520;;;;;;;;;;;;;;;;;;2719:18;2704:53;2719:18;2740:4;2746:2;2750:5;2704:53;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;:::i;:::-;2057:708::o;1373:292:8:-;1426:7;;:::i;:::-;1436:196;;;;;;;1648:10;1641:17;:::o;13488:1302:18:-;;14207:421;;13488:1302;13559:359;;;;;;;;;;;;13927:18;;:::i;:::-;13946:111;;14066:19;;:::i;:::-;14086:112;;14207:421;;;;;;;;;;;;;;;14642:10;:15;;14656:1;14642:15;:::i;:::-;;;:::i;:::-;;:68;;;;14668:5;14660:14;14668:5;14660:14;:::i;:::-;:26;:31;;14690:1;14660:31;:::i;:::-;;;:::i;:::-;;14642:68;14638:146;;13488:1302;:::o;14638:146::-;14758:14;14733:40;14766:5;14758:14;:::i;:::-;14733:40;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;14642:68;14694:16;;14709:1;14694:16;:::i;:::-;;;:::i;:::-;;;14642:68;;14207:421;;;;;;;;;;1441:334:15;1493:7;;:::i;:::-;1503:196;;;;;;;1715:53;;:47;1742:19;;:::i;:::-;1715:47;:::i;:::-;:53;;:::i;:::-;1708:60;:::o;719:28844:0:-;;;:::o;2750:715:15:-;;2832:371;;;;;;;;;;;;3231:17;;;:::i;:::-;3282;3264:36;;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;;3315:11;:4;:11;:::i;:::-;:15;;3329:1;3315:15;:::i;:::-;;;:::i;:::-;;3311:148;;;;3346:53;3375:17;3346:53;:::i;:::-;;3311:148;2750:715::o;3311:148::-;;;;;:::i;:::-;;;8363:337:6;8416:196;;;;;;8625:18;8626:17;;:::i;:::-;8625:18;;:::i;:::-;8621:73;;8363:337::o;8621:73::-;8666:17;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;2802:337:5;3135:1;2802:337;2619:12;2849:285;;;;;;;;3135:1;:::i;:::-;2802:337::o;8172:76:6:-;8240:1;8172:76;;;:::i;:::-;8240:1;:::i;:::-;8172:76::o;2540:262:5:-;2663:12;:26;;2679:10;2687:1;2679:10;:::i;:::-;2663:26;:::i;:::-;;;:::i;:::-;;2659:95;;2782:12;;;:::i;:::-;2540:262::o;2659:95::-;2712:31;2732:10;2740:1;2732:10;:::i;:::-;2712:31;;:::i;:::-;5218;;;;;;2712;;;;;;:::i;:::-;;;;2540:262;;;;:::i;:::-;:::o;1899:440:24:-;1984:277;;;;;;;;;1899:440;:::o;1867:571:15:-;1931:290;;;;;;;;;2234:17;:29;:34;;2267:1;2234:34;:::i;:::-;;;:::i;:::-;;2230:119;;2358:73;2414:17;2358:53;:47;2385:19;;:::i;:::-;2358:47;:::i;:::-;:53;:73;:::i;:::-;1867:571::o;2230:119::-;2291:47;2320:17;2291:47;;:::i;:::-;8225:60:7;;;;;;2291:47:15;;;;;;:::i;:::-;;;;8690:318;8727:196;;;;;;8936:9;:13;;8948:1;8936:13;:::i;:::-;;;:::i;:::-;;8932:70;;8690:318::o;8932:70::-;8972:19;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;719:28844:0;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;5749:715:19;6258:25;5749:715;6402:55;5749:715;5832:12;;:::i;:::-;5847:360;;;;;;;;;;;;;6258:6;6278:4;6258:25;;;;;;;;;;;:::i;:::-;6284:102;;;;6437:7;6446:10;6402:55;;:::i;:::-;6395:62;:::o;719:28844:0:-;;;:::o;10456:316:6:-;10506:4;;:::i;:::-;10513:196;;;;;;;10725:40;;:26;;:::i;:::-;:40;;:::i;:::-;10718:47;:::o;6732:1032:19:-;;7354:8;6732:1032;6876:12;;:::i;:::-;6891:450;;;;;;;;;;;;;;;;7354:8;;:::i;:::-;7350:408;;;;7386:10;;:::i;7350:408::-;7602:17;:10;:17;:::i;:::-;:22;;7623:1;7602:22;:::i;:::-;;;:::i;:::-;;:49;;;7350:408;7598:119;;7737:10;7730:17;:::o;7598:119::-;7678:24;7695:6;7678:24;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;7602:49;7628:6;;:18;:23;;7650:1;7628:23;:::i;:::-;;;:::i;:::-;;7602:49;;8671:770;8727:283;;;;;;;;;9085:17;:10;:17;:::i;:::-;:21;;9105:1;9085:21;:::i;:::-;;;:::i;:::-;;9081:354;;;;9210:158;;;;;;9081:354;9405:19;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;",
                "storageLayout": {
                    "storage": [
                        {
                            "astId": 58,
                            "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_58_32_477/.certora_sources/src/GasBadStakingMining.sol:GasBadStakingMining",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "20",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "contractName": "IERC20",
                                "type": "Contract"
                            },
                            "label": "erc20",
                            "offset": 0,
                            "slot": "0",
                            "type": "t_contract(IERC20)2531"
                        },
                        {
                            "astId": 60,
                            "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_58_32_477/.certora_sources/src/GasBadStakingMining.sol:GasBadStakingMining",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint256",
                                "type": "Primitive"
                            },
                            "label": "rewardPerSecond",
                            "offset": 0,
                            "slot": "1",
                            "type": "t_uint256"
                        },
                        {
                            "astId": 62,
                            "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_58_32_477/.certora_sources/src/GasBadStakingMining.sol:GasBadStakingMining",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint256",
                                "type": "Primitive"
                            },
                            "label": "startTimestamp",
                            "offset": 0,
                            "slot": "2",
                            "type": "t_uint256"
                        },
                        {
                            "astId": 64,
                            "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_58_32_477/.certora_sources/src/GasBadStakingMining.sol:GasBadStakingMining",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint256",
                                "type": "Primitive"
                            },
                            "label": "endTimestamp",
                            "offset": 0,
                            "slot": "3",
                            "type": "t_uint256"
                        },
                        {
                            "astId": 67,
                            "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_58_32_477/.certora_sources/src/GasBadStakingMining.sol:GasBadStakingMining",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "20",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "contractName": "SalesFactory",
                                "type": "Contract"
                            },
                            "label": "salesFactory",
                            "offset": 0,
                            "slot": "4",
                            "type": "t_contract(SalesFactory)1706"
                        },
                        {
                            "astId": 69,
                            "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_58_32_477/.certora_sources/src/GasBadStakingMining.sol:GasBadStakingMining",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint256",
                                "type": "Primitive"
                            },
                            "label": "paidOut",
                            "offset": 0,
                            "slot": "5",
                            "type": "t_uint256"
                        },
                        {
                            "astId": 71,
                            "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_58_32_477/.certora_sources/src/GasBadStakingMining.sol:GasBadStakingMining",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint256",
                                "type": "Primitive"
                            },
                            "label": "totalRewards",
                            "offset": 0,
                            "slot": "6",
                            "type": "t_uint256"
                        },
                        {
                            "astId": 75,
                            "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_58_32_477/.certora_sources/src/GasBadStakingMining.sol:GasBadStakingMining",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "dynamicArrayBaseType": {
                                    "annotations": [
                                        {
                                            "numberOfBytes": "160",
                                            "type": "StorageAnnotation"
                                        }
                                    ],
                                    "astId": 55,
                                    "canonicalId": "src/GasBadStakingMining.sol|GasBadStakingMining.Pool",
                                    "containingContract": "GasBadStakingMining",
                                    "structMembers": [
                                        {
                                            "name": "lpToken",
                                            "type": {
                                                "annotations": [
                                                    {
                                                        "numberOfBytes": "20",
                                                        "offset": 0,
                                                        "slot": "0",
                                                        "type": "StorageAnnotation"
                                                    }
                                                ],
                                                "contractName": "IERC20",
                                                "type": "Contract"
                                            }
                                        },
                                        {
                                            "name": "allocPoint",
                                            "type": {
                                                "annotations": [
                                                    {
                                                        "numberOfBytes": "32",
                                                        "offset": 0,
                                                        "slot": "1",
                                                        "type": "StorageAnnotation"
                                                    }
                                                ],
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "lastRewardTimestamp",
                                            "type": {
                                                "annotations": [
                                                    {
                                                        "numberOfBytes": "32",
                                                        "offset": 0,
                                                        "slot": "2",
                                                        "type": "StorageAnnotation"
                                                    }
                                                ],
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "accERC20PerShare",
                                            "type": {
                                                "annotations": [
                                                    {
                                                        "numberOfBytes": "32",
                                                        "offset": 0,
                                                        "slot": "3",
                                                        "type": "StorageAnnotation"
                                                    }
                                                ],
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "totalDeposits",
                                            "type": {
                                                "annotations": [
                                                    {
                                                        "numberOfBytes": "32",
                                                        "offset": 0,
                                                        "slot": "4",
                                                        "type": "StorageAnnotation"
                                                    }
                                                ],
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        }
                                    ],
                                    "structName": "Pool",
                                    "type": "UserDefinedStruct"
                                },
                                "type": "Array"
                            },
                            "label": "poolArr",
                            "offset": 0,
                            "slot": "7",
                            "type": "t_array(t_struct(Pool)55_storage)dyn_storage"
                        },
                        {
                            "astId": 82,
                            "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_58_32_477/.certora_sources/src/GasBadStakingMining.sol:GasBadStakingMining",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "mappingKeyType": {
                                    "annotations": [
                                        {
                                            "numberOfBytes": "32",
                                            "type": "StorageAnnotation"
                                        }
                                    ],
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                },
                                "mappingValueType": {
                                    "annotations": [
                                        {
                                            "numberOfBytes": "32",
                                            "type": "StorageAnnotation"
                                        }
                                    ],
                                    "mappingKeyType": {
                                        "annotations": [
                                            {
                                                "numberOfBytes": "20",
                                                "type": "StorageAnnotation"
                                            }
                                        ],
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    },
                                    "mappingValueType": {
                                        "annotations": [
                                            {
                                                "numberOfBytes": "128",
                                                "type": "StorageAnnotation"
                                            }
                                        ],
                                        "astId": 43,
                                        "canonicalId": "src/GasBadStakingMining.sol|GasBadStakingMining.User",
                                        "containingContract": "GasBadStakingMining",
                                        "structMembers": [
                                            {
                                                "name": "amount",
                                                "type": {
                                                    "annotations": [
                                                        {
                                                            "numberOfBytes": "32",
                                                            "offset": 0,
                                                            "slot": "0",
                                                            "type": "StorageAnnotation"
                                                        }
                                                    ],
                                                    "primitiveName": "uint256",
                                                    "type": "Primitive"
                                                }
                                            },
                                            {
                                                "name": "rewardDebt",
                                                "type": {
                                                    "annotations": [
                                                        {
                                                            "numberOfBytes": "32",
                                                            "offset": 0,
                                                            "slot": "1",
                                                            "type": "StorageAnnotation"
                                                        }
                                                    ],
                                                    "primitiveName": "uint256",
                                                    "type": "Primitive"
                                                }
                                            },
                                            {
                                                "name": "tokensUnlockTime",
                                                "type": {
                                                    "annotations": [
                                                        {
                                                            "numberOfBytes": "32",
                                                            "offset": 0,
                                                            "slot": "2",
                                                            "type": "StorageAnnotation"
                                                        }
                                                    ],
                                                    "primitiveName": "uint256",
                                                    "type": "Primitive"
                                                }
                                            },
                                            {
                                                "name": "salesRegistered",
                                                "type": {
                                                    "annotations": [
                                                        {
                                                            "numberOfBytes": "32",
                                                            "offset": 0,
                                                            "slot": "3",
                                                            "type": "StorageAnnotation"
                                                        }
                                                    ],
                                                    "dynamicArrayBaseType": {
                                                        "annotations": [
                                                            {
                                                                "numberOfBytes": "20",
                                                                "type": "StorageAnnotation"
                                                            }
                                                        ],
                                                        "primitiveName": "address",
                                                        "type": "Primitive"
                                                    },
                                                    "type": "Array"
                                                }
                                            }
                                        ],
                                        "structName": "User",
                                        "type": "UserDefinedStruct"
                                    },
                                    "type": "Mapping"
                                },
                                "type": "Mapping"
                            },
                            "label": "userMap",
                            "offset": 0,
                            "slot": "8",
                            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(User)43_storage))"
                        },
                        {
                            "astId": 84,
                            "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_58_32_477/.certora_sources/src/GasBadStakingMining.sol:GasBadStakingMining",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint256",
                                "type": "Primitive"
                            },
                            "label": "totalAllocPoint",
                            "offset": 0,
                            "slot": "9",
                            "type": "t_uint256"
                        }
                    ],
                    "types": {
                        "t_address": {
                            "encoding": "inplace",
                            "label": "address",
                            "numberOfBytes": "20"
                        },
                        "t_array(t_address)dyn_storage": {
                            "base": "t_address",
                            "encoding": "dynamic_array",
                            "label": "address[]",
                            "numberOfBytes": "32"
                        },
                        "t_array(t_struct(Pool)55_storage)dyn_storage": {
                            "base": "t_struct(Pool)55_storage",
                            "encoding": "dynamic_array",
                            "label": "struct GasBadStakingMining.Pool[]",
                            "numberOfBytes": "32"
                        },
                        "t_contract(IERC20)2531": {
                            "encoding": "inplace",
                            "label": "contract IERC20",
                            "numberOfBytes": "20"
                        },
                        "t_contract(SalesFactory)1706": {
                            "encoding": "inplace",
                            "label": "contract SalesFactory",
                            "numberOfBytes": "20"
                        },
                        "t_mapping(t_address,t_struct(User)43_storage)": {
                            "encoding": "mapping",
                            "key": "t_address",
                            "label": "mapping(address => struct GasBadStakingMining.User)",
                            "numberOfBytes": "32",
                            "value": "t_struct(User)43_storage"
                        },
                        "t_mapping(t_uint256,t_mapping(t_address,t_struct(User)43_storage))": {
                            "encoding": "mapping",
                            "key": "t_uint256",
                            "label": "mapping(uint256 => mapping(address => struct GasBadStakingMining.User))",
                            "numberOfBytes": "32",
                            "value": "t_mapping(t_address,t_struct(User)43_storage)"
                        },
                        "t_struct(Pool)55_storage": {
                            "encoding": "inplace",
                            "label": "struct GasBadStakingMining.Pool",
                            "members": [
                                {
                                    "astId": 46,
                                    "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_58_32_477/.certora_sources/src/GasBadStakingMining.sol:GasBadStakingMining",
                                    "label": "lpToken",
                                    "offset": 0,
                                    "slot": "0",
                                    "type": "t_contract(IERC20)2531"
                                },
                                {
                                    "astId": 48,
                                    "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_58_32_477/.certora_sources/src/GasBadStakingMining.sol:GasBadStakingMining",
                                    "label": "allocPoint",
                                    "offset": 0,
                                    "slot": "1",
                                    "type": "t_uint256"
                                },
                                {
                                    "astId": 50,
                                    "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_58_32_477/.certora_sources/src/GasBadStakingMining.sol:GasBadStakingMining",
                                    "label": "lastRewardTimestamp",
                                    "offset": 0,
                                    "slot": "2",
                                    "type": "t_uint256"
                                },
                                {
                                    "astId": 52,
                                    "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_58_32_477/.certora_sources/src/GasBadStakingMining.sol:GasBadStakingMining",
                                    "label": "accERC20PerShare",
                                    "offset": 0,
                                    "slot": "3",
                                    "type": "t_uint256"
                                },
                                {
                                    "astId": 54,
                                    "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_58_32_477/.certora_sources/src/GasBadStakingMining.sol:GasBadStakingMining",
                                    "label": "totalDeposits",
                                    "offset": 0,
                                    "slot": "4",
                                    "type": "t_uint256"
                                }
                            ],
                            "numberOfBytes": "160"
                        },
                        "t_struct(User)43_storage": {
                            "encoding": "inplace",
                            "label": "struct GasBadStakingMining.User",
                            "members": [
                                {
                                    "astId": 35,
                                    "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_58_32_477/.certora_sources/src/GasBadStakingMining.sol:GasBadStakingMining",
                                    "label": "amount",
                                    "offset": 0,
                                    "slot": "0",
                                    "type": "t_uint256"
                                },
                                {
                                    "astId": 37,
                                    "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_58_32_477/.certora_sources/src/GasBadStakingMining.sol:GasBadStakingMining",
                                    "label": "rewardDebt",
                                    "offset": 0,
                                    "slot": "1",
                                    "type": "t_uint256"
                                },
                                {
                                    "astId": 39,
                                    "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_58_32_477/.certora_sources/src/GasBadStakingMining.sol:GasBadStakingMining",
                                    "label": "tokensUnlockTime",
                                    "offset": 0,
                                    "slot": "2",
                                    "type": "t_uint256"
                                },
                                {
                                    "astId": 42,
                                    "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_58_32_477/.certora_sources/src/GasBadStakingMining.sol:GasBadStakingMining",
                                    "label": "salesRegistered",
                                    "offset": 0,
                                    "slot": "3",
                                    "type": "t_array(t_address)dyn_storage"
                                }
                            ],
                            "numberOfBytes": "128"
                        },
                        "t_uint256": {
                            "encoding": "inplace",
                            "label": "uint256",
                            "numberOfBytes": "32"
                        }
                    }
                },
                "transientStorageLayout": null,
                "varmap": ""
            }
        ],
        "legacyStructLinking": {},
        "library_addresses": [],
        "origSourceDir": ".pre_autofinders.0",
        "primary_contract": "GasBadStakingMining",
        "primary_contract_address": "00000000ce4604a0000000000000000000000014",
        "prototypeFor": [],
        "sdc_name": "GasBadStakingMining.sol_0",
        "sourceDir": ".post_autofinders.0",
        "srclist": {
            "0": "src/GasBadStakingMining.sol",
            "1": "src/LibCalReward.sol",
            "2": "src/StakingMining.sol",
            "3": "src/sale/IceFrogSale.sol",
            "4": "src/sale/SalesFactory.sol",
            "5": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
            "6": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
            "7": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
            "8": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
            "9": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol",
            "10": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol",
            "11": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol",
            "12": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol",
            "13": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol",
            "14": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
            "15": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
            "16": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
            "17": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
            "18": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
            "19": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol",
            "20": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Context.sol",
            "21": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Errors.sol",
            "22": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Panic.sol",
            "23": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol",
            "24": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
            "25": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
            "26": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
            "27": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol",
            "28": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
            "29": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
            "30": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol",
            "31": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol"
        },
        "state": {},
        "structLinkingInfo": {}
    },
    "StakingMining_00000000ce4604a000000000000000000000003d": {
        "contracts": [
            {
                "address": "00000000ce4604a000000000000000000000003d",
                "allMethods": [
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "UPGRADE_INTERFACE_VERSION",
                        "notpayable": true,
                        "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            }
                        ],
                        "sighash": "ad3cb1cc",
                        "sourceBytes": {
                            "begin": 1819,
                            "size": 58
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "_authorizeUpgrade",
                        "notpayable": true,
                        "originalFile": null,
                        "paramNames": [
                            "newImplementation"
                        ],
                        "returns": [],
                        "sighash": "0",
                        "sourceBytes": null,
                        "stateMutability": "nonpayable",
                        "visibility": "internal"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "contractName": "IERC20",
                                    "type": "Contract"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "add",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [
                            "_allocPoint",
                            "_lpToken",
                            "_withUpdate"
                        ],
                        "returns": [],
                        "sighash": "1eaaa045",
                        "sourceBytes": {
                            "begin": 5290,
                            "size": 652
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "compound",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [
                            "_poolId"
                        ],
                        "returns": [],
                        "sighash": "aa5f7e26",
                        "sourceBytes": {
                            "begin": 10406,
                            "size": 835
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "constructor",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [],
                        "returns": [],
                        "sighash": "0",
                        "sourceBytes": {
                            "begin": 4120,
                            "size": 53
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "deposit",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [
                            "_poolId",
                            "_amount"
                        ],
                        "returns": [],
                        "sighash": "e2bbb158",
                        "sourceBytes": {
                            "begin": 7653,
                            "size": 1082
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "emergencyWithdraw",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [
                            "_poolId"
                        ],
                        "returns": [],
                        "sighash": "5312ea8e",
                        "sourceBytes": {
                            "begin": 9946,
                            "size": 454
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "fund",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [
                            "_amount"
                        ],
                        "returns": [],
                        "sighash": "ca1d209d",
                        "sourceBytes": {
                            "begin": 4804,
                            "size": 328
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "getDeposited",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [
                            "_poolId",
                            "_user"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "e86facc5",
                        "sourceBytes": {
                            "begin": 13698,
                            "size": 202
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getEndTimestamp",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "74e94deb",
                        "sourceBytes": {
                            "begin": 12664,
                            "size": 95
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getPaidOut",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "b3458b4b",
                        "sourceBytes": {
                            "begin": 13906,
                            "size": 85
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "dynamicArrayBaseType": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    },
                                    "type": "Array"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "getPendingAndDepositedForUsers",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [
                            "users",
                            "poolId"
                        ],
                        "returns": [
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "dynamicArrayBaseType": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    },
                                    "type": "Array"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "dynamicArrayBaseType": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    },
                                    "type": "Array"
                                }
                            }
                        ],
                        "sighash": "fcfc1b14",
                        "sourceBytes": {
                            "begin": 13010,
                            "size": 562
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "getPendingReward",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [
                            "_poolId",
                            "_user"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "c59b1f3c",
                        "sourceBytes": {
                            "begin": 14244,
                            "size": 1761
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "getPoolInfo",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [
                            "poolId"
                        ],
                        "returns": [
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "astId": 55,
                                    "canonicalId": "src/StakingMining.sol|StakingMining.Pool",
                                    "containingContract": "StakingMining",
                                    "structMembers": [
                                        {
                                            "name": "lpToken",
                                            "type": {
                                                "contractName": "IERC20",
                                                "type": "Contract"
                                            }
                                        },
                                        {
                                            "name": "allocPoint",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "lastRewardTimestamp",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "accERC20PerShare",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "totalDeposits",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        }
                                    ],
                                    "structName": "Pool",
                                    "type": "UserDefinedStruct"
                                }
                            }
                        ],
                        "sighash": "2f380b35",
                        "sourceBytes": {
                            "begin": 12892,
                            "size": 112
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getPoolNum",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "212af18d",
                        "sourceBytes": {
                            "begin": 13600,
                            "size": 92
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getRewardPerSec",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "e0d41c02",
                        "sourceBytes": {
                            "begin": 12113,
                            "size": 98
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getRewardToken",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "contractName": "IERC20",
                                    "type": "Contract"
                                }
                            }
                        ],
                        "sighash": "69940d79",
                        "sourceBytes": {
                            "begin": 12217,
                            "size": 86
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getStakingMiningDuration",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "a242057a",
                        "sourceBytes": {
                            "begin": 12765,
                            "size": 121
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getStartTimestamp",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "1f89f25e",
                        "sourceBytes": {
                            "begin": 12559,
                            "size": 99
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getTotalAllocPoint",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "3a58b91a",
                        "sourceBytes": {
                            "begin": 12410,
                            "size": 101
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getTotalPending",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "3bd05400",
                        "sourceBytes": {
                            "begin": 16061,
                            "size": 427
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getTotalRewards",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "e627f2db",
                        "sourceBytes": {
                            "begin": 12309,
                            "size": 95
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "getUserInfoInPool",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [
                            "_poolId",
                            "_user"
                        ],
                        "returns": [
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "astId": 43,
                                    "canonicalId": "src/StakingMining.sol|StakingMining.User",
                                    "containingContract": "StakingMining",
                                    "structMembers": [
                                        {
                                            "name": "amount",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "rewardDebt",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "tokensUnlockTime",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "salesRegistered",
                                            "type": {
                                                "dynamicArrayBaseType": {
                                                    "primitiveName": "address",
                                                    "type": "Primitive"
                                                },
                                                "type": "Array"
                                            }
                                        }
                                    ],
                                    "structName": "User",
                                    "type": "UserDefinedStruct"
                                }
                            }
                        ],
                        "sighash": "f70fd81c",
                        "sourceBytes": {
                            "begin": 13997,
                            "size": 203
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "contractName": "IERC20",
                                    "type": "Contract"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "initialize",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [
                            "_erc20",
                            "_rewardPerSecond",
                            "_startTimestamp",
                            "_salesFactory"
                        ],
                        "returns": [],
                        "sighash": "9e3d87cd",
                        "sourceBytes": {
                            "begin": 4199,
                            "size": 445
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "massUpdatePools",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [],
                        "returns": [],
                        "sighash": "630b5ba1",
                        "sourceBytes": {
                            "begin": 6439,
                            "size": 186
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "owner",
                        "notpayable": true,
                        "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "8da5cb5b",
                        "sourceBytes": {
                            "begin": 2441,
                            "size": 144
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "proxiableUUID",
                        "notpayable": true,
                        "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "bytes32",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "52d1902d",
                        "sourceBytes": {
                            "begin": 3708,
                            "size": 134
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "renounceOwnership",
                        "notpayable": true,
                        "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
                        "paramNames": [],
                        "returns": [],
                        "sighash": "715018a6",
                        "sourceBytes": {
                            "begin": 3155,
                            "size": 101
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "set",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [
                            "_poolId",
                            "_allocPoint",
                            "_withUpdate"
                        ],
                        "returns": [],
                        "sighash": "64482f79",
                        "sourceBytes": {
                            "begin": 5988,
                            "size": 366
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setSalesFactory",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [
                            "_salesFactory"
                        ],
                        "returns": [],
                        "sighash": "3dfcb861",
                        "sourceBytes": {
                            "begin": 11247,
                            "size": 236
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setTokensUnlockTime",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [
                            "_poolId",
                            "_user",
                            "_tokensUnlockTime"
                        ],
                        "returns": [],
                        "sighash": "e6f04acc",
                        "sourceBytes": {
                            "begin": 11489,
                            "size": 536
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "transferOwnership",
                        "notpayable": true,
                        "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
                        "paramNames": [
                            "newOwner"
                        ],
                        "returns": [],
                        "sighash": "f2fde38b",
                        "sourceBytes": {
                            "begin": 3405,
                            "size": 215
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "updatePool",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [
                            "_pid"
                        ],
                        "returns": [],
                        "sighash": "51eb05a6",
                        "sourceBytes": {
                            "begin": 6684,
                            "size": 929
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "PackedBytes"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "upgradeToAndCall",
                        "notpayable": false,
                        "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
                        "paramNames": [
                            "newImplementation",
                            "data"
                        ],
                        "returns": [],
                        "sighash": "4f1ef286",
                        "sourceBytes": {
                            "begin": 4161,
                            "size": 214
                        },
                        "stateMutability": "payable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "version",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "54fd4d50",
                        "sourceBytes": {
                            "begin": 12031,
                            "size": 76
                        },
                        "stateMutability": "pure",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "withdraw",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [
                            "_poolId",
                            "_amount"
                        ],
                        "returns": [],
                        "sighash": "441a3e70",
                        "sourceBytes": {
                            "begin": 8831,
                            "size": 1074
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    }
                ],
                "bytecode": "",
                "compilerName": "solc",
                "compilerParameters": {
                    "optimizerOn": false,
                    "optimizerRuns": null,
                    "type": "SolcParameters",
                    "viaIR": true
                },
                "compilerVersion": "0.8.24",
                "constructorBytecode": "60a06040523462000044576200001462000054565b6200001e6200004a565b615a536200037d8239608051818181614653015281816146bf0152614ad50152615a5390f35b62000050565b60405190565b5f80fd5b6200005e620000b6565b62000068620001d3565b565b60018060a01b031690565b90565b620000916200008b62000097926200006a565b62000075565b6200006a565b90565b620000a59062000078565b90565b620000b3906200009a565b90565b620000c130620000a8565b608052565b60401c90565b60ff1690565b620000e1620000e791620000c6565b620000cc565b90565b620000f69054620000d2565b90565b5f0190565b5f1c90565b60018060401b031690565b6200011d6200012391620000fe565b62000103565b90565b6200013290546200010e565b90565b60018060401b031690565b5f1b90565b906200015860018060401b039162000140565b9181191691161790565b6200017b62000175620001819262000135565b62000075565b62000135565b90565b90565b90620001a16200019b620001a99262000162565b62000184565b825462000145565b9055565b620001b89062000135565b9052565b9190620001d1905f60208501940190620001ad565b565b64f196e5007d7c91b9fb50101edccde4110e4fe0000000000000000000000000ff82ffff19525f7c91b9fb50101edccde4110e4fe0000000000000000000000000ff82fffe19526200022462000311565b5f7c91b9fb50101edccde4110e4fd0000000000000000000000000fffeffc21952620002525f8201620000ea565b620002ea57620002645f820162000126565b620002806200027960018060401b0362000135565b9162000135565b036200028a575b50565b6200029f905f60018060401b03910162000187565b60018060401b03620002e07fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d291620002d66200004a565b91829182620001bc565b0390a15f62000287565b620002f46200004a565b63f92ee8a960e01b8152806200030d60048201620000f9565b0390fd5b64f196e5007e7c91b9fb50101edccde4110e4fe0000000000000000000000000ff81ffff19525f7c91b9fb50101edccde4110e4fe0000000000000000000000000ff81fffe19527ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a009056fe60806040526004361015610013575b61119f565b61001d5f3561023c565b80631eaaa045146102375780631f89f25e14610232578063212af18d1461022d5780632f380b35146102285780633a58b91a146102235780633bd054001461021e5780633dfcb86114610219578063441a3e70146102145780634f1ef2861461020f57806351eb05a61461020a57806352d1902d146102055780635312ea8e1461020057806354fd4d50146101fb578063630b5ba1146101f657806364482f79146101f157806369940d79146101ec578063715018a6146101e757806374e94deb146101e25780638da5cb5b146101dd5780639e3d87cd146101d8578063a242057a146101d3578063aa5f7e26146101ce578063ad3cb1cc146101c9578063b3458b4b146101c4578063c59b1f3c146101bf578063ca1d209d146101ba578063e0d41c02146101b5578063e2bbb158146101b0578063e627f2db146101ab578063e6f04acc146101a6578063e86facc5146101a1578063f2fde38b1461019c578063f70fd81c146101975763fcfc1b140361000e57611168565b610fad565b610e89565b610e53565b610e1f565b610db0565b610d7c565b610d47565b610d14565b610cde565b610c7c565b610c47565b610b00565b610acb565b610a94565b610a19565b6109c2565b61098f565b61095a565b610904565b610897565b610862565b61082f565b6107fa565b6107a2565b610778565b610614565b6105b4565b61053e565b610509565b6104d4565b6103c1565b61038c565b610327565b60e01c90565b60405190565b5f80fd5b5f80fd5b5f80fd5b90565b61026081610254565b0361026757565b5f80fd5b9050359061027882610257565b565b60018060a01b031690565b61028e9061027a565b90565b61029a90610285565b90565b6102a681610291565b036102ad57565b5f80fd5b905035906102be8261029d565b565b151590565b6102ce816102c0565b036102d557565b5f80fd5b905035906102e6826102c5565b565b909160608284031261031d5761031a610303845f850161026b565b9361031181602086016102b1565b936040016102d9565b90565b61024c565b5f0190565b346103565761034061033a3660046102e8565b9161161a565b610348610242565b8061035281610322565b0390f35b610248565b5f91031261036557565b61024c565b61037390610254565b9052565b919061038a905f6020850194019061036a565b565b346103bc5761039c36600461035b565b6103b86103a761162b565b6103af610242565b91829182610377565b0390f35b610248565b346103f1576103d136600461035b565b6103ed6103dc611645565b6103e4610242565b91829182610377565b0390f35b610248565b9060208282031261040f5761040c915f0161026b565b90565b61024c565b90565b61042b6104266104309261027a565b610414565b61027a565b90565b61043c90610417565b90565b61044890610433565b90565b6104549061043f565b9052565b61046190610254565b9052565b906080806104bd9361047d5f8201515f86019061044b565b61048f60208201516020860190610458565b6104a160408201516040860190610458565b6104b360608201516060860190610458565b0151910190610458565b565b91906104d2905f60a08501940190610465565b565b34610504576105006104ef6104ea3660046103f6565b6117af565b6104f7610242565b918291826104bf565b0390f35b610248565b346105395761051936600461035b565b6105356105246117cf565b61052c610242565b91829182610377565b0390f35b610248565b3461056e5761054e36600461035b565b61056a61055961183f565b610561610242565b91829182610377565b0390f35b610248565b61057c81610285565b0361058357565b5f80fd5b9050359061059482610573565b565b906020828203126105af576105ac915f01610587565b90565b61024c565b346105e2576105cc6105c7366004610596565b611a0e565b6105d4610242565b806105de81610322565b0390f35b610248565b919060408382031261060f578061060361060c925f860161026b565b9360200161026b565b90565b61024c565b346106435761062d6106273660046105e7565b90611ac9565b610635610242565b8061063f81610322565b0390f35b610248565b5f80fd5b5f80fd5b601f801991011690565b634e487b7160e01b5f52604160045260245ffd5b9061067890610650565b810190811067ffffffffffffffff82111761069257604052565b61065a565b906106aa6106a3610242565b928361066e565b565b67ffffffffffffffff81116106ca576106c6602091610650565b0190565b61065a565b90825f939282370152565b909291926106ef6106ea826106ac565b610697565b9381855260208501908284011161070b57610709926106cf565b565b61064c565b9080601f8301121561072e5781602061072b933591016106da565b90565b610648565b9190916040818403126107735761074c835f8301610587565b92602082013567ffffffffffffffff811161076e5761076b9201610710565b90565b610250565b61024c565b61078c610786366004610733565b90611f4b565b610794610242565b8061079e81610322565b0390f35b346107d0576107ba6107b53660046103f6565b611fac565b6107c2610242565b806107cc81610322565b0390f35b610248565b90565b6107e1906107d5565b9052565b91906107f8905f602085019401906107d8565b565b3461082a5761080a36600461035b565b6108266108156122e3565b61081d610242565b918291826107e5565b0390f35b610248565b3461085d576108476108423660046103f6565b6122f6565b61084f610242565b8061085981610322565b0390f35b610248565b346108925761087236600461035b565b61088e61087d612553565b610885610242565b91829182610377565b0390f35b610248565b346108c5576108a736600461035b565b6108af612578565b6108b7610242565b806108c181610322565b0390f35b610248565b90916060828403126108ff576108fc6108e5845f850161026b565b936108f3816020860161026b565b936040016102d9565b90565b61024c565b346109335761091d6109173660046108ca565b91612772565b610925610242565b8061092f81610322565b0390f35b610248565b6109419061043f565b9052565b9190610958905f60208501940190610938565b565b3461098a5761096a36600461035b565b610986610975612783565b61097d610242565b91829182610945565b0390f35b610248565b346109bd5761099f36600461035b565b6109a7612812565b6109af610242565b806109b981610322565b0390f35b610248565b346109f2576109d236600461035b565b6109ee6109dd61281c565b6109e5610242565b91829182610377565b0390f35b610248565b610a0090610285565b9052565b9190610a17905f602085019401906109f7565b565b34610a4957610a2936600461035b565b610a45610a34612862565b610a3c610242565b91829182610a04565b0390f35b610248565b608081830312610a8f57610a64825f83016102b1565b92610a8c610a75846020850161026b565b93610a83816040860161026b565b93606001610587565b90565b61024c565b34610ac657610ab0610aa7366004610a4e565b92919091612de7565b610ab8610242565b80610ac281610322565b0390f35b610248565b34610afb57610adb36600461035b565b610af7610ae6612df5565b610aee610242565b91829182610377565b0390f35b610248565b34610b2e57610b18610b133660046103f6565b612e61565b610b20610242565b80610b2a81610322565b0390f35b610248565b67ffffffffffffffff8111610b5157610b4d602091610650565b0190565b61065a565b90610b68610b6383610b33565b610697565b918252565b5f7f352e302e30000000000000000000000000000000000000000000000000000000910152565b610b9e6005610b56565b90610bab60208301610b6d565b565b610bb5610b94565b90565b610bc0610bad565b90565b610bcb610bb8565b90565b5190565b60209181520190565b5f5b838110610bed575050905f910152565b806020918301518185015201610bdd565b610c1d610c26602093610c2b93610c1481610bce565b93848093610bd2565b95869101610bdb565b610650565b0190565b610c449160208201915f818403910152610bfe565b90565b34610c7757610c5736600461035b565b610c73610c62610bc3565b610c6a610242565b91829182610c2f565b0390f35b610248565b34610cac57610c8c36600461035b565b610ca8610c97613119565b610c9f610242565b91829182610377565b0390f35b610248565b9190604083820312610cd95780610ccd610cd6925f860161026b565b93602001610587565b90565b61024c565b34610d0f57610d0b610cfa610cf4366004610cb1565b9061312f565b610d02610242565b91829182610377565b0390f35b610248565b34610d4257610d2c610d273660046103f6565b613449565b610d34610242565b80610d3e81610322565b0390f35b610248565b34610d7757610d5736600461035b565b610d73610d6261356a565b610d6a610242565b91829182610377565b0390f35b610248565b34610dab57610d95610d8f3660046105e7565b90613580565b610d9d610242565b80610da781610322565b0390f35b610248565b34610de057610dc036600461035b565b610ddc610dcb613919565b610dd3610242565b91829182610377565b0390f35b610248565b9091606082840312610e1a57610e17610e00845f850161026b565b93610e0e8160208601610587565b9360400161026b565b90565b61024c565b34610e4e57610e38610e32366004610de5565b91613bbf565b610e40610242565b80610e4a81610322565b0390f35b610248565b34610e8457610e80610e6f610e69366004610cb1565b90613bcc565b610e77610242565b91829182610377565b0390f35b610248565b34610eb757610ea1610e9c366004610596565b613d99565b610ea9610242565b80610eb381610322565b0390f35b610248565b5190565b60209181520190565b60200190565b610ed890610285565b9052565b90610ee981602093610ecf565b0190565b60200190565b90610f10610f0a610f0384610ebc565b8093610ec0565b92610ec9565b905f5b818110610f205750505090565b909192610f39610f336001928651610edc565b94610eed565b9101919091610f13565b610f929160606080820192610f5e5f8201515f850190610458565b610f7060208201516020850190610458565b610f8260408201516040850190610458565b0151906060818403910152610ef3565b90565b610faa9160208201915f818403910152610f43565b90565b34610fde57610fda610fc9610fc3366004610cb1565b90613f1d565b610fd1610242565b91829182610f95565b0390f35b610248565b67ffffffffffffffff8111610ffb5760208091020190565b61065a565b5f80fd5b9092919261101961101482610fe3565b610697565b938185526020808601920283019281841161105657915b83831061103d5750505050565b6020809161104b8486610587565b815201920191611030565b611000565b9080601f830112156110795781602061107693359101611004565b90565b610648565b91906040838203126110be575f8301359067ffffffffffffffff82116110b9576110ad816110b693860161105b565b9360200161026b565b90565b610250565b61024c565b5190565b60209181520190565b60200190565b906110e381602093610458565b0190565b60200190565b9061110a6111046110fd846110c3565b80936110c7565b926110d0565b905f5b81811061111a5750505090565b90919261113361112d60019286516110d6565b946110e7565b910191909161110d565b90916111576111659360408401908482035f8601526110ed565b9160208184039101526110ed565b90565b3461119a5761118161117b36600461107e565b906140ac565b9061119661118d610242565b9283928361113d565b0390f35b610248565b5f80fd5b9061126492918082849164f196e500617fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff006100005260037fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00610001527fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00611000527fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00611001527fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff0061100252611266565b565b90611279929161127461423a565b61151b565b565b5f1c90565b90565b61128f6112949161127b565b611280565b90565b6112a19054611283565b90565b634e487b7160e01b5f52601160045260245ffd5b6112c76112cd91939293610254565b92610254565b82018092116112d857565b6112a4565b5f1b90565b906112ee5f19916112dd565b9181191691161790565b61130c61130761131192610254565b610414565b610254565b90565b90565b9061132c611327611333926112f8565b611314565b82546112e2565b9055565b90565b61134460a0610697565b90565b9061135190610291565b9052565b9061135f90610254565b9052565b90565b61137a61137561137f92611363565b610414565b610254565b90565b5f5260205f2090565b634e487b7160e01b5f52603260045260245ffd5b5490565b6113ac8161139f565b8210156113c6576113be600591611382565b910201905f90565b61138b565b634e487b7160e01b5f525f60045260245ffd5b6113e89051610291565b90565b906113fc60018060a01b03916112dd565b9181191691161790565b61140f90610417565b90565b61141b90611406565b90565b90565b9061143661143161143d92611412565b61141e565b82546113eb565b9055565b61144b9051610254565b90565b906114c4608060046114ca946114715f820161146b5f88016113de565b90611421565b61148a6001820161148460208801611441565b90611317565b6114a36002820161149d60408801611441565b90611317565b6114bc600382016114b660608801611441565b90611317565b019201611441565b90611317565b565b91906114dd576114db9161144e565b565b6113cb565b1b90565b9081549168010000000000000000831015611516578261150e916001611514950181556113a3565b906114cc565b565b61065a565b906115f16115e85f936115f69561160d575b4261154961154361153e6002611297565b610254565b91610254565b1185146115f8576115e36115da425b807fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff000000015261159961159261158b6009611297565b86906112b8565b6009611317565b6115d56115a66007611337565b9794916115cc8a936115c38c986115bb61133a565b9d8e01611347565b60208c01611355565b60408a01611355565b611366565b60608701611355565b611366565b60808401611355565b6114e6565b565b6115e36115da6116086002611297565b611558565b611615612578565b61152d565b9061162592916111a3565b565b5f90565b611633611627565b5061163e6002611297565b90565b5490565b61164d611627565b506116586007611641565b90565b61166560a0610697565b90565b5f90565b5f90565b61167861165b565b9060208080808086611688611668565b81520161169361166c565b81520161169e61166c565b8152016116a961166c565b8152016116b461166c565b81525050565b6116c2611670565b90565b5f5260205f2090565b6116d781611641565b8210156116f1576116e96005916116c5565b910201905f90565b61138b565b60018060a01b031690565b61170d6117129161127b565b6116f6565b90565b61171f9054611701565b90565b906117a1611798600461173361165b565b9461174a6117425f8301611715565b5f8801611347565b61176261175960018301611297565b60208801611355565b61177a61177160028301611297565b60408801611355565b61179261178960038301611297565b60608801611355565b01611297565b60808401611355565b565b6117ac90611722565b90565b6117c66117cc916117be6116ba565b5060076116ce565b506117a3565b90565b6117d7611627565b506117e26009611297565b90565b6117f46117fa91939293610254565b92610254565b820391821161180557565b6112a4565b61181961181f91939293610254565b92610254565b9161182b838202610254565b92818404149015171561183a57565b6112a4565b611847611627565b504261186461185e6118596002611297565b610254565b91610254565b1115611928574261188661188061187b6003611297565b610254565b91610254565b105f146119105761190d6118fd6118cb425b807fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0000001c526118c56002611297565b906117e5565b807fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0000001d526118f86001611297565b61180a565b6119076005611297565b906117e5565b90565b61190d6118fd6118cb6119236003611297565b611898565b6119315f611366565b90565b6119459061194061423a565b6119b6565b565b61195b61195661196092611363565b610414565b61027a565b90565b61196c90611947565b90565b61197890610417565b90565b6119849061196f565b90565b6119909061196f565b90565b90565b906119ab6119a66119b292611987565b611993565b82546113eb565b9055565b806119d16119cb6119c65f611963565b610285565b91610285565b146119eb576119e26119e99161197b565b6004611996565b565b6119f3610242565b6312e2c30b60e11b815280611a0a60048201610322565b0390fd5b611a1790611934565b565b90565b90611a26906112f8565b5f5260205260405f2090565b611a3b90610433565b90565b90611a4890611a32565b5f5260205260405f2090565b90565b611a6090611406565b90565b60e01b90565b90505190611a76826102c5565b565b90602082820312611a9157611a8e915f01611a69565b90565b61024c565b916020611ab7929493611ab060408201965f8301906109f7565b019061036a565b565b611ac1610242565b3d5f823e3d90fd5b9064f196e5006f7fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff006f00005260027fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff006f000152817fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff006f100052807fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff006f100152611b71611b6b600784906116ce565b50611a19565b5f7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0001000a52611bb2611bad611ba660088690611a1c565b3390611a3e565b611a54565b905f7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0001000b52611be15f8301611297565b611bf3611bed85610254565b91610254565b10611e6057611c0184611fac565b611c2d611c0f5f8401611297565b611c1b60038401611297565b611c2760018601611297565b916142f9565b90817fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0000000c52611c72611c6d611c68611c635f611715565b61043f565b611a57565b61043f565b91602063a9059cbb933390611c9a5f8597611ca5611c8e610242565b998a9687958694611a63565b845260048401611a96565b03925af1908115611e5b57611dbc94611ce0611cd9600193600497611d5e96611e2f575b50611cd46005611297565b6112b8565b6005611317565b611d00611cf8611cf15f8401611297565b89906117e5565b5f8301611317565b611d0b5f8201611297565b7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0000002352611d58611d50611d3e5f8401611297565b611d4a60038801611297565b906143ee565b838301611317565b01611297565b7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0000002452611d96611d8e5f8301611715565b3386916144e8565b611db6611dae611da7848401611297565b86906117e5565b838301611317565b01611297565b7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff000000255233919091611e2a611e18611e127ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b56893611a32565b936112f8565b93611e21610242565b91829182610377565b0390a3565b611e4f9060203d8111611e54575b611e47818361066e565b810190611a78565b611cc9565b503d611e3d565b611ab9565b611e68610242565b63fb6e312960e01b815280611e7f60048201610322565b0390fd5b90611f209180829064f196e500867fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff008600005260027fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00860001527fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00861000527fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff0086100152611f22565b565b90611f3491611f2f6145f7565b611f36565b565b90611f4991611f4481614775565b6147e5565b565b90611f5591611e83565b565b90565b611f6e611f69611f7392611f57565b610414565b610254565b90565b634e487b7160e01b5f52601260045260245ffd5b611f96611f9c91610254565b91610254565b908115611fa7570490565b611f76565b61202961202f9164f196e5006c7fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff006c00005260017fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff006c000152807fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff006c10005260076116ce565b50611a19565b5f7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff00010003524261206e6120686120636003611297565b610254565b91610254565b105f1461226557425b90817fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0000000452816120b96120b36120ae60028501611297565b610254565b91610254565b1115612261576120cb60048201611297565b807fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0000000552806121016120fb5f611366565b91610254565b1461225157906121ed6121e46002936121ac61219c61216461213161222d9961212b8a8a01611297565b906117e5565b807fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff000000065261215e6001611297565b9061180a565b61219661218661217660018a01611297565b6121806064611f5a565b9061180a565b6121906009611297565b90611f8a565b9061180a565b6121a66064611f5a565b90611f8a565b90817fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff00000007526121dc60038601611297565b919091614983565b60038301611317565b6121f960038201611297565b7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0000001e5261222742838301611317565b01611297565b7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0000001f52565b50600261225f929101611317565b565b5050565b61226f6003611297565b612077565b5f90565b61228990612284614a79565b6122d7565b90565b90565b6122a361229e6122a89261228c565b6112dd565b6107d5565b90565b6122d47f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc61228f565b90565b506122e06122ab565b90565b6122f36122ee612274565b612278565b90565b60016125109164f196e500667fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff0066000052817fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff0066000152807fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff006610005261237f612379600783906116ce565b50611a19565b905f7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0001000d5261243a60046123c66123c16123ba60088690611a1c565b3390611a3e565b611a54565b935f7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0001000e5261240a6123f85f8301611715565b336124045f8901611297565b916144e8565b61243461242c61241b848401611297565b6124265f8901611297565b906117e5565b838301611317565b01611297565b7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff000000265233906124695f8401611297565b916124b26124a061249a7fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae059593611a32565b936112f8565b936124a9610242565b91829182610377565b0390a36124c96124c15f611366565b5f8301611317565b6124d45f8201611297565b7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff000000275261250a6125025f611366565b838301611317565b01611297565b7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0000002852565b90565b61254b61254661255092612534565b610414565b610254565b90565b61255b611627565b506125666001612537565b90565b60016125759101610254565b90565b64f196e5006b7fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff006b0000525f7fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff006b0001526125cd6007611641565b807fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff00000002526125f95f611366565b5b8061260d61260784610254565b91610254565b101561262a578061262061262592611fac565b612569565b6125fa565b5050565b906126ef92918082849164f196e500707fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff007000005260037fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00700001527fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00701000527fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00701001527fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00701002526126f1565b565b9061270492916126ff61423a565b612706565b565b9061275c60019161276394612765575b61275461274d6127466127296009611297565b6127408761273960078b906116ce565b5001611297565b906117e5565b83906112b8565b6009611317565b9260076116ce565b5001611317565b565b61276d612578565b612716565b9061277d929161262e565b565b5f90565b61278b61277f565b506127955f611715565b90565b64f196e5007b7fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff007b0000525f7fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff007b0001526127eb6127ed565b565b6127f561423a565b6127fd6127ff565b565b61281061280b5f611963565b614b49565b565b61281a612798565b565b612824611627565b5061282f6003611297565b90565b5f90565b60018060a01b031690565b61284d6128529161127b565b612836565b90565b61285f9054612841565b90565b61286a612832565b5064f196e500687fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00680000525f7fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00680001526128eb5f6128c2614c96565b817fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff000100335201612855565b90565b906129d493929180828490869264f196e500657fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff006500005260047fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00650001527fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00651000527fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00651001527fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00651002527fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff0065100352612b53565b565b60401c90565b60ff1690565b6129ee6129f3916129d6565b6129dc565b90565b612a0090546129e2565b90565b67ffffffffffffffff1690565b612a1c612a219161127b565b612a03565b90565b612a2e9054612a10565b90565b67ffffffffffffffff1690565b612a52612a4d612a5792611363565b610414565b612a31565b90565b612a6e612a69612a7392612534565b610414565b612a31565b90565b612a7f90610433565b90565b90612a9567ffffffffffffffff916112dd565b9181191691161790565b612ab3612aae612ab892612a31565b610414565b612a31565b90565b90565b90612ad3612ace612ada92612a9f565b612abb565b8254612a82565b9055565b60401b90565b90612af868ff000000000000000091612ade565b9181191691161790565b612b0b906102c0565b90565b90565b90612b26612b21612b2d92612b02565b612b0e565b8254612ae4565b9055565b612b3a90612a5a565b9052565b9190612b51905f60208501940190612b31565b565b909192612b5e614d05565b935f7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0001003752612b96612b905f87016129f6565b156102c0565b93847fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0000003852612bc55f8701612a24565b807fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff000000395280612bfb612bf55f612a3e565b91612a31565b1480612d8f575b90817fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0000003a52612c39612c336001612a5a565b91612a31565b1480612d67575b612c6e9091827fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0000003b52156102c0565b9081612d56575b50612d3357612ccb93612c93612c8b6001612a5a565b5f8901612abe565b612c9e5f8801612a24565b7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0000003e5285612d21575b612d96565b612cd3575b50565b612ce0905f809101612b11565b6001612d187fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d291612d0f610242565b91829182612b3e565b0390a15f612cd0565b612d2e60015f8901612b11565b612cc6565b612d3b610242565b63f92ee8a960e01b815280612d5260048201610322565b0390fd5b612d619150156102c0565b5f612c75565b50612c6e612d7430612a76565b3b612d87612d815f611366565b91610254565b149050612c40565b5085612c02565b612dde92612dc7612de59593612dc0612dd994612db233614e0c565b612dba614e76565b5f611421565b6001611317565b612dd2816002611317565b6003611317565b61197b565b6004611996565b565b90612df39392916128ee565b565b612dfd611627565b50612e1b612e0b6003611297565b612e156002611297565b906117e5565b90565b634e487b7160e01b5f52600160045260245ffd5b15612e3957565b612e1e565b916020612e5f929493612e5860408201965f83019061036a565b019061036a565b565b64f196e5006d7fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff006d00005260017fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff006d000152807fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff006d100052612ee5612edf600783906116ce565b50611a19565b5f7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0001000f52612f26612f21612f1a60088590611a1c565b3390611a3e565b611a54565b915f7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0001001052612f71612f585f8501611297565b612f6a612f645f611366565b91610254565b1015612e32565b612f7a81611fac565b61309c6004612fab612f8d5f8701611297565b612f9960038701611297565b612fa560018901611297565b916142f9565b93847fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0000001152612fef612fe7612fe05f8901611297565b87906112b8565b5f8801611317565b612ffa5f8701611297565b7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff000000295261304861303f61302d5f8901611297565b61303960038501611297565b906143ee565b60018801611317565b61305460018701611297565b7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0000002a5261309661308e613087848401611297565b87906112b8565b838301611317565b01611297565b7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0000002b526130cc5f3392939401611297565b6130ff6130f97f92f0bdf80f3916a4279540865e94ef327cf48639092106cca4bddc9bb1de4a8693611a32565b936112f8565b9361311461310b610242565b92839283612e3e565b0390a3565b613121611627565b5061312c6005611297565b90565b61322161321c6132ee93613141611627565b5064f196e500717fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff007100005260027fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff0071000152837fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff0071100052807fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00711001526132176131ec6131e6600787906116ce565b50611a19565b945f7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff00010017526008611a1c565b611a3e565b611a54565b5f7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff000100185261325060038301611297565b91827fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff000000195261328060048201611297565b90817fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0000001a52426132c26132bc6132b760028501611297565b610254565b91610254565b1180613422575b613314575b50506132e860016132e05f8401611297565b939201611297565b916142f9565b807fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0000001b5290565b906133e46133d46133eb9495934261333d6133376133326003611297565b610254565b91610254565b105f14613402576133ce6133be6133ae60016133a7613398425b61336360028901611297565b61337e6133786133736003611297565b610254565b91610254565b105f146133f35761339160028901611297565b5b906117e5565b6133a183611297565b9061180a565b9401611297565b6133b86064611f5a565b9061180a565b6133c86009611297565b90611f8a565b9061180a565b6133de6064611f5a565b90611f8a565b9091614983565b905f806132ce565b6133fd6003611297565b613392565b6133ce6133be6133ae60016133a761339861341d6003611297565b613357565b50816134366134305f611366565b91610254565b14156132c9565b61344690610433565b90565b64f196e5006a7fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff006a00005260017fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff006a000152807fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff006a100052426134d46134ce6134c96003611297565b610254565b91610254565b10156135475761353e613545916134ff6134ed5f611715565b336134f73061343d565b908492614eb2565b61352f613528613519836135136001611297565b90611f8a565b6135236003611297565b6112b8565b6003611317565b6135396006611297565b6112b8565b6006611317565b565b61354f610242565b63d274e67d60e01b81528061356660048201610322565b0390fd5b613572611627565b5061357d6001611297565b90565b9064f196e500677fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff006700005260027fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff0067000152817fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff0067100052807fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff0067100152613628613622600784906116ce565b50611a19565b5f7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff000100085261366961366461365d60088690611a1c565b3390611a3e565b611a54565b5f7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff000100095261369584611fac565b6136a05f8201611297565b6136b26136ac5f611366565b91610254565b11613820575b6001906137a761379f846136e56136d35f6137ad9801611715565b336136dd3061343d565b908a92614eb2565b6137076136fe6136f760048401611297565b89906112b8565b60048301611317565b61371360048201611297565b7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff000000205261375561374d6137465f8701611297565b89906112b8565b5f8601611317565b6137605f8501611297565b7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff000000215261379960036137925f8701611297565b9201611297565b906143ee565b838301611317565b01611297565b7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff00000022523391909161381b6138096138037f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a1593611a32565b936112f8565b93613812610242565b91829182610377565b0390a3565b61384c61382e5f8301611297565b61383a60038501611297565b61384660018501611297565b916142f9565b9061386e61386961386461385f5f611715565b61043f565b611a57565b61043f565b91602063a9059cbb9333906138965f85976138a161388a610242565b998a9687958694611a63565b845260048401611a96565b03925af1908115613914576137ad946138dd6138d661379f936001976137a7966138e8575b506138d16005611297565b6112b8565b6005611317565b9450505090506136b8565b6139089060203d811161390d575b613900818361066e565b810190611a78565b6138c6565b503d6138f6565b611ab9565b613921611627565b5061392c6006611297565b90565b60018060a01b031690565b61394661394b9161127b565b61392f565b90565b613958905461393a565b90565b61396490610433565b90565b91906139aa602061398061397b600461394e565b61395b565b63a00249e89061399f3392613993610242565b95869485938493611a63565b835260048301610a04565b03915afa8015613a26576139c6915f916139f8575b50156102c0565b6139d5576139d392613ae7565b565b6139dd610242565b63c6b9ef6960e01b8152806139f460048201610322565b0390fd5b613a19915060203d8111613a1f575b613a11818361066e565b810190611a78565b5f6139bf565b503d613a07565b611ab9565b90565b5f5260205f2090565b5490565b613a4481613a37565b821015613a5e57613a56600191613a2e565b910201905f90565b61138b565b91906008613a83910291613a7d60018060a01b03846114e2565b926114e2565b9181191691161790565b90565b9190613aa6613aa1613aae93611a32565b613a8d565b908354613a63565b9055565b9081549168010000000000000000831015613ae25782613ada916001613ae095018155613a3b565b90613a90565b565b61065a565b613b0391613af9613afe926008611a1c565b611a3e565b611a54565b5f7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0001001252613b3260028201611297565b613b44613b3e42610254565b91610254565b11613b9c576003613b9391613b5f613b9a9460028301611317565b613b6b60028201611297565b7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0000002c5201613a2b565b3390613ab2565b565b613ba4610242565b632cf8e56960e21b815280613bbb60048201610322565b0390fd5b90613bca9291613967565b565b613c87613c82613cb093613c7d5f94613be3611627565b5064f196e500627fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff006200005260027fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff0062000152807fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff0062100052827fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00621001526008611a1c565b611a3e565b611a54565b817fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff000100155201611297565b90565b613d2b908064f196e5007a7fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff007a00005260017fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff007a0001527fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff007a100052613d2d565b565b613d3e90613d3961423a565b613d40565b565b80613d5b613d55613d505f611963565b610285565b91610285565b14613d6b57613d6990614b49565b565b613d95613d775f611963565b613d7f610242565b918291631e4fbdf760e01b835260048301610a04565b0390fd5b613da290613cb3565b565b613dae6080610697565b90565b606090565b613dbe613da4565b90602080808085613dcd61166c565b815201613dd861166c565b815201613de361166c565b815201613dee613db1565b81525050565b613dfc613db6565b90565b5490565b5f5260205f2090565b613e169054612841565b90565b60010190565b90613e3c613e36613e2f84613dff565b8093610ec0565b92613e03565b905f5b818110613e4c5750505090565b909192613e6c613e66600192613e6187613e0c565b610edc565b94613e19565b9101919091613e3f565b90613e8091613e1f565b90565b90613ea3613e9c92613e93610242565b93848092613e76565b038361066e565b565b52565b90613f0f613f066003613eb9613da4565b94613ed0613ec85f8301611297565b5f8801611355565b613ee8613edf60018301611297565b60208801611355565b613f00613ef760028301611297565b60408801611355565b01613e83565b60608401613ea5565b565b613f1a90613ea8565b90565b613fd491613fca613fcf92613f30613df4565b5064f196e500697fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff006900005260027fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff0069000152807fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff0069100052827fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00691001526008611a1c565b611a3e565b613f11565b5f7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff000100165290565b606090565b67ffffffffffffffff81116140175760208091020190565b61065a565b9061402e61402983613fff565b610697565b918252565b369037565b9061405d6140458361401c565b926020806140538693613fff565b9201910390614033565b565b9061406982610ebc565b81101561407a576020809102010190565b61138b565b6140899051610285565b90565b90614096826110c3565b8110156140a7576020809102010190565b61138b565b9190916140b7613ffa565b506140c0613ffa565b506140d26140cd82610ebc565b614038565b925f7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff000100135261410761410283610ebc565b614038565b935f7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff00010014526141345f611366565b5b8061415061414a61414587610ebc565b610254565b91610254565b10156142325761422d9061418c61417a8561417461416f89869061405f565b61407f565b90613bcc565b614187859184909261408c565b611355565b61419f61419a84839061408c565b611441565b7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0000002d526141f36141e1856141db6141d689869061405f565b61407f565b9061312f565b6141ee899184909261408c565b611355565b61420661420188839061408c565b611441565b7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0000002e52612569565b614135565b509150509190565b64f196e500797fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00790000525f7fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff007900015261428d612862565b6142a66142a061429b614fd9565b610285565b91610285565b036142ad57565b6142d66142b8614fd9565b6142c0610242565b91829163118cdaa760e01b835260048301610a04565b0390fd5b90565b6142f16142ec6142f6926142da565b610414565b610254565b90565b6143c86143eb93926143e69261430d611627565b5064f196e5005d7fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff005d00005260037fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff005d000152807fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff005d100052817fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff005d100152847fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff005d10025261180a565b6143e06ec097ce7bc90715b34b9f10000000006142dd565b90611f8a565b6117e5565b90565b6144b491614496916143fe611627565b5064f196e5005e7fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff005e00005260027fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff005e000152807fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff005e100052817fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff005e10015261180a565b6144ae6ec097ce7bc90715b34b9f10000000006142dd565b90611f8a565b90565b63ffffffff1690565b63ffffffff60e01b1690565b6144e06144db6144e5926144b7565b611a63565b6144c0565b90565b906145e46145e9936145d560049464f196e5009a7fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff009a00005260037fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff009a000152807fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff009a100052847fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff009a100152827fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff009a100252936145bc63a9059cbb9193916144cc565b926145c5610242565b9687946020860190815201611a96565b6020820181038252038361066e565b615031565b565b6145f490610433565b90565b64f196e500837fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00830000525f7fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff008300015261464b306145eb565b61467d6146777f0000000000000000000000000000000000000000000000000000000000000000610285565b91610285565b1480156146ae575b61468b57565b614693610242565b63703e46dd60e11b8152806146aa60048201610322565b0390fd5b506146b76151c0565b6146e96146e37f0000000000000000000000000000000000000000000000000000000000000000610285565b91610285565b1415614685565b614768908064f196e500607fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff006000005260017fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00600001527fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff006010005261476a565b565b5061477361423a565b565b61477e906146f0565b565b61478990610417565b90565b61479590614780565b90565b6147a190610433565b90565b6147ad816107d5565b036147b457565b5f80fd5b905051906147c5826147a4565b565b906020828203126147e0576147dd915f016147b8565b90565b61024c565b919064f196e500857fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff008500005260027fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff0085000152827fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff0085100052807fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00851001526148a5602061488f61488a8661478c565b614798565b6352d1902d9061489d610242565b938492611a63565b825281806148b560048201610322565b03915afa80915f92614953575b50155f146148fd5750509060016148d757505b565b6148f9906148e3610242565b918291634c9c8ce360e01b835260048301610a04565b0390fd5b928361491861491261490d6122ab565b6107d5565b916107d5565b0361492d57614928929350615235565b6148d5565b61494f84614939610242565b918291632a87526960e21b8352600483016107e5565b0390fd5b61497591925060203d811161497c575b61496d818361066e565b8101906147c7565b905f6148c2565b503d614963565b614a7692614a6b614a7092614996611627565b5064f196e5005f7fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff005f00005260037fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff005f000152807fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff005f100052847fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff005f100152827fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff005f10025293614a656ec097ce7bc90715b34b9f10000000006142dd565b9061180a565b611f8a565b906112b8565b90565b64f196e500847fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00840000525f7fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff0084000152614acd306145eb565b614aff614af97f0000000000000000000000000000000000000000000000000000000000000000610285565b91610285565b03614b0657565b614b0e610242565b63703e46dd60e11b815280614b2560048201610322565b0390fd5b90614b3e614b39614b4592611a32565b613a8d565b82546113eb565b9055565b64f196e500777fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff007700005260017fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff0077000152807fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff0077100052614bc0614c96565b5f7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0001003452614c285f614bf2818401612855565b92837fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0000003552614c2285838301614b29565b01612855565b7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff000000365290614c7e614c787f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e093611a32565b91611a32565b91614c87610242565b80614c9181610322565b0390a3565b64f196e500757fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00750000525f7fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00750001527f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c19930090565b64f196e5007e7fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff007e0000525f7fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff007e0001527ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0090565b614dec908064f196e500767fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff007600005260017fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00760001527fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff0076100052614dee565b565b614dff90614dfa615350565b614e01565b565b614e0a906154bb565b565b614e1590614d74565b565b64f196e500817fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00810000525f7fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff0081000152614e6a614e6c565b565b614e74615350565b565b614e7e614e17565b565b604090614ea9614eb09496959396614e9f60608401985f8501906109f7565b60208301906109f7565b019061036a565b565b600492614fc3614fd79593614fd29364f196e5009b7fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff009b000052867fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff009b000152807fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff009b100052817fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff009b100152837fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff009b100252857fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff009b10035294614faa6323b872dd929491926144cc565b93614fb3610242565b9788956020870190815201614e80565b6020820181038252038361066e565b615031565b565b614fe1612832565b5064f196e5008a7fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff008a0000525f7fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff008a0001523390565b905f60209164f196e500a47fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00a400005260027fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00a4000152837fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00a4100052807fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00a41001526150d0611627565b7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff00000046526150fa611627565b7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0000004752828151910182855af1156151b5573d5f519061514061513a5f611366565b91610254565b145f1461519b57506151518161043f565b3b61516461515e5f611366565b91610254565b145b61516d5750565b6151796151979161043f565b615181610242565b918291635274afe760e01b835260048301610a04565b0390fd5b6151ae6151a86001612537565b91610254565b1415615166565b6040513d5f823e3d90fd5b6151c8612832565b5064f196e500907fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00900000525f7fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff009000015261522e5f6152286152236122ab565b6154c6565b01612855565b90565b5190565b9064f196e500937fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff009300005260027fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff0093000152817fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff0093100052807fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00931001526152d182615538565b816152fc7fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b91611a32565b90615305610242565b8061530f81610322565b0390a261531b81615231565b61532d6153275f611366565b91610254565b115f146153415761533d916156d0565b505b565b505061534b615603565b61533f565b64f196e5007c7fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff007c0000525f7fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff007c0001526153ac6153a66157b8565b156102c0565b6153b257565b6153ba610242565b631afcd79f60e31b8152806153d160048201610322565b0390fd5b61544d908064f196e500787fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff007800005260017fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00780001527fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff007810005261544f565b565b6154609061545b615350565b615462565b565b8061547d6154776154725f611963565b610285565b91610285565b1461548d5761548b90614b49565b565b6154b76154995f611963565b6154a1610242565b918291631e4fbdf760e01b835260048301610a04565b0390fd5b6154c4906153d5565b565b64f196e500b17fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00b100005260017fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00b1000152807fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00b110005290565b64f196e500917fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff009100005260017fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff0091000152807fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff0091100052803b6155bb6155b55f611366565b91610254565b146155dd576155db905f6155d56155d06122ab565b6154c6565b01614b29565b565b6155ff906155e9610242565b918291634c9c8ce360e01b835260048301610a04565b0390fd5b64f196e500997fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00990000525f7fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00990001523461566161565b5f611366565b91610254565b1161566857565b615670610242565b63b398979f60e01b81528061568760048201610322565b0390fd5b606090565b906156a261569d836106ac565b610697565b918252565b3d5f146156c2576156b73d615690565b903d5f602084013e5b565b6156ca61568b565b906156c0565b5f806157b1936156de61568b565b5064f196e500a87fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00a800005260027fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00a8000152837fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00a8100052807fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00a81001528390602081019051915af4906157856156a7565b905f7fffffff6e4604afefe123321beef1b02fffffffffffffffffffffffff0001004e52919091615821565b90565b5f90565b6157c06157b4565b5064f196e500807fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00800000525f7fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff008000015261581e5f615818614d05565b016129f6565b90565b906158ea9061582e61568b565b5064f196e500ab7fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00ab00005260037fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00ab000152827fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00ab100052807fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00ab100152837fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00ab100252156102c0565b5f146158f65750615961565b6158ff82615231565b61591161590b5f611366565b91610254565b1480615946575b615920575090565b6159429061592c610242565b918291639996b31560e01b835260048301610a04565b0390fd5b50803b61595b6159555f611366565b91610254565b14615918565b64f196e500ad7fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00ad00005260017fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00ad000152807fffffff6e4604afefe123321beef1b01fffffffffffffffffffffffff00ad1000526159d981615231565b6159eb6159e55f611366565b91610254565b115f146159fa57805190602001fd5b615a02610242565b63d6bda27560e01b815280615a1960048201610322565b0390fdfea2646970667358221220bf8aaf98dc190ee21e1f306f919500706fbf41b0d86eb2be77bd36257940135964736f6c63430008180033",
                "constructorSrcmap": "1189:26588:1:-:0;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::o;:::-;;;;4120:53;;;:::i;:::-;;;:::i;:::-;:::o;1189:26588::-;;;;;;;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;986:7324:6:-;1163:13;1171:4;1163:13;:::i;:::-;;;986:7324::o;1189:26588:1:-;;;;:::o;:::-;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;;;;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;9186:720:5:-;9236:196;;;;;;;;9530:26;;:::i;:::-;9557:102;;;;9673:15;;:1;:15;;:::i;:::-;9669:76;;9758:14;;:1;:14;;:::i;:::-;:34;;1189:26588:1;;;;;9758:34:5;:::i;:::-;;;:::i;:::-;;9754:146;;9186:720;;:::o;9754:146::-;9808:33;1189:26588:1;9808:14:5;1189:26588:1;;;;;9808:1:5;:14;:33;:::i;:::-;1189:26588:1;;;;;9860:29:5;;;;;:::i;:::-;;;;;;:::i;:::-;;;;9754:146;;;9669:76;9711:23;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;10902:366;10993:196;;;;;;;;11198:64;10902:366;:::o",
                "extensionContracts": [],
                "file": "src/StakingMining.sol",
                "immutables": [
                    {
                        "length": 32,
                        "offset": 18003,
                        "type": {
                            "location": "stack",
                            "typeDesc": {
                                "primitiveName": "address",
                                "type": "Primitive"
                            }
                        },
                        "varname": "__self"
                    },
                    {
                        "length": 32,
                        "offset": 18111,
                        "type": {
                            "location": "stack",
                            "typeDesc": {
                                "primitiveName": "address",
                                "type": "Primitive"
                            }
                        },
                        "varname": "__self"
                    },
                    {
                        "length": 32,
                        "offset": 19157,
                        "type": {
                            "location": "stack",
                            "typeDesc": {
                                "primitiveName": "address",
                                "type": "Primitive"
                            }
                        },
                        "varname": "__self"
                    }
                ],
                "internalFunctions": {
                    "0xf196e5005d": {
                        "canonicalId": "src/LibCalReward.sol|CalculatingRewards",
                        "declaringContract": "CalculatingRewards",
                        "method": {
                            "contractName": "CalculatingRewards",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "getPendingRewards",
                            "notpayable": true,
                            "originalFile": "src/LibCalReward.sol",
                            "paramNames": [
                                "_amount",
                                "_accERC20PerShare",
                                "_rewardDebt"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 91,
                                "size": 228
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5005e": {
                        "canonicalId": "src/LibCalReward.sol|CalculatingRewards",
                        "declaringContract": "CalculatingRewards",
                        "method": {
                            "contractName": "CalculatingRewards",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "updateRewardDebt",
                            "notpayable": true,
                            "originalFile": "src/LibCalReward.sol",
                            "paramNames": [
                                "_amount",
                                "_accERC20PerShare"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 325,
                                "size": 355
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5005f": {
                        "canonicalId": "src/LibCalReward.sol|CalculatingRewards",
                        "declaringContract": "CalculatingRewards",
                        "method": {
                            "contractName": "CalculatingRewards",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "updateAccERC20PerShare",
                            "notpayable": true,
                            "originalFile": "src/LibCalReward.sol",
                            "paramNames": [
                                "oldAccERC20PerShare",
                                "totalAmountOfRewardsDuringTheDuration",
                                "amountOfStakeInThePool"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 686,
                                "size": 355
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50060": {
                        "canonicalId": "src/StakingMining.sol|StakingMining",
                        "declaringContract": "StakingMining",
                        "method": {
                            "contractName": "StakingMining",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_authorizeUpgrade",
                            "notpayable": true,
                            "originalFile": "src/StakingMining.sol",
                            "paramNames": [
                                "newImplementation"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 4650,
                                "size": 98
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50061": {
                        "canonicalId": "src/StakingMining.sol|StakingMining",
                        "declaringContract": "StakingMining",
                        "method": {
                            "contractName": "StakingMining",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC20",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "add",
                            "notpayable": true,
                            "originalFile": "src/StakingMining.sol",
                            "paramNames": [
                                "_allocPoint",
                                "_lpToken",
                                "_withUpdate"
                            ],
                            "returns": [],
                            "sighash": "1eaaa045",
                            "sourceBytes": {
                                "begin": 5290,
                                "size": 652
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50062": {
                        "canonicalId": "src/StakingMining.sol|StakingMining",
                        "declaringContract": "StakingMining",
                        "method": {
                            "contractName": "StakingMining",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "getDeposited",
                            "notpayable": true,
                            "originalFile": "src/StakingMining.sol",
                            "paramNames": [
                                "_poolId",
                                "_user"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "e86facc5",
                            "sourceBytes": {
                                "begin": 13698,
                                "size": 202
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50063": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol|StakingMining",
                        "declaringContract": "StakingMining",
                        "method": {
                            "contractName": "StakingMining",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "upgradeToAndCall",
                            "notpayable": false,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
                            "paramNames": [
                                "newImplementation",
                                "data"
                            ],
                            "returns": [],
                            "sighash": "4f1ef286",
                            "sourceBytes": {
                                "begin": 4161,
                                "size": 214
                            },
                            "stateMutability": "payable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50064": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol|StakingMining",
                        "declaringContract": "StakingMining",
                        "method": {
                            "contractName": "StakingMining",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "transferOwnership",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
                            "paramNames": [
                                "newOwner"
                            ],
                            "returns": [],
                            "sighash": "f2fde38b",
                            "sourceBytes": {
                                "begin": 3405,
                                "size": 215
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50065": {
                        "canonicalId": "src/StakingMining.sol|StakingMining",
                        "declaringContract": "StakingMining",
                        "method": {
                            "contractName": "StakingMining",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC20",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "initialize",
                            "notpayable": true,
                            "originalFile": "src/StakingMining.sol",
                            "paramNames": [
                                "_erc20",
                                "_rewardPerSecond",
                                "_startTimestamp",
                                "_salesFactory"
                            ],
                            "returns": [],
                            "sighash": "9e3d87cd",
                            "sourceBytes": {
                                "begin": 4199,
                                "size": 445
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50066": {
                        "canonicalId": "src/StakingMining.sol|StakingMining",
                        "declaringContract": "StakingMining",
                        "method": {
                            "contractName": "StakingMining",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "emergencyWithdraw",
                            "notpayable": true,
                            "originalFile": "src/StakingMining.sol",
                            "paramNames": [
                                "_poolId"
                            ],
                            "returns": [],
                            "sighash": "5312ea8e",
                            "sourceBytes": {
                                "begin": 9946,
                                "size": 454
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50067": {
                        "canonicalId": "src/StakingMining.sol|StakingMining",
                        "declaringContract": "StakingMining",
                        "method": {
                            "contractName": "StakingMining",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "deposit",
                            "notpayable": true,
                            "originalFile": "src/StakingMining.sol",
                            "paramNames": [
                                "_poolId",
                                "_amount"
                            ],
                            "returns": [],
                            "sighash": "e2bbb158",
                            "sourceBytes": {
                                "begin": 7653,
                                "size": 1082
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50068": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol|StakingMining",
                        "declaringContract": "StakingMining",
                        "method": {
                            "contractName": "StakingMining",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "owner",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "8da5cb5b",
                            "sourceBytes": {
                                "begin": 2441,
                                "size": 144
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50069": {
                        "canonicalId": "src/StakingMining.sol|StakingMining",
                        "declaringContract": "StakingMining",
                        "method": {
                            "contractName": "StakingMining",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "getUserInfoInPool",
                            "notpayable": true,
                            "originalFile": "src/StakingMining.sol",
                            "paramNames": [
                                "_poolId",
                                "_user"
                            ],
                            "returns": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "astId": 43,
                                        "canonicalId": "src/StakingMining.sol|StakingMining.User",
                                        "containingContract": "StakingMining",
                                        "structMembers": [
                                            {
                                                "name": "amount",
                                                "type": {
                                                    "primitiveName": "uint256",
                                                    "type": "Primitive"
                                                }
                                            },
                                            {
                                                "name": "rewardDebt",
                                                "type": {
                                                    "primitiveName": "uint256",
                                                    "type": "Primitive"
                                                }
                                            },
                                            {
                                                "name": "tokensUnlockTime",
                                                "type": {
                                                    "primitiveName": "uint256",
                                                    "type": "Primitive"
                                                }
                                            },
                                            {
                                                "name": "salesRegistered",
                                                "type": {
                                                    "dynamicArrayBaseType": {
                                                        "primitiveName": "address",
                                                        "type": "Primitive"
                                                    },
                                                    "type": "Array"
                                                }
                                            }
                                        ],
                                        "structName": "User",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "f70fd81c",
                            "sourceBytes": {
                                "begin": 13997,
                                "size": 203
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e5006a": {
                        "canonicalId": "src/StakingMining.sol|StakingMining",
                        "declaringContract": "StakingMining",
                        "method": {
                            "contractName": "StakingMining",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "fund",
                            "notpayable": true,
                            "originalFile": "src/StakingMining.sol",
                            "paramNames": [
                                "_amount"
                            ],
                            "returns": [],
                            "sighash": "ca1d209d",
                            "sourceBytes": {
                                "begin": 4804,
                                "size": 328
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e5006b": {
                        "canonicalId": "src/StakingMining.sol|StakingMining",
                        "declaringContract": "StakingMining",
                        "method": {
                            "contractName": "StakingMining",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "massUpdatePools",
                            "notpayable": true,
                            "originalFile": "src/StakingMining.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "630b5ba1",
                            "sourceBytes": {
                                "begin": 6439,
                                "size": 186
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e5006c": {
                        "canonicalId": "src/StakingMining.sol|StakingMining",
                        "declaringContract": "StakingMining",
                        "method": {
                            "contractName": "StakingMining",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "updatePool",
                            "notpayable": true,
                            "originalFile": "src/StakingMining.sol",
                            "paramNames": [
                                "_pid"
                            ],
                            "returns": [],
                            "sighash": "51eb05a6",
                            "sourceBytes": {
                                "begin": 6684,
                                "size": 929
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e5006d": {
                        "canonicalId": "src/StakingMining.sol|StakingMining",
                        "declaringContract": "StakingMining",
                        "method": {
                            "contractName": "StakingMining",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "compound",
                            "notpayable": true,
                            "originalFile": "src/StakingMining.sol",
                            "paramNames": [
                                "_poolId"
                            ],
                            "returns": [],
                            "sighash": "aa5f7e26",
                            "sourceBytes": {
                                "begin": 10406,
                                "size": 835
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e5006e": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol|StakingMining",
                        "declaringContract": "StakingMining",
                        "method": {
                            "contractName": "StakingMining",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "renounceOwnership",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "715018a6",
                            "sourceBytes": {
                                "begin": 3155,
                                "size": 101
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e5006f": {
                        "canonicalId": "src/StakingMining.sol|StakingMining",
                        "declaringContract": "StakingMining",
                        "method": {
                            "contractName": "StakingMining",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "withdraw",
                            "notpayable": true,
                            "originalFile": "src/StakingMining.sol",
                            "paramNames": [
                                "_poolId",
                                "_amount"
                            ],
                            "returns": [],
                            "sighash": "441a3e70",
                            "sourceBytes": {
                                "begin": 8831,
                                "size": 1074
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50070": {
                        "canonicalId": "src/StakingMining.sol|StakingMining",
                        "declaringContract": "StakingMining",
                        "method": {
                            "contractName": "StakingMining",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "set",
                            "notpayable": true,
                            "originalFile": "src/StakingMining.sol",
                            "paramNames": [
                                "_poolId",
                                "_allocPoint",
                                "_withUpdate"
                            ],
                            "returns": [],
                            "sighash": "64482f79",
                            "sourceBytes": {
                                "begin": 5988,
                                "size": 366
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50071": {
                        "canonicalId": "src/StakingMining.sol|StakingMining",
                        "declaringContract": "StakingMining",
                        "method": {
                            "contractName": "StakingMining",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "getPendingReward",
                            "notpayable": true,
                            "originalFile": "src/StakingMining.sol",
                            "paramNames": [
                                "_poolId",
                                "_user"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "c59b1f3c",
                            "sourceBytes": {
                                "begin": 14244,
                                "size": 1761
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50072": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol|SalesFactory",
                        "declaringContract": "SalesFactory",
                        "method": {
                            "contractName": "SalesFactory",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "owner",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "8da5cb5b",
                            "sourceBytes": {
                                "begin": 1638,
                                "size": 85
                            },
                            "stateMutability": "view",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50073": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol|SalesFactory",
                        "declaringContract": "SalesFactory",
                        "method": {
                            "contractName": "SalesFactory",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "transferOwnership",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol",
                            "paramNames": [
                                "newOwner"
                            ],
                            "returns": [],
                            "sighash": "f2fde38b",
                            "sourceBytes": {
                                "begin": 2543,
                                "size": 215
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50074": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol|SalesFactory",
                        "declaringContract": "SalesFactory",
                        "method": {
                            "contractName": "SalesFactory",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "renounceOwnership",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "715018a6",
                            "sourceBytes": {
                                "begin": 2293,
                                "size": 101
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50075": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol|OwnableUpgradeable",
                        "declaringContract": "OwnableUpgradeable",
                        "method": {
                            "contractName": "OwnableUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_getOwnableStorage",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 1523,
                                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol|OwnableUpgradeable.OwnableStorage",
                                        "containingContract": "OwnableUpgradeable",
                                        "structMembers": [
                                            {
                                                "name": "_owner",
                                                "type": {
                                                    "primitiveName": "address",
                                                    "type": "Primitive"
                                                }
                                            }
                                        ],
                                        "structName": "OwnableStorage",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1192,
                                "size": 159
                            },
                            "stateMutability": "pure",
                            "visibility": "private"
                        }
                    },
                    "0xf196e50076": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol|OwnableUpgradeable",
                        "declaringContract": "OwnableUpgradeable",
                        "method": {
                            "contractName": "OwnableUpgradeable",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "__Ownable_init",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
                            "paramNames": [
                                "initialOwner"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1847,
                                "size": 127
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50077": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol|OwnableUpgradeable",
                        "declaringContract": "OwnableUpgradeable",
                        "method": {
                            "contractName": "OwnableUpgradeable",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_transferOwnership",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
                            "paramNames": [
                                "newOwner"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3774,
                                "size": 248
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50078": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol|OwnableUpgradeable",
                        "declaringContract": "OwnableUpgradeable",
                        "method": {
                            "contractName": "OwnableUpgradeable",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "__Ownable_init_unchained",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
                            "paramNames": [
                                "initialOwner"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1980,
                                "size": 235
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50079": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol|OwnableUpgradeable",
                        "declaringContract": "OwnableUpgradeable",
                        "method": {
                            "contractName": "OwnableUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_checkOwner",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2658,
                                "size": 162
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5007a": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol|OwnableUpgradeable",
                        "declaringContract": "OwnableUpgradeable",
                        "method": {
                            "contractName": "OwnableUpgradeable",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "transferOwnership",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
                            "paramNames": [
                                "newOwner"
                            ],
                            "returns": [],
                            "sighash": "f2fde38b",
                            "sourceBytes": {
                                "begin": 3405,
                                "size": 215
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e5007b": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol|OwnableUpgradeable",
                        "declaringContract": "OwnableUpgradeable",
                        "method": {
                            "contractName": "OwnableUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "renounceOwnership",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "715018a6",
                            "sourceBytes": {
                                "begin": 3155,
                                "size": 101
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e5007c": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol|Initializable",
                        "declaringContract": "Initializable",
                        "method": {
                            "contractName": "Initializable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_checkInitializing",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 7084,
                                "size": 141
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5007d": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol|Initializable",
                        "declaringContract": "Initializable",
                        "method": {
                            "contractName": "Initializable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_disableInitializers",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 7711,
                                "size": 422
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5007e": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol|Initializable",
                        "declaringContract": "Initializable",
                        "method": {
                            "contractName": "Initializable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_getInitializableStorage",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 1714,
                                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol|Initializable.InitializableStorage",
                                        "containingContract": "Initializable",
                                        "structMembers": [
                                            {
                                                "name": "_initialized",
                                                "type": {
                                                    "primitiveName": "uint64",
                                                    "type": "Primitive"
                                                }
                                            },
                                            {
                                                "name": "_initializing",
                                                "type": {
                                                    "primitiveName": "bool",
                                                    "type": "Primitive"
                                                }
                                            }
                                        ],
                                        "structName": "InitializableStorage",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 8737,
                                "size": 170
                            },
                            "stateMutability": "pure",
                            "visibility": "private"
                        }
                    },
                    "0xf196e5007f": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol|Initializable",
                        "declaringContract": "Initializable",
                        "method": {
                            "contractName": "Initializable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_getInitializedVersion",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint64",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 8243,
                                "size": 128
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50080": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol|Initializable",
                        "declaringContract": "Initializable",
                        "method": {
                            "contractName": "Initializable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_isInitializing",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 8487,
                                "size": 120
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50081": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol|UUPSUpgradeable",
                        "declaringContract": "UUPSUpgradeable",
                        "method": {
                            "contractName": "UUPSUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "__UUPSUpgradeable_init",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2970,
                                "size": 67
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50082": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol|UUPSUpgradeable",
                        "declaringContract": "UUPSUpgradeable",
                        "method": {
                            "contractName": "UUPSUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "__UUPSUpgradeable_init_unchained",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3043,
                                "size": 77
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50083": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol|UUPSUpgradeable",
                        "declaringContract": "UUPSUpgradeable",
                        "method": {
                            "contractName": "UUPSUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_checkProxy",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 4578,
                                "size": 312
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50084": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol|UUPSUpgradeable",
                        "declaringContract": "UUPSUpgradeable",
                        "method": {
                            "contractName": "UUPSUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_checkNotDelegated",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 5007,
                                "size": 213
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50085": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol|UUPSUpgradeable",
                        "declaringContract": "UUPSUpgradeable",
                        "method": {
                            "contractName": "UUPSUpgradeable",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_upgradeToAndCallUUPS",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
                            "paramNames": [
                                "newImplementation",
                                "data"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 6032,
                                "size": 538
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "private"
                        }
                    },
                    "0xf196e50086": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol|UUPSUpgradeable",
                        "declaringContract": "UUPSUpgradeable",
                        "method": {
                            "contractName": "UUPSUpgradeable",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "upgradeToAndCall",
                            "notpayable": false,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
                            "paramNames": [
                                "newImplementation",
                                "data"
                            ],
                            "returns": [],
                            "sighash": "4f1ef286",
                            "sourceBytes": {
                                "begin": 4161,
                                "size": 214
                            },
                            "stateMutability": "payable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50087": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol|ContextUpgradeable",
                        "declaringContract": "ContextUpgradeable",
                        "method": {
                            "contractName": "ContextUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "__Context_init",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 748,
                                "size": 59
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50088": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol|ContextUpgradeable",
                        "declaringContract": "ContextUpgradeable",
                        "method": {
                            "contractName": "ContextUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "__Context_init_unchained",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 813,
                                "size": 69
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50089": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol|ContextUpgradeable",
                        "declaringContract": "ContextUpgradeable",
                        "method": {
                            "contractName": "ContextUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_contextSuffixLength",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1094,
                                "size": 97
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5008a": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol|ContextUpgradeable",
                        "declaringContract": "ContextUpgradeable",
                        "method": {
                            "contractName": "ContextUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_msgSender",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 887,
                                "size": 96
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5008b": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol|ContextUpgradeable",
                        "declaringContract": "ContextUpgradeable",
                        "method": {
                            "contractName": "ContextUpgradeable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_msgData",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "calldata",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 989,
                                "size": 99
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5008c": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol|Ownable",
                        "declaringContract": "Ownable",
                        "method": {
                            "contractName": "Ownable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_checkOwner",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1796,
                                "size": 162
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5008d": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol|Ownable",
                        "declaringContract": "Ownable",
                        "method": {
                            "contractName": "Ownable",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "_transferOwnership",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol",
                            "paramNames": [
                                "newOwner"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2912,
                                "size": 187
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5008e": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol|Ownable",
                        "declaringContract": "Ownable",
                        "method": {
                            "contractName": "Ownable",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": false,
                            "name": "transferOwnership",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol",
                            "paramNames": [
                                "newOwner"
                            ],
                            "returns": [],
                            "sighash": "f2fde38b",
                            "sourceBytes": {
                                "begin": 2543,
                                "size": 215
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e5008f": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol|Ownable",
                        "declaringContract": "Ownable",
                        "method": {
                            "contractName": "Ownable",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "renounceOwnership",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "715018a6",
                            "sourceBytes": {
                                "begin": 2293,
                                "size": 101
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "public"
                        }
                    },
                    "0xf196e50090": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol|ERC1967Utils",
                        "declaringContract": "ERC1967Utils",
                        "method": {
                            "contractName": "ERC1967Utils",
                            "fullArgs": [],
                            "isLibrary": true,
                            "name": "getImplementation",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1441,
                                "size": 138
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50091": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol|ERC1967Utils",
                        "declaringContract": "ERC1967Utils",
                        "method": {
                            "contractName": "ERC1967Utils",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "_setImplementation",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
                            "paramNames": [
                                "newImplementation"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1671,
                                "size": 281
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "private"
                        }
                    },
                    "0xf196e50092": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol|ERC1967Utils",
                        "declaringContract": "ERC1967Utils",
                        "method": {
                            "contractName": "ERC1967Utils",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "_setAdmin",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
                            "paramNames": [
                                "newAdmin"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3490,
                                "size": 217
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "private"
                        }
                    },
                    "0xf196e50093": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol|ERC1967Utils",
                        "declaringContract": "ERC1967Utils",
                        "method": {
                            "contractName": "ERC1967Utils",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "upgradeToAndCall",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
                            "paramNames": [
                                "newImplementation",
                                "data"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2264,
                                "size": 344
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50094": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol|ERC1967Utils",
                        "declaringContract": "ERC1967Utils",
                        "method": {
                            "contractName": "ERC1967Utils",
                            "fullArgs": [],
                            "isLibrary": true,
                            "name": "getAdmin",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3287,
                                "size": 120
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50095": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol|ERC1967Utils",
                        "declaringContract": "ERC1967Utils",
                        "method": {
                            "contractName": "ERC1967Utils",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "changeAdmin",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
                            "paramNames": [
                                "newAdmin"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3827,
                                "size": 142
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50096": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol|ERC1967Utils",
                        "declaringContract": "ERC1967Utils",
                        "method": {
                            "contractName": "ERC1967Utils",
                            "fullArgs": [],
                            "isLibrary": true,
                            "name": "getBeacon",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 4415,
                                "size": 122
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50097": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol|ERC1967Utils",
                        "declaringContract": "ERC1967Utils",
                        "method": {
                            "contractName": "ERC1967Utils",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "_setBeacon",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
                            "paramNames": [
                                "newBeacon"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 4620,
                                "size": 437
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "private"
                        }
                    },
                    "0xf196e50098": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol|ERC1967Utils",
                        "declaringContract": "ERC1967Utils",
                        "method": {
                            "contractName": "ERC1967Utils",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "upgradeBeaconToAndCall",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
                            "paramNames": [
                                "newBeacon",
                                "data"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 5582,
                                "size": 342
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e50099": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol|ERC1967Utils",
                        "declaringContract": "ERC1967Utils",
                        "method": {
                            "contractName": "ERC1967Utils",
                            "fullArgs": [],
                            "isLibrary": true,
                            "name": "_checkNonPayable",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
                            "paramNames": [],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 6113,
                                "size": 122
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "private"
                        }
                    },
                    "0xf196e5009a": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC20",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "safeTransfer",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "to",
                                "value"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1219,
                                "size": 160
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5009b": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC20",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "safeTransferFrom",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "from",
                                "to",
                                "value"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1618,
                                "size": 188
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5009c": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC20",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "safeIncreaseAllowance",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "spender",
                                "value"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3146,
                                "size": 225
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5009d": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC20",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "trySafeTransfer",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "to",
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1943,
                                "size": 189
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5009e": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC20",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "trySafeTransferFrom",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "from",
                                "to",
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2273,
                                "size": 217
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e5009f": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC20",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "safeDecreaseAllowance",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "spender",
                                "requestedDecrease"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 4039,
                                "size": 468
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500a0": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC20",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "forceApprove",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "spender",
                                "value"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 5084,
                                "size": 380
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500a1": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC1363",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "transferAndCallRelaxed",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "to",
                                "value",
                                "data"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 5808,
                                "size": 322
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500a2": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC1363",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "transferFromAndCallRelaxed",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "from",
                                "to",
                                "value",
                                "data"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 6482,
                                "size": 406
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500a3": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC1363",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "approveAndCallRelaxed",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "to",
                                "value",
                                "data"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 7553,
                                "size": 320
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500a4": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC20",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "_callOptionalReturn",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "data"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 8370,
                                "size": 720
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "private"
                        }
                    },
                    "0xf196e500a5": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol|SafeERC20",
                        "declaringContract": "SafeERC20",
                        "method": {
                            "contractName": "SafeERC20",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "contractName": "IERC20",
                                        "type": "Contract"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "_callOptionalReturnBool",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
                            "paramNames": [
                                "token",
                                "data"
                            ],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 9592,
                                "size": 480
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "private"
                        }
                    },
                    "0xf196e500a6": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol|Address",
                        "declaringContract": "Address",
                        "method": {
                            "contractName": "Address",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "sendValue",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol",
                            "paramNames": [
                                "recipient",
                                "amount"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1290,
                                "size": 365
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500a7": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol|Address",
                        "declaringContract": "Address",
                        "method": {
                            "contractName": "Address",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "functionCall",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol",
                            "paramNames": [
                                "target",
                                "data"
                            ],
                            "returns": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2500,
                                "size": 151
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500a8": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol|Address",
                        "declaringContract": "Address",
                        "method": {
                            "contractName": "Address",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "functionDelegateCall",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol",
                            "paramNames": [
                                "target",
                                "data"
                            ],
                            "returns": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3916,
                                "size": 253
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500a9": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol|Address",
                        "declaringContract": "Address",
                        "method": {
                            "contractName": "Address",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "functionCallWithValue",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol",
                            "paramNames": [
                                "target",
                                "data",
                                "value"
                            ],
                            "returns": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2975,
                                "size": 407
                            },
                            "stateMutability": "nonpayable",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500aa": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol|Address",
                        "declaringContract": "Address",
                        "method": {
                            "contractName": "Address",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "functionStaticCall",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol",
                            "paramNames": [
                                "target",
                                "data"
                            ],
                            "returns": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3521,
                                "size": 254
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500ab": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol|Address",
                        "declaringContract": "Address",
                        "method": {
                            "contractName": "Address",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "verifyCallResultFromTarget",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol",
                            "paramNames": [
                                "target",
                                "success",
                                "returndata"
                            ],
                            "returns": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 4437,
                                "size": 582
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500ac": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol|Address",
                        "declaringContract": "Address",
                        "method": {
                            "contractName": "Address",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    }
                                },
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "verifyCallResult",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol",
                            "paramNames": [
                                "success",
                                "returndata"
                            ],
                            "returns": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 5221,
                                "size": 224
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500ad": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol|Address",
                        "declaringContract": "Address",
                        "method": {
                            "contractName": "Address",
                            "fullArgs": [
                                {
                                    "location": "memory",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "_revert",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol",
                            "paramNames": [
                                "returndata"
                            ],
                            "returns": [],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 5559,
                                "size": 487
                            },
                            "stateMutability": "pure",
                            "visibility": "private"
                        }
                    },
                    "0xf196e500ae": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Context.sol|Context",
                        "declaringContract": "Context",
                        "method": {
                            "contractName": "Context",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_msgSender",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Context.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 656,
                                "size": 96
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500af": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Context.sol|Context",
                        "declaringContract": "Context",
                        "method": {
                            "contractName": "Context",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_msgData",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Context.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "calldata",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 758,
                                "size": 99
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500b0": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Context.sol|Context",
                        "declaringContract": "Context",
                        "method": {
                            "contractName": "Context",
                            "fullArgs": [],
                            "isLibrary": false,
                            "name": "_contextSuffixLength",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Context.sol",
                            "paramNames": [],
                            "returns": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 863,
                                "size": 97
                            },
                            "stateMutability": "view",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500b1": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot",
                        "declaringContract": "StorageSlot",
                        "method": {
                            "contractName": "StorageSlot",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "getAddressSlot",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
                            "paramNames": [
                                "slot"
                            ],
                            "returns": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 5758,
                                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot.AddressSlot",
                                        "containingContract": "StorageSlot",
                                        "structMembers": [
                                            {
                                                "name": "value",
                                                "type": {
                                                    "primitiveName": "address",
                                                    "type": "Primitive"
                                                }
                                            }
                                        ],
                                        "structName": "AddressSlot",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 1899,
                                "size": 163
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500b2": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot",
                        "declaringContract": "StorageSlot",
                        "method": {
                            "contractName": "StorageSlot",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "getBooleanSlot",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
                            "paramNames": [
                                "slot"
                            ],
                            "returns": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 5761,
                                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot.BooleanSlot",
                                        "containingContract": "StorageSlot",
                                        "structMembers": [
                                            {
                                                "name": "value",
                                                "type": {
                                                    "primitiveName": "bool",
                                                    "type": "Primitive"
                                                }
                                            }
                                        ],
                                        "structName": "BooleanSlot",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2159,
                                "size": 163
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500b3": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot",
                        "declaringContract": "StorageSlot",
                        "method": {
                            "contractName": "StorageSlot",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "getInt256Slot",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
                            "paramNames": [
                                "slot"
                            ],
                            "returns": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 5770,
                                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot.Int256Slot",
                                        "containingContract": "StorageSlot",
                                        "structMembers": [
                                            {
                                                "name": "value",
                                                "type": {
                                                    "primitiveName": "int256",
                                                    "type": "Primitive"
                                                }
                                            }
                                        ],
                                        "structName": "Int256Slot",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2938,
                                "size": 161
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500b4": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot",
                        "declaringContract": "StorageSlot",
                        "method": {
                            "contractName": "StorageSlot",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "getBytes32Slot",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
                            "paramNames": [
                                "slot"
                            ],
                            "returns": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 5764,
                                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot.Bytes32Slot",
                                        "containingContract": "StorageSlot",
                                        "structMembers": [
                                            {
                                                "name": "value",
                                                "type": {
                                                    "primitiveName": "bytes32",
                                                    "type": "Primitive"
                                                }
                                            }
                                        ],
                                        "structName": "Bytes32Slot",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2419,
                                "size": 163
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500b5": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot",
                        "declaringContract": "StorageSlot",
                        "method": {
                            "contractName": "StorageSlot",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "getUint256Slot",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
                            "paramNames": [
                                "slot"
                            ],
                            "returns": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 5767,
                                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot.Uint256Slot",
                                        "containingContract": "StorageSlot",
                                        "structMembers": [
                                            {
                                                "name": "value",
                                                "type": {
                                                    "primitiveName": "uint256",
                                                    "type": "Primitive"
                                                }
                                            }
                                        ],
                                        "structName": "Uint256Slot",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 2679,
                                "size": 163
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500b6": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot",
                        "declaringContract": "StorageSlot",
                        "method": {
                            "contractName": "StorageSlot",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "getStringSlot",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
                            "paramNames": [
                                "slot"
                            ],
                            "returns": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 5773,
                                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot.StringSlot",
                                        "containingContract": "StorageSlot",
                                        "structMembers": [
                                            {
                                                "name": "value",
                                                "type": {
                                                    "type": "StringType"
                                                }
                                            }
                                        ],
                                        "structName": "StringSlot",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3195,
                                "size": 161
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500b7": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot",
                        "declaringContract": "StorageSlot",
                        "method": {
                            "contractName": "StorageSlot",
                            "fullArgs": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "type": "StringType"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "getStringSlot",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
                            "paramNames": [
                                "store"
                            ],
                            "returns": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 5773,
                                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot.StringSlot",
                                        "containingContract": "StorageSlot",
                                        "structMembers": [
                                            {
                                                "name": "value",
                                                "type": {
                                                    "type": "StringType"
                                                }
                                            }
                                        ],
                                        "structName": "StringSlot",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3468,
                                "size": 175
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500b8": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot",
                        "declaringContract": "StorageSlot",
                        "method": {
                            "contractName": "StorageSlot",
                            "fullArgs": [
                                {
                                    "location": "stack",
                                    "typeDesc": {
                                        "primitiveName": "bytes32",
                                        "type": "Primitive"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "getBytesSlot",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
                            "paramNames": [
                                "slot"
                            ],
                            "returns": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 5776,
                                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot.BytesSlot",
                                        "containingContract": "StorageSlot",
                                        "structMembers": [
                                            {
                                                "name": "value",
                                                "type": {
                                                    "type": "PackedBytes"
                                                }
                                            }
                                        ],
                                        "structName": "BytesSlot",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 3738,
                                "size": 159
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    },
                    "0xf196e500b9": {
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot",
                        "declaringContract": "StorageSlot",
                        "method": {
                            "contractName": "StorageSlot",
                            "fullArgs": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "type": "PackedBytes"
                                    }
                                }
                            ],
                            "isLibrary": true,
                            "name": "getBytesSlot",
                            "notpayable": true,
                            "originalFile": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
                            "paramNames": [
                                "store"
                            ],
                            "returns": [
                                {
                                    "location": "storage",
                                    "typeDesc": {
                                        "astId": 5776,
                                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot.BytesSlot",
                                        "containingContract": "StorageSlot",
                                        "structMembers": [
                                            {
                                                "name": "value",
                                                "type": {
                                                    "type": "PackedBytes"
                                                }
                                            }
                                        ],
                                        "structName": "BytesSlot",
                                        "type": "UserDefinedStruct"
                                    }
                                }
                            ],
                            "sighash": "0",
                            "sourceBytes": {
                                "begin": 4007,
                                "size": 172
                            },
                            "stateMutability": "pure",
                            "visibility": "internal"
                        }
                    }
                },
                "is_static_address": false,
                "lang": "Solidity",
                "localAssignments": {
                    "1": {
                        "lhs": "lastRewardTimestamp",
                        "sourceLoc": {
                            "begin": "5484",
                            "len": "121",
                            "source": "1"
                        }
                    },
                    "10": {
                        "lhs": "poolInfo",
                        "sourceLoc": {
                            "begin": "8900",
                            "len": "40",
                            "source": "1"
                        }
                    },
                    "11": {
                        "lhs": "userInfo",
                        "sourceLoc": {
                            "begin": "8950",
                            "len": "52",
                            "source": "1"
                        }
                    },
                    "12": {
                        "lhs": "pendingRewards",
                        "sourceLoc": {
                            "begin": "9148",
                            "len": "172",
                            "source": "1"
                        }
                    },
                    "13": {
                        "lhs": "poolInfo",
                        "sourceLoc": {
                            "begin": "10007",
                            "len": "40",
                            "source": "1"
                        }
                    },
                    "14": {
                        "lhs": "userInfo",
                        "sourceLoc": {
                            "begin": "10057",
                            "len": "52",
                            "source": "1"
                        }
                    },
                    "15": {
                        "lhs": "poolInfo",
                        "sourceLoc": {
                            "begin": "10458",
                            "len": "40",
                            "source": "1"
                        }
                    },
                    "16": {
                        "lhs": "userInfo",
                        "sourceLoc": {
                            "begin": "10508",
                            "len": "52",
                            "source": "1"
                        }
                    },
                    "17": {
                        "lhs": "pendingAmount",
                        "sourceLoc": {
                            "begin": "10639",
                            "len": "171",
                            "source": "1"
                        }
                    },
                    "18": {
                        "lhs": "userInfo",
                        "sourceLoc": {
                            "begin": "11644",
                            "len": "47",
                            "source": "1"
                        }
                    },
                    "19": {
                        "lhs": "deposits",
                        "sourceLoc": {
                            "begin": "13178",
                            "len": "55",
                            "source": "1"
                        }
                    },
                    "2": {
                        "lhs": "length",
                        "sourceLoc": {
                            "begin": "6483",
                            "len": "31",
                            "source": "1"
                        }
                    },
                    "20": {
                        "lhs": "earnings",
                        "sourceLoc": {
                            "begin": "13243",
                            "len": "55",
                            "source": "1"
                        }
                    },
                    "21": {
                        "lhs": "userInfo",
                        "sourceLoc": {
                            "begin": "13814",
                            "len": "47",
                            "source": "1"
                        }
                    },
                    "22": {
                        "lhs": "userInfo",
                        "sourceLoc": {
                            "begin": "14122",
                            "len": "46",
                            "source": "1"
                        }
                    },
                    "23": {
                        "lhs": "poolInfo",
                        "sourceLoc": {
                            "begin": "14364",
                            "len": "40",
                            "source": "1"
                        }
                    },
                    "24": {
                        "lhs": "userInfo",
                        "sourceLoc": {
                            "begin": "14414",
                            "len": "47",
                            "source": "1"
                        }
                    },
                    "25": {
                        "lhs": "accERC20PerShare",
                        "sourceLoc": {
                            "begin": "14472",
                            "len": "52",
                            "source": "1"
                        }
                    },
                    "26": {
                        "lhs": "lpSupply",
                        "sourceLoc": {
                            "begin": "14535",
                            "len": "41",
                            "source": "1"
                        }
                    },
                    "27": {
                        "lhs": "pendingRewards",
                        "sourceLoc": {
                            "begin": "15803",
                            "len": "163",
                            "source": "1"
                        }
                    },
                    "28": {
                        "lhs": "lastTimestamp",
                        "sourceLoc": {
                            "begin": "16212",
                            "len": "111",
                            "source": "1"
                        }
                    },
                    "29": {
                        "lhs": "stakingDuration",
                        "sourceLoc": {
                            "begin": "16334",
                            "len": "56",
                            "source": "1"
                        }
                    },
                    "3": {
                        "lhs": "poolInfo",
                        "sourceLoc": {
                            "begin": "6735",
                            "len": "37",
                            "source": "1"
                        }
                    },
                    "30": {
                        "lhs": "poolInfo.accERC20PerShare",
                        "sourceLoc": {
                            "begin": "7384",
                            "len": "165",
                            "source": "1"
                        }
                    },
                    "31": {
                        "lhs": "poolInfo.lastRewardTimestamp",
                        "sourceLoc": {
                            "begin": "7560",
                            "len": "46",
                            "source": "1"
                        }
                    },
                    "32": {
                        "lhs": "poolInfo.totalDeposits",
                        "sourceLoc": {
                            "begin": "8418",
                            "len": "57",
                            "source": "1"
                        }
                    },
                    "33": {
                        "lhs": "userInfo.amount",
                        "sourceLoc": {
                            "begin": "8486",
                            "len": "43",
                            "source": "1"
                        }
                    },
                    "34": {
                        "lhs": "userInfo.rewardDebt",
                        "sourceLoc": {
                            "begin": "8540",
                            "len": "135",
                            "source": "1"
                        }
                    },
                    "35": {
                        "lhs": "userInfo.amount",
                        "sourceLoc": {
                            "begin": "9491",
                            "len": "43",
                            "source": "1"
                        }
                    },
                    "36": {
                        "lhs": "userInfo.rewardDebt",
                        "sourceLoc": {
                            "begin": "9545",
                            "len": "135",
                            "source": "1"
                        }
                    },
                    "37": {
                        "lhs": "poolInfo.totalDeposits",
                        "sourceLoc": {
                            "begin": "9787",
                            "len": "57",
                            "source": "1"
                        }
                    },
                    "38": {
                        "lhs": "poolInfo.totalDeposits",
                        "sourceLoc": {
                            "begin": "10196",
                            "len": "65",
                            "source": "1"
                        }
                    },
                    "39": {
                        "lhs": "userInfo.amount",
                        "sourceLoc": {
                            "begin": "10341",
                            "len": "19",
                            "source": "1"
                        }
                    },
                    "4": {
                        "lhs": "lastTimestamp",
                        "sourceLoc": {
                            "begin": "6783",
                            "len": "111",
                            "source": "1"
                        }
                    },
                    "40": {
                        "lhs": "userInfo.rewardDebt",
                        "sourceLoc": {
                            "begin": "10370",
                            "len": "23",
                            "source": "1"
                        }
                    },
                    "41": {
                        "lhs": "userInfo.amount",
                        "sourceLoc": {
                            "begin": "10821",
                            "len": "49",
                            "source": "1"
                        }
                    },
                    "42": {
                        "lhs": "userInfo.rewardDebt",
                        "sourceLoc": {
                            "begin": "10881",
                            "len": "135",
                            "source": "1"
                        }
                    },
                    "43": {
                        "lhs": "poolInfo.totalDeposits",
                        "sourceLoc": {
                            "begin": "11027",
                            "len": "63",
                            "source": "1"
                        }
                    },
                    "44": {
                        "lhs": "userInfo.tokensUnlockTime",
                        "sourceLoc": {
                            "begin": "11866",
                            "len": "45",
                            "source": "1"
                        }
                    },
                    "45": {
                        "lhs": "deposits[i]",
                        "sourceLoc": {
                            "begin": "13411",
                            "len": "44",
                            "source": "1"
                        }
                    },
                    "46": {
                        "lhs": "earnings[i]",
                        "sourceLoc": {
                            "begin": "13469",
                            "len": "48",
                            "source": "1"
                        }
                    },
                    "47": {
                        "lhs": "sale",
                        "sourceLoc": {
                            "begin": "635",
                            "len": "51",
                            "source": "3"
                        }
                    },
                    "48": {
                        "lhs": "sales",
                        "sourceLoc": {
                            "begin": "1515",
                            "len": "61",
                            "source": "3"
                        }
                    },
                    "49": {
                        "lhs": "index",
                        "sourceLoc": {
                            "begin": "1586",
                            "len": "14",
                            "source": "3"
                        }
                    },
                    "5": {
                        "lhs": "lpSupply",
                        "sourceLoc": {
                            "begin": "6996",
                            "len": "41",
                            "source": "1"
                        }
                    },
                    "50": {
                        "lhs": "sales[index]",
                        "sourceLoc": {
                            "begin": "1673",
                            "len": "26",
                            "source": "3"
                        }
                    },
                    "51": {
                        "lhs": "$",
                        "sourceLoc": {
                            "begin": "2506",
                            "len": "47",
                            "source": "4"
                        }
                    },
                    "52": {
                        "lhs": "$",
                        "sourceLoc": {
                            "begin": "3847",
                            "len": "47",
                            "source": "4"
                        }
                    },
                    "53": {
                        "lhs": "oldOwner",
                        "sourceLoc": {
                            "begin": "3904",
                            "len": "27",
                            "source": "4"
                        }
                    },
                    "54": {
                        "lhs": "$._owner",
                        "sourceLoc": {
                            "begin": "3941",
                            "len": "19",
                            "source": "4"
                        }
                    },
                    "55": {
                        "lhs": "$",
                        "sourceLoc": {
                            "begin": "4158",
                            "len": "59",
                            "source": "5"
                        }
                    },
                    "56": {
                        "lhs": "isTopLevelCall",
                        "sourceLoc": {
                            "begin": "4279",
                            "len": "38",
                            "source": "5"
                        }
                    },
                    "57": {
                        "lhs": "initialized",
                        "sourceLoc": {
                            "begin": "4327",
                            "len": "35",
                            "source": "5"
                        }
                    },
                    "58": {
                        "lhs": "initialSetup",
                        "sourceLoc": {
                            "begin": "4706",
                            "len": "54",
                            "source": "5"
                        }
                    },
                    "59": {
                        "lhs": "construction",
                        "sourceLoc": {
                            "begin": "4770",
                            "len": "70",
                            "source": "5"
                        }
                    },
                    "6": {
                        "lhs": "stakingDuration",
                        "sourceLoc": {
                            "begin": "7166",
                            "len": "70",
                            "source": "1"
                        }
                    },
                    "60": {
                        "lhs": "$",
                        "sourceLoc": {
                            "begin": "6357",
                            "len": "59",
                            "source": "5"
                        }
                    },
                    "61": {
                        "lhs": "$",
                        "sourceLoc": {
                            "begin": "7826",
                            "len": "59",
                            "source": "5"
                        }
                    },
                    "62": {
                        "lhs": "$._initialized",
                        "sourceLoc": {
                            "begin": "4951",
                            "len": "18",
                            "source": "5"
                        }
                    },
                    "63": {
                        "lhs": "$._initialized",
                        "sourceLoc": {
                            "begin": "6541",
                            "len": "24",
                            "source": "5"
                        }
                    },
                    "64": {
                        "lhs": "$._initializing",
                        "sourceLoc": {
                            "begin": "6575",
                            "len": "22",
                            "source": "5"
                        }
                    },
                    "65": {
                        "lhs": "$._initializing",
                        "sourceLoc": {
                            "begin": "6618",
                            "len": "23",
                            "source": "5"
                        }
                    },
                    "66": {
                        "lhs": "oldOwner",
                        "sourceLoc": {
                            "begin": "2985",
                            "len": "25",
                            "source": "8"
                        }
                    },
                    "67": {
                        "lhs": "beaconImplementation",
                        "sourceLoc": {
                            "begin": "4850",
                            "len": "66",
                            "source": "14"
                        }
                    },
                    "68": {
                        "lhs": "oldAllowance",
                        "sourceLoc": {
                            "begin": "3242",
                            "len": "62",
                            "source": "17"
                        }
                    },
                    "69": {
                        "lhs": "approvalCall",
                        "sourceLoc": {
                            "begin": "5171",
                            "len": "75",
                            "source": "17"
                        }
                    },
                    "7": {
                        "lhs": "erc20Reward",
                        "sourceLoc": {
                            "begin": "7246",
                            "len": "127",
                            "source": "1"
                        }
                    },
                    "70": {
                        "lhs": "returnSize",
                        "sourceLoc": {
                            "begin": "8450",
                            "len": "18",
                            "source": "17"
                        }
                    },
                    "71": {
                        "lhs": "returnValue",
                        "sourceLoc": {
                            "begin": "8478",
                            "len": "19",
                            "source": "17"
                        }
                    },
                    "72": {
                        "lhs": "success",
                        "sourceLoc": {
                            "begin": "9691",
                            "len": "12",
                            "source": "17"
                        }
                    },
                    "73": {
                        "lhs": "returnSize",
                        "sourceLoc": {
                            "begin": "9713",
                            "len": "18",
                            "source": "17"
                        }
                    },
                    "74": {
                        "lhs": "returnValue",
                        "sourceLoc": {
                            "begin": "9741",
                            "len": "19",
                            "source": "17"
                        }
                    },
                    "75": {
                        "lhs": "success,returndata",
                        "sourceLoc": {
                            "begin": "1506",
                            "len": "75",
                            "source": "18"
                        }
                    },
                    "76": {
                        "lhs": "success,returndata",
                        "sourceLoc": {
                            "begin": "3230",
                            "len": "73",
                            "source": "18"
                        }
                    },
                    "77": {
                        "lhs": "success,returndata",
                        "sourceLoc": {
                            "begin": "3631",
                            "len": "65",
                            "source": "18"
                        }
                    },
                    "78": {
                        "lhs": "success,returndata",
                        "sourceLoc": {
                            "begin": "4023",
                            "len": "67",
                            "source": "18"
                        }
                    },
                    "8": {
                        "lhs": "poolInfo",
                        "sourceLoc": {
                            "begin": "7721",
                            "len": "40",
                            "source": "1"
                        }
                    },
                    "9": {
                        "lhs": "userInfo",
                        "sourceLoc": {
                            "begin": "7771",
                            "len": "52",
                            "source": "1"
                        }
                    }
                },
                "methods": [
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "constructor",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [],
                        "returns": [],
                        "sighash": "0",
                        "sourceBytes": {
                            "begin": 4120,
                            "size": 53
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getTotalPending",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "3bd05400",
                        "sourceBytes": {
                            "begin": 16061,
                            "size": 427
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getRewardPerSec",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "e0d41c02",
                        "sourceBytes": {
                            "begin": 12113,
                            "size": 98
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "PackedBytes"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "upgradeToAndCall",
                        "notpayable": false,
                        "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
                        "paramNames": [
                            "newImplementation",
                            "data"
                        ],
                        "returns": [],
                        "sighash": "4f1ef286",
                        "sourceBytes": {
                            "begin": 4161,
                            "size": 214
                        },
                        "stateMutability": "payable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "transferOwnership",
                        "notpayable": true,
                        "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
                        "paramNames": [
                            "newOwner"
                        ],
                        "returns": [],
                        "sighash": "f2fde38b",
                        "sourceBytes": {
                            "begin": 3405,
                            "size": 215
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getPoolNum",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "212af18d",
                        "sourceBytes": {
                            "begin": 13600,
                            "size": 92
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "emergencyWithdraw",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [
                            "_poolId"
                        ],
                        "returns": [],
                        "sighash": "5312ea8e",
                        "sourceBytes": {
                            "begin": 9946,
                            "size": 454
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "dynamicArrayBaseType": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    },
                                    "type": "Array"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "getPendingAndDepositedForUsers",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [
                            "users",
                            "poolId"
                        ],
                        "returns": [
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "dynamicArrayBaseType": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    },
                                    "type": "Array"
                                }
                            },
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "dynamicArrayBaseType": {
                                        "primitiveName": "uint256",
                                        "type": "Primitive"
                                    },
                                    "type": "Array"
                                }
                            }
                        ],
                        "sighash": "fcfc1b14",
                        "sourceBytes": {
                            "begin": 13010,
                            "size": 562
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getTotalAllocPoint",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "3a58b91a",
                        "sourceBytes": {
                            "begin": 12410,
                            "size": 101
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "getUserInfoInPool",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [
                            "_poolId",
                            "_user"
                        ],
                        "returns": [
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "astId": 43,
                                    "canonicalId": "src/StakingMining.sol|StakingMining.User",
                                    "containingContract": "StakingMining",
                                    "structMembers": [
                                        {
                                            "name": "amount",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "rewardDebt",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "tokensUnlockTime",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "salesRegistered",
                                            "type": {
                                                "dynamicArrayBaseType": {
                                                    "primitiveName": "address",
                                                    "type": "Primitive"
                                                },
                                                "type": "Array"
                                            }
                                        }
                                    ],
                                    "structName": "User",
                                    "type": "UserDefinedStruct"
                                }
                            }
                        ],
                        "sighash": "f70fd81c",
                        "sourceBytes": {
                            "begin": 13997,
                            "size": 203
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "fund",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [
                            "_amount"
                        ],
                        "returns": [],
                        "sighash": "ca1d209d",
                        "sourceBytes": {
                            "begin": 4804,
                            "size": 328
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "massUpdatePools",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [],
                        "returns": [],
                        "sighash": "630b5ba1",
                        "sourceBytes": {
                            "begin": 6439,
                            "size": 186
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "updatePool",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [
                            "_pid"
                        ],
                        "returns": [],
                        "sighash": "51eb05a6",
                        "sourceBytes": {
                            "begin": 6684,
                            "size": 929
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "compound",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [
                            "_poolId"
                        ],
                        "returns": [],
                        "sighash": "aa5f7e26",
                        "sourceBytes": {
                            "begin": 10406,
                            "size": 835
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "renounceOwnership",
                        "notpayable": true,
                        "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
                        "paramNames": [],
                        "returns": [],
                        "sighash": "715018a6",
                        "sourceBytes": {
                            "begin": 3155,
                            "size": 101
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "proxiableUUID",
                        "notpayable": true,
                        "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "bytes32",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "52d1902d",
                        "sourceBytes": {
                            "begin": 3708,
                            "size": 134
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "getPoolInfo",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [
                            "poolId"
                        ],
                        "returns": [
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "astId": 55,
                                    "canonicalId": "src/StakingMining.sol|StakingMining.Pool",
                                    "containingContract": "StakingMining",
                                    "structMembers": [
                                        {
                                            "name": "lpToken",
                                            "type": {
                                                "contractName": "IERC20",
                                                "type": "Contract"
                                            }
                                        },
                                        {
                                            "name": "allocPoint",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "lastRewardTimestamp",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "accERC20PerShare",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "totalDeposits",
                                            "type": {
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        }
                                    ],
                                    "structName": "Pool",
                                    "type": "UserDefinedStruct"
                                }
                            }
                        ],
                        "sighash": "2f380b35",
                        "sourceBytes": {
                            "begin": 12892,
                            "size": 112
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "getPendingReward",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [
                            "_poolId",
                            "_user"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "c59b1f3c",
                        "sourceBytes": {
                            "begin": 14244,
                            "size": 1761
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "contractName": "IERC20",
                                    "type": "Contract"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "add",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [
                            "_allocPoint",
                            "_lpToken",
                            "_withUpdate"
                        ],
                        "returns": [],
                        "sighash": "1eaaa045",
                        "sourceBytes": {
                            "begin": 5290,
                            "size": 652
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "getDeposited",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [
                            "_poolId",
                            "_user"
                        ],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "e86facc5",
                        "sourceBytes": {
                            "begin": 13698,
                            "size": 202
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getPaidOut",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "b3458b4b",
                        "sourceBytes": {
                            "begin": 13906,
                            "size": 85
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setTokensUnlockTime",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [
                            "_poolId",
                            "_user",
                            "_tokensUnlockTime"
                        ],
                        "returns": [],
                        "sighash": "e6f04acc",
                        "sourceBytes": {
                            "begin": 11489,
                            "size": 536
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "contractName": "IERC20",
                                    "type": "Contract"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "initialize",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [
                            "_erc20",
                            "_rewardPerSecond",
                            "_startTimestamp",
                            "_salesFactory"
                        ],
                        "returns": [],
                        "sighash": "9e3d87cd",
                        "sourceBytes": {
                            "begin": 4199,
                            "size": 445
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "UPGRADE_INTERFACE_VERSION",
                        "notpayable": true,
                        "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "memory",
                                "typeDesc": {
                                    "type": "StringType"
                                }
                            }
                        ],
                        "sighash": "ad3cb1cc",
                        "sourceBytes": {
                            "begin": 1819,
                            "size": 58
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "version",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "54fd4d50",
                        "sourceBytes": {
                            "begin": 12031,
                            "size": 76
                        },
                        "stateMutability": "pure",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "deposit",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [
                            "_poolId",
                            "_amount"
                        ],
                        "returns": [],
                        "sighash": "e2bbb158",
                        "sourceBytes": {
                            "begin": 7653,
                            "size": 1082
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "set",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [
                            "_poolId",
                            "_allocPoint",
                            "_withUpdate"
                        ],
                        "returns": [],
                        "sighash": "64482f79",
                        "sourceBytes": {
                            "begin": 5988,
                            "size": 366
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getTotalRewards",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "e627f2db",
                        "sourceBytes": {
                            "begin": 12309,
                            "size": 95
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "owner",
                        "notpayable": true,
                        "originalFile": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "8da5cb5b",
                        "sourceBytes": {
                            "begin": 2441,
                            "size": 144
                        },
                        "stateMutability": "view",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getStartTimestamp",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "1f89f25e",
                        "sourceBytes": {
                            "begin": 12559,
                            "size": 99
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "setSalesFactory",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [
                            "_salesFactory"
                        ],
                        "returns": [],
                        "sighash": "3dfcb861",
                        "sourceBytes": {
                            "begin": 11247,
                            "size": 236
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getEndTimestamp",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "74e94deb",
                        "sourceBytes": {
                            "begin": 12664,
                            "size": 95
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "isLibrary": false,
                        "name": "withdraw",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [
                            "_poolId",
                            "_amount"
                        ],
                        "returns": [],
                        "sighash": "441a3e70",
                        "sourceBytes": {
                            "begin": 8831,
                            "size": 1074
                        },
                        "stateMutability": "nonpayable",
                        "visibility": "public"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getRewardToken",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "contractName": "IERC20",
                                    "type": "Contract"
                                }
                            }
                        ],
                        "sighash": "69940d79",
                        "sourceBytes": {
                            "begin": 12217,
                            "size": 86
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    },
                    {
                        "contractName": "StakingMining",
                        "fullArgs": [],
                        "isLibrary": false,
                        "name": "getStakingMiningDuration",
                        "notpayable": true,
                        "originalFile": "src/StakingMining.sol",
                        "paramNames": [],
                        "returns": [
                            {
                                "location": "stack",
                                "typeDesc": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "sighash": "a242057a",
                        "sourceBytes": {
                            "begin": 12765,
                            "size": 121
                        },
                        "stateMutability": "view",
                        "visibility": "external"
                    }
                ],
                "name": "StakingMining",
                "original_file": "src/StakingMining.sol",
                "solidityTypes": [
                    {
                        "astId": 3171,
                        "canonicalId": "src/sale/IceFrogSale.sol|IceFrogSale.Sale",
                        "containingContract": "IceFrogSale",
                        "structMembers": [
                            {
                                "name": "token",
                                "type": {
                                    "contractName": "IERC20",
                                    "type": "Contract"
                                }
                            },
                            {
                                "name": "isCreated",
                                "type": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "earningsWithdrawn",
                                "type": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "leftoverWithdrawn",
                                "type": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "saleOwner",
                                "type": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "tokenPriceInETH",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "amountOfTokensToSell",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "totalTokensSold",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "totalETHRaised",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "saleStart",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "saleEnd",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "tokensUnlockTime",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "maxParticipation",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "Sale",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 3181,
                        "canonicalId": "src/sale/IceFrogSale.sol|IceFrogSale.Participation",
                        "containingContract": "IceFrogSale",
                        "structMembers": [
                            {
                                "name": "amountBought",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "amountETHPaid",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "timeParticipated",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "isPortionWithdrawn",
                                "type": {
                                    "dynamicArrayBaseType": {
                                        "primitiveName": "bool",
                                        "type": "Primitive"
                                    },
                                    "type": "Array"
                                }
                            }
                        ],
                        "structName": "Participation",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 3188,
                        "canonicalId": "src/sale/IceFrogSale.sol|IceFrogSale.Registration",
                        "containingContract": "IceFrogSale",
                        "structMembers": [
                            {
                                "name": "registrationTimeStarts",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "registrationTimeEnds",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "numberOfRegistrants",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "Registration",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 43,
                        "canonicalId": "src/StakingMining.sol|StakingMining.User",
                        "containingContract": "StakingMining",
                        "structMembers": [
                            {
                                "name": "amount",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "rewardDebt",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "tokensUnlockTime",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "salesRegistered",
                                "type": {
                                    "dynamicArrayBaseType": {
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    },
                                    "type": "Array"
                                }
                            }
                        ],
                        "structName": "User",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 55,
                        "canonicalId": "src/StakingMining.sol|StakingMining.Pool",
                        "containingContract": "StakingMining",
                        "structMembers": [
                            {
                                "name": "lpToken",
                                "type": {
                                    "contractName": "IERC20",
                                    "type": "Contract"
                                }
                            },
                            {
                                "name": "allocPoint",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "lastRewardTimestamp",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "accERC20PerShare",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "totalDeposits",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "Pool",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 5420,
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol|ECDSA.RecoverError",
                        "containingContract": "ECDSA",
                        "enumMembers": [
                            {
                                "name": "NoError"
                            },
                            {
                                "name": "InvalidSignature"
                            },
                            {
                                "name": "InvalidSignatureLength"
                            },
                            {
                                "name": "InvalidSignatureS"
                            }
                        ],
                        "enumName": "RecoverError",
                        "type": "UserDefinedEnum"
                    },
                    {
                        "astId": 6176,
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot.AddressSlot",
                        "containingContract": "StorageSlot",
                        "structMembers": [
                            {
                                "name": "value",
                                "type": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "AddressSlot",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 6179,
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot.BooleanSlot",
                        "containingContract": "StorageSlot",
                        "structMembers": [
                            {
                                "name": "value",
                                "type": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "BooleanSlot",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 6182,
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot.Bytes32Slot",
                        "containingContract": "StorageSlot",
                        "structMembers": [
                            {
                                "name": "value",
                                "type": {
                                    "primitiveName": "bytes32",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "Bytes32Slot",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 6185,
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot.Uint256Slot",
                        "containingContract": "StorageSlot",
                        "structMembers": [
                            {
                                "name": "value",
                                "type": {
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "Uint256Slot",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 6188,
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot.Int256Slot",
                        "containingContract": "StorageSlot",
                        "structMembers": [
                            {
                                "name": "value",
                                "type": {
                                    "primitiveName": "int256",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "Int256Slot",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 6191,
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot.StringSlot",
                        "containingContract": "StorageSlot",
                        "structMembers": [
                            {
                                "name": "value",
                                "type": {
                                    "type": "StringType"
                                }
                            }
                        ],
                        "structName": "StringSlot",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 6194,
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol|StorageSlot.BytesSlot",
                        "containingContract": "StorageSlot",
                        "structMembers": [
                            {
                                "name": "value",
                                "type": {
                                    "type": "PackedBytes"
                                }
                            }
                        ],
                        "structName": "BytesSlot",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 1742,
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol|OwnableUpgradeable.OwnableStorage",
                        "containingContract": "OwnableUpgradeable",
                        "structMembers": [
                            {
                                "name": "_owner",
                                "type": {
                                    "primitiveName": "address",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "OwnableStorage",
                        "type": "UserDefinedStruct"
                    },
                    {
                        "astId": 7557,
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/math/Math.sol|Math.Rounding",
                        "containingContract": "Math",
                        "enumMembers": [
                            {
                                "name": "Floor"
                            },
                            {
                                "name": "Ceil"
                            },
                            {
                                "name": "Trunc"
                            },
                            {
                                "name": "Expand"
                            }
                        ],
                        "enumName": "Rounding",
                        "type": "UserDefinedEnum"
                    },
                    {
                        "astId": 1983,
                        "canonicalId": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol|Initializable.InitializableStorage",
                        "containingContract": "Initializable",
                        "structMembers": [
                            {
                                "name": "_initialized",
                                "type": {
                                    "primitiveName": "uint64",
                                    "type": "Primitive"
                                }
                            },
                            {
                                "name": "_initializing",
                                "type": {
                                    "primitiveName": "bool",
                                    "type": "Primitive"
                                }
                            }
                        ],
                        "structName": "InitializableStorage",
                        "type": "UserDefinedStruct"
                    }
                ],
                "sourceBytes": {
                    "begin": 1189,
                    "size": 15301
                },
                "srcmap": "1189:26588:1:-:0;;;;;;;;;-1:-1:-1;1189:26588:1;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;:::o;:::-;;;;;;;;;;;;;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;:::o;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;:::o;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;;;;;;;;;:::i;:::-;;;:::o;:::-;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;:::i;:::-;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::o;:::-;;:::i;:::-;;;;;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;;;:::o;:::-;;;;:::i;:::-;;;;;;;:::i;:::-;:::o;:::-;;;:::i;:::-;;:::o;1819:58:6:-;1870:7;;:::i;:::-;1819:58;:::o;:::-;;;:::i;:::-;;:::o;1189:26588:1:-;;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;:::o;:::-;;;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;:::i;:::-;;;:::o;:::-;;;;:::o;:::-;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;:::i;:::-;;;:::o;:::-;;;;;;;:::o;:::-;;;;:::o;:::-;;;;;;;:::i;:::-;;;:::o;:::-;;;;:::o;:::-;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;7508:541;;8045:1;7508:541;;6809:11;6821:8;6830:11;7587:457;;;;;;;;;;;;;8045:1;:::i;:::-;7508:541::o;3231:62:4:-;;3285:1;3231:62;;;;:::i;:::-;3285:1;:::i;:::-;3231:62::o;1189:26588:1:-;;;;:::o;:::-;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::o;:::-;;:::i;:::-;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;;:::o;:::-;;;;;:::i;:::-;;;:::o;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;:::i;:::-;:::o;:::-;;;;;;;;:::i;:::-;:::o;:::-;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;:::o;:::-;;:::i;6689:819::-;;7266:225;;;6689:819;7240:261;6689:819;6862:59;;6689:819;6960:15;:32;;6978:14;;;:::i;:::-;6960:32;:::i;:::-;;;:::i;:::-;;:91;;;;7266:225;;7007:15;6960:91;7052:120;;;7182:47;7200:29;:15;;;:::i;:::-;7218:11;7200:29;;:::i;:::-;7182:47;;:::i;:::-;7266:225;7240:12;:7;:12;:::i;:::-;7298:8;7336:11;7386:19;7266:225;7441:1;7475;7266:225;7475:1;7266:225;;;:::i;:::-;;;;;:::i;:::-;;;;;:::i;:::-;;;;;:::i;:::-;;:::i;:::-;;;;;:::i;:::-;;:::i;:::-;;;;;:::i;:::-;7240:261;:::i;:::-;6689:819::o;6960:91::-;7266:225;;7037:14;;;:::i;:::-;6960:91;;6862:59;;;:::i;:::-;;;6689:819;;;;;;:::i;:::-;:::o;1189:26588::-;;;:::o;21269:99::-;21321:7;;:::i;:::-;21347:14;;;;:::i;:::-;21340:21;:::o;1189:26588::-;;;:::o;22822:92::-;22867:7;;:::i;:::-;22893;:14;:7;:14;:::i;:::-;22886:21;:::o;1189:26588::-;;;;:::i;:::-;;:::o;:::-;;;:::o;:::-;;;:::o;:::-;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;:::o;:::-;;;:::i;:::-;;:::o;:::-;;;;;;;:::o;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;:::o;:::-;;;;:::i;:::-;;:::o;21602:112::-;21692:15;21685:22;21602:112;21662:11;;:::i;:::-;21692:7;;:15;:::i;:::-;;21685:22;:::i;:::-;;:::o;21120:101::-;21173:7;;:::i;:::-;21199:15;;;;:::i;:::-;21192:22;:::o;1189:26588::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;:::i;27118:657::-;27168:7;;:::i;:::-;27191:15;;:33;;27210:14;;;:::i;:::-;27191:33;:::i;:::-;;;:::i;:::-;;;27187:72;;27293:15;:30;;27311:12;;;:::i;:::-;27293:30;:::i;:::-;;;:::i;:::-;;:87;;;;27725:43;:33;27531:30;27338:15;27293:87;27381:114;;;27547:14;;;:::i;:::-;27531:30;;:::i;:::-;27562:116;;;27725:15;;;:::i;:::-;:33;:::i;:::-;27761:7;;;:::i;:::-;27725:43;;:::i;:::-;27718:50;:::o;27293:87::-;27725:43;:33;27531:30;27368:12;;;:::i;:::-;27293:87;;27187:72;27240:8;27247:1;27240:8;:::i;:::-;;:::o;3231:62:4:-;3285:1;3231:62;;;:::i;:::-;3285:1;:::i;:::-;3231:62::o;1189:26588:1:-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;19687:236::-;19768:13;:27;;19785:10;19793:1;19785:10;:::i;:::-;19768:27;:::i;:::-;;;:::i;:::-;;19764:100;;19889:27;19874:42;19902:13;19889:27;:::i;:::-;19874:42;;:::i;:::-;19687:236::o;19764:100::-;19818:35;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;19687:236;;;;:::i;:::-;:::o;1189:26588::-;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;;:::i;:::-;;;;;;;;14051:2242;;14111:364;;;;;;;;;;;;14484:40;14508:16;:7;14516;14508:16;;:::i;:::-;;14484:40;:::i;:::-;14525:102;;;14636:52;14660:28;:16;:7;14668;14660:16;;:::i;:::-;14677:10;14660:28;;:::i;:::-;14636:52;:::i;:::-;14689:102;;;;14805:15;;:8;:15;;:::i;:::-;:25;;14823:7;14805:25;:::i;:::-;;;:::i;:::-;;14801:95;;14917:7;;;:::i;:::-;14961:147;15011:15;;:8;:15;;:::i;:::-;15040:25;;:8;:25;;:::i;:::-;15079:19;;:8;:19;;:::i;:::-;14961:147;;:::i;:::-;15109:115;;;;15234:31;:22;15241:14;15249:5;;;:::i;:::-;15241:14;:::i;:::-;15234:22;:::i;:::-;:31;:::i;:::-;;:59;:31;15266:10;;15278:14;15234:59;;15278:14;15234:59;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;16094:22;15234:59;15358:25;;15768:19;15234:59;16094:22;15234:59;15768:19;15234:59;;;14051:2242;15369:14;15358:25;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;15394:43;15412:25;:15;;:8;:15;;:::i;:::-;15430:7;15412:25;;:::i;:::-;15394:15;:8;:15;:43;:::i;:::-;15464:15;;:8;:15;;:::i;:::-;15480:116;;15606:135;15628:113;15677:15;;:8;:15;;:::i;:::-;15706:25;;:8;:25;;:::i;:::-;15628:113;;:::i;:::-;15606:8;;:19;:135;:::i;:::-;15768:19;;:::i;:::-;15788:116;;15992:7;15941:16;;:8;:16;;:::i;:::-;15979:10;15992:7;;;:::i;:::-;16010:57;16035:32;:22;:8;;:22;;:::i;:::-;16060:7;16035:32;;:::i;:::-;16010:8;;:22;:57;:::i;:::-;16094:22;;:::i;:::-;16117:116;;16257:10;16269:7;16278;16248:38;;;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;:::i;:::-;;;;14051:2242::o;15234:59::-;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;:::i;14801:95::-;14853:32;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;4903:447:6;;5346:1;4903:447;4761:17;4779:4;4974:371;;;;;;;;;;;5346:1;:::i;:::-;4903:447::o;2624:62::-;;2678:1;2624:62;;;:::i;:::-;2678:1;:::i;:::-;2624:62::o;4651:252::-;;4891:4;4651:252;4822:17;;;:::i;:::-;4891:4;:::i;:::-;4651:252::o;:::-;;;;;:::i;:::-;:::o;1189:26588:1:-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;:::o;:::-;;:::i;9682:2098::-;10034:13;10010:37;9682:2098;9724:277;;;;;;;;;10034:7;:13;:::i;:::-;;10010:37;:::i;:::-;10048:102;;;10184:15;:30;;10202:12;;;:::i;:::-;10184:30;:::i;:::-;;;:::i;:::-;;:87;;;;10229:15;10184:87;10272:114;;;;10400:13;:45;;10417:28;;:8;:28;;:::i;:::-;10400:45;:::i;:::-;;;:::i;:::-;;;10396:82;;10506:22;;:8;:22;;:::i;:::-;10529:109;;;10652:8;:13;;10664:1;10652:13;:::i;:::-;;;:::i;:::-;;10648:108;;10792:13;11212:165;11240:137;11629:28;10792:13;10984:105;10985:97;10986:33;10792:44;11629:28;10792:13;10808:28;:8;;:28;;:::i;:::-;10792:44;;:::i;:::-;10837:116;;;11004:15;;;:::i;:::-;10986:33;;:::i;:::-;11036:45;11037:25;:19;;:8;:19;;:::i;:::-;:25;11059:3;11037:25;:::i;:::-;;;:::i;:::-;11066:15;;;:::i;:::-;11036:45;;:::i;:::-;10985:97;;:::i;:::-;10984:105;11086:3;10984:105;:::i;:::-;;;:::i;:::-;11090:112;;;;11295:25;;:8;:25;;:::i;:::-;11334:11;11359:8;11240:137;;:::i;:::-;11212:25;:8;:25;:165;:::i;:::-;11404:25;;:8;:25;;:::i;:::-;11430:116;;11556:46;11587:15;11556:8;;:28;:46;:::i;:::-;11629:28;;:::i;:::-;11658:116;;9682:2098::o;10648:108::-;10712:13;10681:28;:44;10712:13;10681:8;:28;:44;:::i;:::-;10739:7::o;10396:82::-;10461:7;;:::o;10184:87::-;10259:12;;;:::i;:::-;10184:87;;1189:26588;;;:::o;2892:72:6:-;2956:1;2892:72;;;:::i;:::-;2956:1;:::i;:::-;2892:72;:::o;1189:26588:1:-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;763:114:14:-;811:66;;;:::i;:::-;763:114;:::o;4198:134:6:-;4293:32;;;:::i;:::-;4286:39;:::o;4198:134::-;4267:7;;;:::i;:::-;;:::i;:::-;4198:134;:::o;16334:1423:1:-;17615:19;;16334:1423;16386:280;;;;;;;;;16675:40;16699:16;:7;16707;16699:16;;:::i;:::-;;16675:40;:::i;:::-;16716:102;;;;17160:22;;16827:52;16851:28;:16;:7;16859;16851:16;;:::i;:::-;16868:10;16851:28;;:::i;:::-;16827:52;:::i;:::-;16880:102;;;;17042:15;16991:16;;:8;:16;;:::i;:::-;17029:10;17042:15;;:8;:15;;:::i;:::-;;;:::i;:::-;17068:65;17093:40;:22;:8;;:22;;:::i;:::-;17118:15;;:8;:15;;:::i;:::-;17093:40;;:::i;:::-;17068:8;;:22;:65;:::i;:::-;17160:22;;:::i;:::-;17183:116;;17331:10;17343:7;17352:15;;:8;:15;;:::i;:::-;17313:55;;;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;:::i;:::-;;;;17378:19;;17396:1;17378:19;:::i;:::-;:15;:8;:15;:19;:::i;:::-;17424:15;;:8;:15;;:::i;:::-;17440:116;;17565:23;;17587:1;17565:23;:::i;:::-;:8;;:19;:23;:::i;:::-;17615:19;;:::i;:::-;17635:116;;16334:1423::o;1189:26588::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;20741:76::-;20783:7;;:::i;:::-;20809:1;20802:8;20809:1;20802:8;:::i;:::-;;:::o;1189:26588::-;;;;;;:::i;:::-;;:::o;9134:489::-;9169:196;;;;;;9391:14;:7;:14;:::i;:::-;9406:107;;;9527:18;9544:1;9527:18;:::i;:::-;9564:8;9547:6;:15;;9556:6;9547:15;:::i;:::-;;;:::i;:::-;;;;;9599:6;;9564:8;9599:6;;:::i;:::-;9564:8;:::i;:::-;9527:18;;9547:15;;;9134:489::o;8508:541::-;;9045:1;8508:541;;8216:7;8224:11;8236;8588:456;;;;;;;;;;;;;9045:1;:::i;:::-;8508:541::o;3231:62:4:-;;3285:1;3231:62;;;;:::i;:::-;3285:1;:::i;:::-;3231:62::o;8095:413:1:-;;8460:16;:27;8095:413;8460:41;8095:413;8268:59;;8095:413;8337:113;8367:83;:57;:15;;;:::i;:::-;8397:27;:7;:16;:7;8405;8397:16;;:::i;:::-;;:27;;:::i;:::-;8367:57;;:::i;:::-;8439:11;8367:83;;:::i;:::-;8337:113;;:::i;:::-;8460:7;;:16;:::i;:::-;;:27;:41;:::i;:::-;8095:413::o;8268:59::-;;;:::i;:::-;;;8095:413;;;;;;:::i;:::-;:::o;1189:26588::-;;;:::o;20927:86::-;20976:6;;:::i;:::-;21001:5;;;;:::i;:::-;20994:12;:::o;4694:229:4:-;4722:196;;;;;;4919:1;;:::i;:::-;4694:229::o;3231:62::-;;;:::i;:::-;3285:1;;:::i;:::-;3231:62::o;4577:117::-;4676:10;;4684:1;4676:10;:::i;:::-;;:::i;:::-;4577:117::o;:::-;;;:::i;:::-;:::o;21374:95:1:-;21424:7;;:::i;:::-;21450:12;;;;:::i;:::-;21443:19;:::o;1189:26588::-;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;3369:442:4:-;3415:7;;:::i;:::-;3425:196;;;;;;;3796:8;;3657:20;;:::i;:::-;3678:102;;;3796:8;;:::i;:::-;3789:15;:::o;4713:671:1:-;;5380:1;4713:671;;;4368:6;4375:16;4392:15;4408:13;;4825:554;;;;;;;;;;;;;;;5380:1;:::i;:::-;4713:671::o;1189:26588::-;;;;:::o;:::-;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;:::o;:::-;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;:::-;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;:::i;:::-;:::o;4069:1815:5:-;;;;4191:26;;:::i;:::-;4218:102;;;;4403:16;4404:15;;:1;:15;;:::i;:::-;4403:16;;:::i;:::-;4420:115;;;;4565:14;;:1;:14;;:::i;:::-;4580:112;;;5055:11;:16;;5070:1;5055:16;:::i;:::-;;;:::i;:::-;;:34;;;4069:1815;5090:113;;;;5232:16;;5247:1;5232:16;:::i;:::-;;;:::i;:::-;;:50;;;4069:1815;5410:13;5212:70;5283:113;;;;5410:13;;:::i;:::-;:30;;;;4069:1815;5406:91;;;5766:1;5523;5506:18;;5523:1;5506:18;:::i;:::-;:14;:1;:14;:18;:::i;:::-;5550:14;;:1;:14;;:::i;:::-;5565:116;;5694:14;5690:67;;4069:1815;5766:1;:::i;:::-;5777:101;;4069:1815;;:::o;5777:101::-;5811:23;5829:5;5811:15;5829:5;5811:1;:15;:23;:::i;:::-;5865:1;5853:14;;;;;:::i;:::-;;;;;;:::i;:::-;;;;5777:101;;;5690:67;5724:22;5742:4;5724:15;:1;:15;:22;:::i;:::-;5690:67;;5406:91;5463:23;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;5410:30;5427:13;5428:12;;5427:13;;:::i;:::-;5410:30;;;5232:50;5260:4;5410:13;5252;5260:4;5252:13;:::i;:::-;:25;:30;;5281:1;5252:30;:::i;:::-;;;:::i;:::-;;5232:50;;;;5055:34;5075:14;;5055:34;;4199:514:1;4679:27;4199:514;4538:34;4664:42;4199:514;;4514:14;4624:30;4199:514;4459:10;;;:::i;:::-;;;:::i;:::-;4514:14;;:::i;:::-;4538:34;;:::i;:::-;4582:32;4599:15;4582:32;;:::i;:::-;4624:30;;:::i;:::-;4679:27;:::i;:::-;4664:42;;:::i;:::-;4199:514::o;:::-;;;;;;;:::i;:::-;:::o;21475:121::-;21534:7;;:::i;:::-;21560:12;:29;:12;;;:::i;:::-;21575:14;;;:::i;:::-;21560:29;;:::i;:::-;21553:36;:::o;1189:26588::-;;;;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;:::o;17763:1918::-;17806:280;;;;;;;;;18095:40;18119:16;:7;18127;18119:16;;:::i;:::-;;18095:40;:::i;:::-;18136:102;;;18247:52;18271:28;:16;:7;18279;18271:16;;:::i;:::-;18288:10;18271:28;;:::i;:::-;18247:52;:::i;:::-;18300:102;;;;18411:28;18418:15;;:8;:15;;:::i;:::-;:20;;18437:1;18418:20;:::i;:::-;;;:::i;:::-;;;18411:28;:::i;:::-;18461:7;;;:::i;:::-;19392:22;;18504:147;18554:15;;:8;:15;;:::i;:::-;18583:25;;:8;:25;;:::i;:::-;18622:19;;:8;:19;;:::i;:::-;18504:147;;:::i;:::-;18652:114;;;;18776:49;18794:31;:15;;:8;:15;;:::i;:::-;18812:13;18794:31;;:::i;:::-;18776:15;:8;:15;:49;:::i;:::-;18852:15;;:8;:15;;:::i;:::-;18868:116;;18994:135;19016:113;19065:15;;:8;:15;;:::i;:::-;19094:25;;:8;:25;;:::i;:::-;19016:113;;:::i;:::-;18994:19;:8;:19;:135;:::i;:::-;19156:19;;:8;:19;;:::i;:::-;19176:116;;19302:63;19327:38;:22;:8;;:22;;:::i;:::-;19352:13;19327:38;;:::i;:::-;19302:8;;:22;:63;:::i;:::-;19392:22;;:::i;:::-;19415:116;;19649:15;;19577:10;19601:7;19622:13;19649:8;:15;;:::i;:::-;19545:129;;;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;;;;;;:::i;:::-;;;;17763:1918::o;23592:85::-;23637:7;;:::i;:::-;23663;;;;:::i;:::-;23656:14;:::o;24394:2668::-;25028:47;25052:23;26770:138;24394:2668;24495:7;;:::i;:::-;24505:362;;;;;;;;;;;;;25052:16;24876:40;24900:16;:7;24908;24900:16;;:::i;:::-;;24876:40;:::i;:::-;24917:102;;;;25052:7;:16;:::i;:::-;:23;:::i;:::-;25028:47;:::i;:::-;25076:102;;;25215:25;;:8;:25;;:::i;:::-;25241:117;;;;25387:22;;:8;:22;;:::i;:::-;25410:109;;;;25533:15;:46;;25551:28;;:8;:28;;:::i;:::-;25533:46;:::i;:::-;;;:::i;:::-;;:63;;;24394:2668;25529:1206;;24394:2668;26820:8;;26879:19;;26820:15;;:8;:15;;:::i;:::-;26849:16;26879:8;:19;;:::i;:::-;26770:138;;:::i;:::-;26909:115;;;27034:21;:::o;25529:1206::-;25636:15;26073:109;26074:101;26386:144;25636:15;;;;:30;;25654:12;;;:::i;:::-;25636:30;:::i;:::-;;;:::i;:::-;;:95;;;;26129:45;26130:25;:19;;26075:33;25951:34;25685:15;25636:95;25774:28;;:8;:28;;:::i;:::-;:59;;25821:12;;;:::i;:::-;25774:59;:::i;:::-;;;:::i;:::-;;:137;;;;25852:28;;:8;:28;;:::i;:::-;25774:137;25951:34;;:::i;:::-;26093:15;;;:::i;:::-;26075:33;;:::i;:::-;26130:8;:19;;:::i;:::-;:25;26152:3;26130:25;:::i;:::-;;;:::i;:::-;26159:15;;;:::i;:::-;26129:45;;:::i;:::-;26074:101;;:::i;:::-;26073:109;26179:3;26073:109;:::i;:::-;;;:::i;:::-;26508:8;26386:144;;:::i;:::-;25529:1206;;;;;25774:137;25899:12;;;:::i;:::-;25774:137;;25636:95;26129:45;26130:25;:19;;26075:33;25951:34;25719:12;;;:::i;:::-;25636:95;;25533:63;25583:8;;:13;;25595:1;25583:13;:::i;:::-;;;:::i;:::-;;;25533:63;;1189:26588;;;;:::i;:::-;;:::o;5923:608::-;5962:280;;;;;;;;;6255:15;:31;;6274:12;;;:::i;:::-;6255:31;:::i;:::-;;;:::i;:::-;;;6251:98;;6502:22;6487:37;6359:5;6418:7;6359:5;;;:::i;:::-;6390:10;6403:13;6411:4;6403:13;:::i;:::-;6418:7;;;;:::i;:::-;6436:41;;6452:25;:7;6462:15;;;:::i;:::-;6452:25;;:::i;:::-;6436:41;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;6502:12;;;:::i;:::-;:22;:::i;:::-;6487:37;;:::i;:::-;5923:608::o;6251:98::-;6309:29;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;20823:98;20873:7;;:::i;:::-;20899:15;;;;:::i;:::-;20892:22;:::o;11820:2135::-;;11879:364;;;;;;;;;;;;12252:40;12276:16;:7;12284;12276:16;;:::i;:::-;;12252:40;:::i;:::-;12293:102;;;12404:52;12428:28;:16;:7;12436;12428:16;;:::i;:::-;12445:10;12428:28;;:::i;:::-;12404:52;:::i;:::-;12457:102;;;12580:7;;;:::i;:::-;12603:15;;:8;:15;;:::i;:::-;:19;;12621:1;12603:19;:::i;:::-;;;:::i;:::-;;12599:410;;11820:2135;13760:19;13019:8;13598:135;13620:113;13019:8;13126:7;13019:16;;13760:19;13019:8;:16;;:::i;:::-;13074:10;13099:13;13107:4;13099:13;:::i;:::-;13126:7;;;;:::i;:::-;13153:57;13178:32;:22;;:8;:22;;:::i;:::-;13203:7;13178:32;;:::i;:::-;13153:22;:8;:22;:57;:::i;:::-;13237:22;;:8;:22;;:::i;:::-;13260:116;;13386:43;13404:25;:15;;:8;:15;;:::i;:::-;13422:7;13404:25;;:::i;:::-;13386:15;:8;:15;:43;:::i;:::-;13456:15;;:8;:15;;:::i;:::-;13472:116;;13698:25;;13669:15;;:8;:15;;:::i;:::-;13698:8;:25;;:::i;:::-;13620:113;;:::i;:::-;13598:8;;:19;:135;:::i;:::-;13760:19;;:::i;:::-;13780:116;;13919:10;13931:7;13940;13911:37;;;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;;:::i;:::-;;;;11820:2135::o;12599:410::-;12663:163;12717:15;;:8;:15;;:::i;:::-;12750:25;;:8;:25;;:::i;:::-;12793:19;;:8;:19;;:::i;:::-;12663:163;;:::i;:::-;12856:5;12841:31;:22;12848:14;12856:5;;;:::i;:::-;12848:14;:::i;:::-;12841:22;:::i;:::-;:31;:::i;:::-;;:59;:31;12873:10;;12885:14;12841:59;;12885:14;12841:59;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;13760:19;12841:59;12973:25;;13620:113;12841:59;13760:19;12841:59;13598:135;12841:59;;;12599:410;12984:14;12973:25;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;12599:410;;;;;;;;12841:59;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;:::i;21019:95::-;21069:7;;:::i;:::-;21095:12;;;;:::i;:::-;21088:19;:::o;1189:26588::-;;;;;;;;:::o;:::-;;;;;:::i;:::-;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;3883:178::-;;;3927:52;;:40;:12;;;:::i;:::-;:40;:::i;:::-;;3968:10;3927:52;3968:10;3927:52;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;3926:53;3927:52;;;;;3883:178;3926:53;;;:::i;:::-;3922:122;;4053:1;;;:::i;:::-;3883:178::o;3922:122::-;4002:31;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;3927:52;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;:::i;1189:26588::-;;:::o;:::-;;;;;;;:::o;:::-;;;:::o;:::-;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;:::o;:::-;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;:::o;:::-;;:::o;:::-;;;;;;;;:::i;:::-;;:::i;:::-;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;:::o;:::-;;:::i;19929:806::-;20084:47;19929:806;20108:16;:23;19929:806;20108:7;:16;:::i;:::-;:23;:::i;:::-;20084:47;:::i;:::-;20132:102;;;20289:25;;:8;:25;;:::i;:::-;:43;;20317:15;20289:43;:::i;:::-;;;:::i;:::-;;20285:114;;20687:24;:29;20436:17;20408:45;20687:41;20436:17;20408:25;:8;:25;:45;:::i;:::-;20480:25;;:8;:25;;:::i;:::-;20506:116;;20687:24;:29;:::i;:::-;20717:10;20687:41;;:::i;:::-;19929:806::o;20285:114::-;20355:33;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;19929:806;;;;;;:::i;:::-;:::o;22920:666::-;23398:47;23422:23;23564:15;22920:666;23422:16;23564:15;22920:666;23017:7;;:::i;:::-;23027:362;;;;;;;;;;;;;23422:7;:16;:::i;:::-;:23;:::i;:::-;23398:47;:::i;:::-;23446:102;;;23564:15;;:::i;:::-;23557:22;:::o;5311:330:4:-;5637:1;5311:330;5147:8;5355:281;;;;;;;;5637:1;:::i;:::-;5311:330::o;3231:62::-;3285:1;3231:62;;;:::i;:::-;3285:1;:::i;:::-;3231:62::o;5072:239::-;5180:8;:22;;5192:10;5200:1;5192:10;:::i;:::-;5180:22;:::i;:::-;;;:::i;:::-;;5176:91;;5295:8;;;:::i;:::-;5072:239::o;5176:91::-;5225:31;5245:10;5253:1;5245:10;:::i;:::-;5225:31;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;5072:239;;;;:::i;:::-;:::o;1189:26588:1:-;;;;:::i;:::-;;:::o;:::-;;;:::o;:::-;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;:::o;:::-;;;:::i;:::-;;:::o;:::-;;;:::o;:::-;;;;;;;:::o;:::-;;;;;:::i;:::-;;:::o;:::-;;;;:::o;:::-;;;;;;;:::i;:::-;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;:::o;:::-;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::i;:::-;;;:::i;:::-;;;;;:::i;:::-;:::o;:::-;;;;:::i;:::-;;:::o;23683:667::-;24170:46;23683:667;24193:16;:23;23683:667;23785:11;;:::i;:::-;23799:362;;;;;;;;;;;;;24193:7;:16;:::i;:::-;:23;:::i;:::-;24170:46;:::i;:::-;24217:102;;;24328:15;:::o;1189:26588::-;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;:::o;:::-;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;;;;:::o;:::-;;:::i;:::-;;;;;:::i;:::-;;:::o;:::-;;;;;:::i;:::-;;;;;;;;;;;;;:::o;:::-;;:::i;21720:1074::-;;;;21842:16;;:::i;:::-;21860;;;:::i;:::-;21930:5;21916:27;21930:12;:5;:12;:::i;:::-;21916:27;:::i;:::-;21944:102;;;;22083:27;22097:12;:5;:12;:::i;:::-;22083:27;:::i;:::-;22111:102;;;;22276:10;22285:1;22276:10;:::i;:::-;22306:3;22288:1;:16;;22292:12;:5;:12;:::i;:::-;22288:16;:::i;:::-;;;:::i;:::-;;;;;22306:3;22352:6;22325:44;22339:30;22352:6;22360:8;;:5;22366:1;22360:8;;:::i;:::-;;:::i;:::-;22339:30;;:::i;:::-;22325:44;:8;22334:1;;22325:44;;;:::i;:::-;;:::i;:::-;22396:11;;:8;22405:1;22396:11;;:::i;:::-;;:::i;:::-;22408:116;;22537:48;22551:34;22568:6;22576:8;;:5;22582:1;22576:8;;:::i;:::-;;:::i;:::-;22551:34;;:::i;:::-;22537:48;:8;22546:1;;22537:48;;;:::i;:::-;;:::i;:::-;22612:11;;:8;22621:1;22612:11;;:::i;:::-;;:::i;:::-;22624:116;;22306:3;:::i;:::-;22276:10;;22288:16;;;;;22760:27;;:::o;3884:358:4:-;3930:196;;;;;;4139:7;;:::i;:::-;:23;;4150:12;;:::i;:::-;4139:23;:::i;:::-;;;:::i;:::-;;4135:101;;3884:358::o;4135:101::-;4185:40;4212:12;;:::i;:::-;4185:40;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;1189:26588:1;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;91:690:0:-;725:27;724:50;91:690;;724:36;91:690;236:7;;:::i;:::-;246:462;;;;;;;;;;;;;;;;725:27;:::i;:::-;724:36;756:4;724:36;:::i;:::-;;;:::i;:::-;:50;:::i;:::-;717:57;:::o;787:729::-;1473:36;787:729;1474:27;787:729;902:7;;:::i;:::-;912:374;;;;;;;;;;;;;1474:27;:::i;:::-;1473:36;1505:4;1473:36;:::i;:::-;;;:::i;:::-;1466:43;:::o;1189:26588:1:-;;;;:::o;:::-;7052:120;1189:26588;;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;:::i;:::-;;:::o;1219:599:17:-;;1767:43;;1219:599;1767:43;;1219:599;1292:439;;;;;;;;;;;;;;;1782:14;1767:43;1782:14;1799:2;1803:5;1767:43;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;:::i;:::-;1219:599::o;1189:26588:1:-;;;;:::i;:::-;;:::o;5553:508:6:-;5599:196;;;;;;5821:13;5829:4;5821:13;:::i;:::-;:23;;5838:6;5821:23;:::i;:::-;;;:::i;:::-;;:120;;;;5553:508;5804:251;;5553:508::o;5804:251::-;6015:29;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;5821:120;5899:32;;;:::i;:::-;:42;;5935:6;5899:42;:::i;:::-;;;:::i;:::-;;;5821:120;;5520:347:1;5863:1;5520:347;5490:17;5572:290;;;;;;;;5863:1;:::i;:::-;5520:347::o;3231:62:4:-;;;;:::i;:::-;:::o;5390:130:1:-;;;;:::i;:::-;:::o;1189:26588::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;:::o;:::-;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;:::i;7399:909:6:-;;;7485:371;;;;;;;;;;;;7869:52;;:50;:36;7887:17;7869:36;:::i;:::-;:50;:::i;:::-;;:52;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;7399:909;7865:437;;;;;;;;;;;;;;7399:909::o;7865:437::-;8231:60;8273:17;8231:60;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;7865:437;7963:4;;:40;;7971:32;;:::i;:::-;7963:40;:::i;:::-;;;:::i;:::-;;7959:120;;8141:4;8122:17;;;8141:4;:::i;:::-;7865:437;;7959:120;8030:34;8059:4;8030:34;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;7869:52;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;1522:860:0;2258:117;1522:860;2293:44;2292:83;1522:860;1715:7;;:::i;:::-;1725:505;;;;;;;;;;;;;;;;2293:37;:44;2333:4;2293:44;:::i;:::-;;;:::i;:::-;2292:83;:::i;:::-;2258:117;;:::i;:::-;2239:136;:::o;6178:409:6:-;6231:196;;;;;;6440:13;6448:4;6440:13;:::i;:::-;:23;;6457:6;6440:23;:::i;:::-;;;:::i;:::-;;6436:145;;6178:409::o;6436:145::-;6541:29;;:::i;:::-;6015;;;6541;;;;;;;;:::i;:::-;;;;1189:26588:1;;;;;;;:::i;:::-;;:::i;:::-;;;;:::i;:::-;;;:::o;5795:891:4:-;5859:281;;;;;;;;;6176:20;;:::i;:::-;6197:102;;;6500:8;;6327;:1;;:8;;:::i;:::-;6336:109;;;;6454:19;6465:8;6454:1;;:8;:19;:::i;:::-;6500:8;;:::i;:::-;6509:116;;6670:8;6639:40;;;;;:::i;:::-;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;;5795:891::o;1192:355::-;1271:196;;;;;;1476:65;1192:355;:::o;10902:366:5:-;10993:196;;;;;;11198:64;10902:366;:::o;2198:338:4:-;2532:1;2198:338;2113:12;2246:285;;;;;;;;2532:1;:::i;:::-;2198:338::o;8172:76:5:-;8240:1;8172:76;;;:::i;:::-;8240:1;:::i;:::-;8172:76::o;2043:155:4:-;2178:12;2043:155;2178:12;:::i;:::-;2043:155::o;:::-;;;;:::i;:::-;:::o;3053:229:6:-;3081:196;;;;;;3278:1;;:::i;:::-;3053:229::o;8172:76:5:-;;;:::i;:::-;:::o;2970:83:6:-;;;:::i;:::-;:::o;1189:26588:1:-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;:::i;:::-;:::o;2057:708:17:-;2704:53;2057:708;2704:53;;2057:708;;2704:53;2057:708;2148:520;;;;;;;;;;;;;;;;;;2719:18;2704:53;2719:18;2740:4;2746:2;2750:5;2704:53;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;:::i;:::-;2057:708::o;1377:292:7:-;1430:7;;:::i;:::-;1440:196;;;;;;;1652:10;1645:17;:::o;13488:1302:17:-;;14207:421;;13488:1302;13559:359;;;;;;;;;;;;13927:18;;:::i;:::-;13946:111;;14066:19;;:::i;:::-;14086:112;;14207:421;;;;;;;;;;;;;;;14642:10;:15;;14656:1;14642:15;:::i;:::-;;;:::i;:::-;;:68;;;;14668:5;14660:14;14668:5;14660:14;:::i;:::-;:26;:31;;14690:1;14660:31;:::i;:::-;;;:::i;:::-;;14642:68;14638:146;;13488:1302;:::o;14638:146::-;14758:14;14733:40;14766:5;14758:14;:::i;:::-;14733:40;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;14642:68;14694:16;;14709:1;14694:16;:::i;:::-;;;:::i;:::-;;;14642:68;;14207:421;;;;;;;;;;1441:334:14;1493:7;;:::i;:::-;1503:196;;;;;;;1715:53;;:47;1742:19;;:::i;:::-;1715:47;:::i;:::-;:53;;:::i;:::-;1708:60;:::o;1189:26588:1:-;;;:::o;2750:715:14:-;;2832:371;;;;;;;;;;;;3231:17;;;:::i;:::-;3282;3264:36;;;;:::i;:::-;;;;:::i;:::-;;;;;:::i;:::-;;;;3315:11;:4;:11;:::i;:::-;:15;;3329:1;3315:15;:::i;:::-;;;:::i;:::-;;3311:148;;;;3346:53;3375:17;3346:53;:::i;:::-;;3311:148;2750:715::o;3311:148::-;;;;;:::i;:::-;;;8363:337:5;8416:196;;;;;;8625:18;8626:17;;:::i;:::-;8625:18;;:::i;:::-;8621:73;;8363:337::o;8621:73::-;8666:17;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;2805:338:4;3139:1;2805:338;2622:12;2853:285;;;;;;;;3139:1;:::i;:::-;2805:338::o;8172:76:5:-;8240:1;8172:76;;;:::i;:::-;8240:1;:::i;:::-;8172:76::o;2542:263:4:-;2666:12;:26;;2682:10;2690:1;2682:10;:::i;:::-;2666:26;:::i;:::-;;;:::i;:::-;;2662:95;;2785:12;;;:::i;:::-;2542:263::o;2662:95::-;2715:31;2735:10;2743:1;2735:10;:::i;:::-;2715:31;;:::i;:::-;5225;;;;;;2715;;;;;;:::i;:::-;;;;2542:263;;;;:::i;:::-;:::o;1899:440:23:-;1984:277;;;;;;;;;1899:440;:::o;1867:571:14:-;1931:290;;;;;;;;;2234:17;:29;:34;;2267:1;2234:34;:::i;:::-;;;:::i;:::-;;2230:119;;2358:73;2414:17;2358:53;:47;2385:19;;:::i;:::-;2358:47;:::i;:::-;:53;:73;:::i;:::-;1867:571::o;2230:119::-;2291:47;2320:17;2291:47;;:::i;:::-;8231:60:6;;;;;;2291:47:14;;;;;;:::i;:::-;;;;8690:318;8727:196;;;;;;8936:9;:13;;8948:1;8936:13;:::i;:::-;;;:::i;:::-;;8932:70;;8690:318::o;8932:70::-;8972:19;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;1189:26588:1;;;:::o;:::-;;;;;;:::i;:::-;;:::i;:::-;;;;:::o;:::-;;;;;;;;;:::i;:::-;;;;;;;;;:::o;:::-;;;:::i;:::-;;;;5749:715:18;6258:25;5749:715;6402:55;5749:715;5832:12;;:::i;:::-;5847:360;;;;;;;;;;;;;6258:6;6278:4;6258:25;;;;;;;;;;;:::i;:::-;6284:102;;;;6437:7;6446:10;6402:55;;:::i;:::-;6395:62;:::o;1189:26588:1:-;;;:::o;10456:316:5:-;10506:4;;:::i;:::-;10513:196;;;;;;;10725:40;;:26;;:::i;:::-;:40;;:::i;:::-;10718:47;:::o;6732:1032:18:-;;7354:8;6732:1032;6876:12;;:::i;:::-;6891:450;;;;;;;;;;;;;;;;7354:8;;:::i;:::-;7350:408;;;;7386:10;;:::i;7350:408::-;7602:17;:10;:17;:::i;:::-;:22;;7623:1;7602:22;:::i;:::-;;;:::i;:::-;;:49;;;7350:408;7598:119;;7737:10;7730:17;:::o;7598:119::-;7678:24;7695:6;7678:24;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;7602:49;7628:6;;:18;:23;;7650:1;7628:23;:::i;:::-;;;:::i;:::-;;7602:49;;8671:770;8727:283;;;;;;;;;9085:17;:10;:17;:::i;:::-;:21;;9105:1;9085:21;:::i;:::-;;;:::i;:::-;;9081:354;;;;9210:158;;;;;;9081:354;9405:19;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;",
                "storageLayout": {
                    "storage": [
                        {
                            "astId": 58,
                            "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_58_32_477/.certora_sources/src/StakingMining.sol:StakingMining",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "20",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "contractName": "IERC20",
                                "type": "Contract"
                            },
                            "label": "erc20",
                            "offset": 0,
                            "slot": "0",
                            "type": "t_contract(IERC20)2552"
                        },
                        {
                            "astId": 60,
                            "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_58_32_477/.certora_sources/src/StakingMining.sol:StakingMining",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint256",
                                "type": "Primitive"
                            },
                            "label": "rewardPerSecond",
                            "offset": 0,
                            "slot": "1",
                            "type": "t_uint256"
                        },
                        {
                            "astId": 62,
                            "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_58_32_477/.certora_sources/src/StakingMining.sol:StakingMining",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint256",
                                "type": "Primitive"
                            },
                            "label": "startTimestamp",
                            "offset": 0,
                            "slot": "2",
                            "type": "t_uint256"
                        },
                        {
                            "astId": 64,
                            "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_58_32_477/.certora_sources/src/StakingMining.sol:StakingMining",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint256",
                                "type": "Primitive"
                            },
                            "label": "endTimestamp",
                            "offset": 0,
                            "slot": "3",
                            "type": "t_uint256"
                        },
                        {
                            "astId": 67,
                            "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_58_32_477/.certora_sources/src/StakingMining.sol:StakingMining",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "20",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "contractName": "SalesFactory",
                                "type": "Contract"
                            },
                            "label": "salesFactory",
                            "offset": 0,
                            "slot": "4",
                            "type": "t_contract(SalesFactory)1727"
                        },
                        {
                            "astId": 69,
                            "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_58_32_477/.certora_sources/src/StakingMining.sol:StakingMining",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint256",
                                "type": "Primitive"
                            },
                            "label": "paidOut",
                            "offset": 0,
                            "slot": "5",
                            "type": "t_uint256"
                        },
                        {
                            "astId": 71,
                            "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_58_32_477/.certora_sources/src/StakingMining.sol:StakingMining",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint256",
                                "type": "Primitive"
                            },
                            "label": "totalRewards",
                            "offset": 0,
                            "slot": "6",
                            "type": "t_uint256"
                        },
                        {
                            "astId": 75,
                            "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_58_32_477/.certora_sources/src/StakingMining.sol:StakingMining",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "dynamicArrayBaseType": {
                                    "annotations": [
                                        {
                                            "numberOfBytes": "160",
                                            "type": "StorageAnnotation"
                                        }
                                    ],
                                    "astId": 55,
                                    "canonicalId": "src/StakingMining.sol|StakingMining.Pool",
                                    "containingContract": "StakingMining",
                                    "structMembers": [
                                        {
                                            "name": "lpToken",
                                            "type": {
                                                "annotations": [
                                                    {
                                                        "numberOfBytes": "20",
                                                        "offset": 0,
                                                        "slot": "0",
                                                        "type": "StorageAnnotation"
                                                    }
                                                ],
                                                "contractName": "IERC20",
                                                "type": "Contract"
                                            }
                                        },
                                        {
                                            "name": "allocPoint",
                                            "type": {
                                                "annotations": [
                                                    {
                                                        "numberOfBytes": "32",
                                                        "offset": 0,
                                                        "slot": "1",
                                                        "type": "StorageAnnotation"
                                                    }
                                                ],
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "lastRewardTimestamp",
                                            "type": {
                                                "annotations": [
                                                    {
                                                        "numberOfBytes": "32",
                                                        "offset": 0,
                                                        "slot": "2",
                                                        "type": "StorageAnnotation"
                                                    }
                                                ],
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "accERC20PerShare",
                                            "type": {
                                                "annotations": [
                                                    {
                                                        "numberOfBytes": "32",
                                                        "offset": 0,
                                                        "slot": "3",
                                                        "type": "StorageAnnotation"
                                                    }
                                                ],
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        },
                                        {
                                            "name": "totalDeposits",
                                            "type": {
                                                "annotations": [
                                                    {
                                                        "numberOfBytes": "32",
                                                        "offset": 0,
                                                        "slot": "4",
                                                        "type": "StorageAnnotation"
                                                    }
                                                ],
                                                "primitiveName": "uint256",
                                                "type": "Primitive"
                                            }
                                        }
                                    ],
                                    "structName": "Pool",
                                    "type": "UserDefinedStruct"
                                },
                                "type": "Array"
                            },
                            "label": "poolArr",
                            "offset": 0,
                            "slot": "7",
                            "type": "t_array(t_struct(Pool)55_storage)dyn_storage"
                        },
                        {
                            "astId": 82,
                            "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_58_32_477/.certora_sources/src/StakingMining.sol:StakingMining",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "mappingKeyType": {
                                    "annotations": [
                                        {
                                            "numberOfBytes": "32",
                                            "type": "StorageAnnotation"
                                        }
                                    ],
                                    "primitiveName": "uint256",
                                    "type": "Primitive"
                                },
                                "mappingValueType": {
                                    "annotations": [
                                        {
                                            "numberOfBytes": "32",
                                            "type": "StorageAnnotation"
                                        }
                                    ],
                                    "mappingKeyType": {
                                        "annotations": [
                                            {
                                                "numberOfBytes": "20",
                                                "type": "StorageAnnotation"
                                            }
                                        ],
                                        "primitiveName": "address",
                                        "type": "Primitive"
                                    },
                                    "mappingValueType": {
                                        "annotations": [
                                            {
                                                "numberOfBytes": "128",
                                                "type": "StorageAnnotation"
                                            }
                                        ],
                                        "astId": 43,
                                        "canonicalId": "src/StakingMining.sol|StakingMining.User",
                                        "containingContract": "StakingMining",
                                        "structMembers": [
                                            {
                                                "name": "amount",
                                                "type": {
                                                    "annotations": [
                                                        {
                                                            "numberOfBytes": "32",
                                                            "offset": 0,
                                                            "slot": "0",
                                                            "type": "StorageAnnotation"
                                                        }
                                                    ],
                                                    "primitiveName": "uint256",
                                                    "type": "Primitive"
                                                }
                                            },
                                            {
                                                "name": "rewardDebt",
                                                "type": {
                                                    "annotations": [
                                                        {
                                                            "numberOfBytes": "32",
                                                            "offset": 0,
                                                            "slot": "1",
                                                            "type": "StorageAnnotation"
                                                        }
                                                    ],
                                                    "primitiveName": "uint256",
                                                    "type": "Primitive"
                                                }
                                            },
                                            {
                                                "name": "tokensUnlockTime",
                                                "type": {
                                                    "annotations": [
                                                        {
                                                            "numberOfBytes": "32",
                                                            "offset": 0,
                                                            "slot": "2",
                                                            "type": "StorageAnnotation"
                                                        }
                                                    ],
                                                    "primitiveName": "uint256",
                                                    "type": "Primitive"
                                                }
                                            },
                                            {
                                                "name": "salesRegistered",
                                                "type": {
                                                    "annotations": [
                                                        {
                                                            "numberOfBytes": "32",
                                                            "offset": 0,
                                                            "slot": "3",
                                                            "type": "StorageAnnotation"
                                                        }
                                                    ],
                                                    "dynamicArrayBaseType": {
                                                        "annotations": [
                                                            {
                                                                "numberOfBytes": "20",
                                                                "type": "StorageAnnotation"
                                                            }
                                                        ],
                                                        "primitiveName": "address",
                                                        "type": "Primitive"
                                                    },
                                                    "type": "Array"
                                                }
                                            }
                                        ],
                                        "structName": "User",
                                        "type": "UserDefinedStruct"
                                    },
                                    "type": "Mapping"
                                },
                                "type": "Mapping"
                            },
                            "label": "userMap",
                            "offset": 0,
                            "slot": "8",
                            "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(User)43_storage))"
                        },
                        {
                            "astId": 84,
                            "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_58_32_477/.certora_sources/src/StakingMining.sol:StakingMining",
                            "descriptor": {
                                "annotations": [
                                    {
                                        "numberOfBytes": "32",
                                        "type": "StorageAnnotation"
                                    }
                                ],
                                "primitiveName": "uint256",
                                "type": "Primitive"
                            },
                            "label": "totalAllocPoint",
                            "offset": 0,
                            "slot": "9",
                            "type": "t_uint256"
                        }
                    ],
                    "types": {
                        "t_address": {
                            "encoding": "inplace",
                            "label": "address",
                            "numberOfBytes": "20"
                        },
                        "t_array(t_address)dyn_storage": {
                            "base": "t_address",
                            "encoding": "dynamic_array",
                            "label": "address[]",
                            "numberOfBytes": "32"
                        },
                        "t_array(t_struct(Pool)55_storage)dyn_storage": {
                            "base": "t_struct(Pool)55_storage",
                            "encoding": "dynamic_array",
                            "label": "struct StakingMining.Pool[]",
                            "numberOfBytes": "32"
                        },
                        "t_contract(IERC20)2552": {
                            "encoding": "inplace",
                            "label": "contract IERC20",
                            "numberOfBytes": "20"
                        },
                        "t_contract(SalesFactory)1727": {
                            "encoding": "inplace",
                            "label": "contract SalesFactory",
                            "numberOfBytes": "20"
                        },
                        "t_mapping(t_address,t_struct(User)43_storage)": {
                            "encoding": "mapping",
                            "key": "t_address",
                            "label": "mapping(address => struct StakingMining.User)",
                            "numberOfBytes": "32",
                            "value": "t_struct(User)43_storage"
                        },
                        "t_mapping(t_uint256,t_mapping(t_address,t_struct(User)43_storage))": {
                            "encoding": "mapping",
                            "key": "t_uint256",
                            "label": "mapping(uint256 => mapping(address => struct StakingMining.User))",
                            "numberOfBytes": "32",
                            "value": "t_mapping(t_address,t_struct(User)43_storage)"
                        },
                        "t_struct(Pool)55_storage": {
                            "encoding": "inplace",
                            "label": "struct StakingMining.Pool",
                            "members": [
                                {
                                    "astId": 46,
                                    "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_58_32_477/.certora_sources/src/StakingMining.sol:StakingMining",
                                    "label": "lpToken",
                                    "offset": 0,
                                    "slot": "0",
                                    "type": "t_contract(IERC20)2552"
                                },
                                {
                                    "astId": 48,
                                    "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_58_32_477/.certora_sources/src/StakingMining.sol:StakingMining",
                                    "label": "allocPoint",
                                    "offset": 0,
                                    "slot": "1",
                                    "type": "t_uint256"
                                },
                                {
                                    "astId": 50,
                                    "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_58_32_477/.certora_sources/src/StakingMining.sol:StakingMining",
                                    "label": "lastRewardTimestamp",
                                    "offset": 0,
                                    "slot": "2",
                                    "type": "t_uint256"
                                },
                                {
                                    "astId": 52,
                                    "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_58_32_477/.certora_sources/src/StakingMining.sol:StakingMining",
                                    "label": "accERC20PerShare",
                                    "offset": 0,
                                    "slot": "3",
                                    "type": "t_uint256"
                                },
                                {
                                    "astId": 54,
                                    "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_58_32_477/.certora_sources/src/StakingMining.sol:StakingMining",
                                    "label": "totalDeposits",
                                    "offset": 0,
                                    "slot": "4",
                                    "type": "t_uint256"
                                }
                            ],
                            "numberOfBytes": "160"
                        },
                        "t_struct(User)43_storage": {
                            "encoding": "inplace",
                            "label": "struct StakingMining.User",
                            "members": [
                                {
                                    "astId": 35,
                                    "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_58_32_477/.certora_sources/src/StakingMining.sol:StakingMining",
                                    "label": "amount",
                                    "offset": 0,
                                    "slot": "0",
                                    "type": "t_uint256"
                                },
                                {
                                    "astId": 37,
                                    "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_58_32_477/.certora_sources/src/StakingMining.sol:StakingMining",
                                    "label": "rewardDebt",
                                    "offset": 0,
                                    "slot": "1",
                                    "type": "t_uint256"
                                },
                                {
                                    "astId": 39,
                                    "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_58_32_477/.certora_sources/src/StakingMining.sol:StakingMining",
                                    "label": "tokensUnlockTime",
                                    "offset": 0,
                                    "slot": "2",
                                    "type": "t_uint256"
                                },
                                {
                                    "astId": 42,
                                    "contract": "/Users/xinchong/WorkSpace/fd-staking/.certora_internal/25_04_02_22_58_32_477/.certora_sources/src/StakingMining.sol:StakingMining",
                                    "label": "salesRegistered",
                                    "offset": 0,
                                    "slot": "3",
                                    "type": "t_array(t_address)dyn_storage"
                                }
                            ],
                            "numberOfBytes": "128"
                        },
                        "t_uint256": {
                            "encoding": "inplace",
                            "label": "uint256",
                            "numberOfBytes": "32"
                        }
                    }
                },
                "transientStorageLayout": null,
                "varmap": ""
            }
        ],
        "legacyStructLinking": {},
        "library_addresses": [],
        "origSourceDir": ".pre_autofinders.1",
        "primary_contract": "StakingMining",
        "primary_contract_address": "00000000ce4604a000000000000000000000003d",
        "prototypeFor": [],
        "sdc_name": "StakingMining.sol_1",
        "sourceDir": ".post_autofinders.1",
        "srclist": {
            "0": "src/LibCalReward.sol",
            "1": "src/StakingMining.sol",
            "2": "src/sale/IceFrogSale.sol",
            "3": "src/sale/SalesFactory.sol",
            "4": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
            "5": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
            "6": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol",
            "7": "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol",
            "8": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/access/Ownable.sol",
            "9": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/interfaces/IERC1363.sol",
            "10": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/interfaces/IERC165.sol",
            "11": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol",
            "12": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/interfaces/IERC20.sol",
            "13": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol",
            "14": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol",
            "15": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol",
            "16": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
            "17": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
            "18": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Address.sol",
            "19": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Context.sol",
            "20": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Errors.sol",
            "21": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Panic.sol",
            "22": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol",
            "23": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol",
            "24": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/Strings.sol",
            "25": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
            "26": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/cryptography/MessageHashUtils.sol",
            "27": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
            "28": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
            "29": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol",
            "30": "lib/openzeppelin-contracts-upgradeable/lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol"
        },
        "state": {},
        "structLinkingInfo": {}
    }
}